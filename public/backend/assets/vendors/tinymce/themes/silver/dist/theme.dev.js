"use strict";function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance");}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _typeof(obj){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}/**
 * TinyMCE version 6.1.2 (2022-07-29)
 */(function(){'use strict';var _mergeWith;var getPrototypeOf=Object.getPrototypeOf;var hasProto=function hasProto(v,constructor,predicate){var _a;if(predicate(v,constructor.prototype)){return true;}else{return((_a=v.constructor)===null||_a===void 0?void 0:_a.name)===constructor.name;}};var typeOf=function typeOf(x){var t=_typeof(x);if(x===null){return'null';}else if(t==='object'&&Array.isArray(x)){return'array';}else if(t==='object'&&hasProto(x,String,function(o,proto){return proto.isPrototypeOf(o);})){return'string';}else{return t;}};var isType$1=function isType$1(type){return function(value){return typeOf(value)===type;};};var isSimpleType=function isSimpleType(type){return function(value){return _typeof(value)===type;};};var eq$1=function eq$1(t){return function(a){return t===a;};};var is$2=function is$2(value,constructor){return isObject(value)&&hasProto(value,constructor,function(o,proto){return getPrototypeOf(o)===proto;});};var isString=isType$1('string');var isObject=isType$1('object');var isPlainObject=function isPlainObject(value){return is$2(value,Object);};var isArray=isType$1('array');var isNull=eq$1(null);var isBoolean=isSimpleType('boolean');var isUndefined=eq$1(undefined);var isNullable=function isNullable(a){return a===null||a===undefined;};var isNonNullable=function isNonNullable(a){return!isNullable(a);};var isFunction=isSimpleType('function');var isNumber=isSimpleType('number');var isArrayOf=function isArrayOf(value,pred){if(isArray(value)){for(var i=0,len=value.length;i<len;++i){if(!pred(value[i])){return false;}}return true;}return false;};var noop=function noop(){};var noarg=function noarg(f){return function(){return f();};};var compose=function compose(fa,fb){return function(){for(var _len=arguments.length,args=new Array(_len),_key2=0;_key2<_len;_key2++){args[_key2]=arguments[_key2];}return fa(fb.apply(null,args));};};var compose1=function compose1(fbc,fab){return function(a){return fbc(fab(a));};};var constant$1=function constant$1(value){return function(){return value;};};var identity=function identity(x){return x;};var tripleEquals=function tripleEquals(a,b){return a===b;};function curry(fn){for(var _len2=arguments.length,initialArgs=new Array(_len2>1?_len2-1:0),_key3=1;_key3<_len2;_key3++){initialArgs[_key3-1]=arguments[_key3];}return function(){for(var _len3=arguments.length,restArgs=new Array(_len3),_key4=0;_key4<_len3;_key4++){restArgs[_key4]=arguments[_key4];}var all=initialArgs.concat(restArgs);return fn.apply(null,all);};}var not=function not(f){return function(t){return!f(t);};};var die=function die(msg){return function(){throw new Error(msg);};};var apply=function apply(f){return f();};var never=constant$1(false);var always=constant$1(true);var global$a=tinymce.util.Tools.resolve('tinymce.ThemeManager');var Optional=/*#__PURE__*/function(){function Optional(tag,value){_classCallCheck(this,Optional);this.tag=tag;this.value=value;}_createClass(Optional,[{key:"fold",value:function fold(onNone,onSome){if(this.tag){return onSome(this.value);}else{return onNone();}}},{key:"isSome",value:function isSome(){return this.tag;}},{key:"isNone",value:function isNone(){return!this.tag;}},{key:"map",value:function map(mapper){if(this.tag){return Optional.some(mapper(this.value));}else{return Optional.none();}}},{key:"bind",value:function bind(binder){if(this.tag){return binder(this.value);}else{return Optional.none();}}},{key:"exists",value:function exists(predicate){return this.tag&&predicate(this.value);}},{key:"forall",value:function forall(predicate){return!this.tag||predicate(this.value);}},{key:"filter",value:function filter(predicate){if(!this.tag||predicate(this.value)){return this;}else{return Optional.none();}}},{key:"getOr",value:function getOr(replacement){return this.tag?this.value:replacement;}},{key:"or",value:function or(replacement){return this.tag?this:replacement;}},{key:"getOrThunk",value:function getOrThunk(thunk){return this.tag?this.value:thunk();}},{key:"orThunk",value:function orThunk(thunk){return this.tag?this:thunk();}},{key:"getOrDie",value:function getOrDie(message){if(!this.tag){throw new Error(message!==null&&message!==void 0?message:'Called getOrDie on None');}else{return this.value;}}},{key:"getOrNull",value:function getOrNull(){return this.tag?this.value:null;}},{key:"getOrUndefined",value:function getOrUndefined(){return this.value;}},{key:"each",value:function each(worker){if(this.tag){worker(this.value);}}},{key:"toArray",value:function toArray(){return this.tag?[this.value]:[];}},{key:"toString",value:function toString(){return this.tag?"some(".concat(this.value,")"):'none()';}}],[{key:"some",value:function some(value){return new Optional(true,value);}},{key:"none",value:function none(){return Optional.singletonNone;}},{key:"from",value:function from(value){return isNonNullable(value)?Optional.some(value):Optional.none();}}]);return Optional;}();Optional.singletonNone=new Optional(false);var nativeSlice=Array.prototype.slice;var nativeIndexOf=Array.prototype.indexOf;var nativePush=Array.prototype.push;var rawIndexOf=function rawIndexOf(ts,t){return nativeIndexOf.call(ts,t);};var indexOf=function indexOf(xs,x){var r=rawIndexOf(xs,x);return r===-1?Optional.none():Optional.some(r);};var contains$2=function contains$2(xs,x){return rawIndexOf(xs,x)>-1;};var exists=function exists(xs,pred){for(var i=0,len=xs.length;i<len;i++){var x=xs[i];if(pred(x,i)){return true;}}return false;};var range$2=function range$2(num,f){var r=[];for(var i=0;i<num;i++){r.push(f(i));}return r;};var chunk$1=function chunk$1(array,size){var r=[];for(var i=0;i<array.length;i+=size){var s=nativeSlice.call(array,i,i+size);r.push(s);}return r;};var map$2=function map$2(xs,f){var len=xs.length;var r=new Array(len);for(var i=0;i<len;i++){var x=xs[i];r[i]=f(x,i);}return r;};var each$1=function each$1(xs,f){for(var i=0,len=xs.length;i<len;i++){var x=xs[i];f(x,i);}};var eachr=function eachr(xs,f){for(var i=xs.length-1;i>=0;i--){var x=xs[i];f(x,i);}};var partition$3=function partition$3(xs,pred){var pass=[];var fail=[];for(var i=0,len=xs.length;i<len;i++){var x=xs[i];var arr=pred(x,i)?pass:fail;arr.push(x);}return{pass:pass,fail:fail};};var filter$2=function filter$2(xs,pred){var r=[];for(var i=0,len=xs.length;i<len;i++){var x=xs[i];if(pred(x,i)){r.push(x);}}return r;};var foldr=function foldr(xs,f,acc){eachr(xs,function(x,i){acc=f(acc,x,i);});return acc;};var foldl=function foldl(xs,f,acc){each$1(xs,function(x,i){acc=f(acc,x,i);});return acc;};var findUntil=function findUntil(xs,pred,until){for(var i=0,len=xs.length;i<len;i++){var x=xs[i];if(pred(x,i)){return Optional.some(x);}else if(until(x,i)){break;}}return Optional.none();};var find$5=function find$5(xs,pred){return findUntil(xs,pred,never);};var findIndex$1=function findIndex$1(xs,pred){for(var i=0,len=xs.length;i<len;i++){var x=xs[i];if(pred(x,i)){return Optional.some(i);}}return Optional.none();};var flatten=function flatten(xs){var r=[];for(var i=0,len=xs.length;i<len;++i){if(!isArray(xs[i])){throw new Error('Arr.flatten item '+i+' was not an array, input: '+xs);}nativePush.apply(r,xs[i]);}return r;};var bind$3=function bind$3(xs,f){return flatten(map$2(xs,f));};var forall=function forall(xs,pred){for(var i=0,len=xs.length;i<len;++i){var x=xs[i];if(pred(x,i)!==true){return false;}}return true;};var reverse=function reverse(xs){var r=nativeSlice.call(xs,0);r.reverse();return r;};var difference=function difference(a1,a2){return filter$2(a1,function(x){return!contains$2(a2,x);});};var mapToObject=function mapToObject(xs,f){var r={};for(var i=0,len=xs.length;i<len;i++){var x=xs[i];r[String(x)]=f(x,i);}return r;};var pure$2=function pure$2(x){return[x];};var sort=function sort(xs,comparator){var copy=nativeSlice.call(xs,0);copy.sort(comparator);return copy;};var get$h=function get$h(xs,i){return i>=0&&i<xs.length?Optional.some(xs[i]):Optional.none();};var head=function head(xs){return get$h(xs,0);};var last$1=function last$1(xs){return get$h(xs,xs.length-1);};var from=isFunction(Array.from)?Array.from:function(x){return nativeSlice.call(x);};var findMap=function findMap(arr,f){for(var i=0;i<arr.length;i++){var _r=f(arr[i],i);if(_r.isSome()){return _r;}}return Optional.none();};var keys=Object.keys;var hasOwnProperty=Object.hasOwnProperty;var each=function each(obj,f){var props=keys(obj);for(var k=0,len=props.length;k<len;k++){var i=props[k];var x=obj[i];f(x,i);}};var map$1=function map$1(obj,f){return tupleMap(obj,function(x,i){return{k:i,v:f(x,i)};});};var tupleMap=function tupleMap(obj,f){var r={};each(obj,function(x,i){var tuple=f(x,i);r[tuple.k]=tuple.v;});return r;};var objAcc=function objAcc(r){return function(x,i){r[i]=x;};};var internalFilter=function internalFilter(obj,pred,onTrue,onFalse){var r={};each(obj,function(x,i){(pred(x,i)?onTrue:onFalse)(x,i);});return r;};var bifilter=function bifilter(obj,pred){var t={};var f={};internalFilter(obj,pred,objAcc(t),objAcc(f));return{t:t,f:f};};var filter$1=function filter$1(obj,pred){var t={};internalFilter(obj,pred,objAcc(t),noop);return t;};var mapToArray=function mapToArray(obj,f){var r=[];each(obj,function(value,name){r.push(f(value,name));});return r;};var find$4=function find$4(obj,pred){var props=keys(obj);for(var k=0,len=props.length;k<len;k++){var i=props[k];var x=obj[i];if(pred(x,i,obj)){return Optional.some(x);}}return Optional.none();};var values=function values(obj){return mapToArray(obj,identity);};var get$g=function get$g(obj,key){return has$2(obj,key)?Optional.from(obj[key]):Optional.none();};var has$2=function has$2(obj,key){return hasOwnProperty.call(obj,key);};var hasNonNullableKey=function hasNonNullableKey(obj,key){return has$2(obj,key)&&obj[key]!==undefined&&obj[key]!==null;};var is$1=function is$1(lhs,rhs){var comparator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:tripleEquals;return lhs.exists(function(left){return comparator(left,rhs);});};var equals=function equals(lhs,rhs){var comparator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:tripleEquals;return lift2(lhs,rhs,comparator).getOr(lhs.isNone()&&rhs.isNone());};var cat=function cat(arr){var r=[];var push=function push(x){r.push(x);};for(var i=0;i<arr.length;i++){arr[i].each(push);}return r;};var sequence=function sequence(arr){var r=[];for(var i=0;i<arr.length;i++){var x=arr[i];if(x.isSome()){r.push(x.getOrDie());}else{return Optional.none();}}return Optional.some(r);};var lift2=function lift2(oa,ob,f){return oa.isSome()&&ob.isSome()?Optional.some(f(oa.getOrDie(),ob.getOrDie())):Optional.none();};var lift3=function lift3(oa,ob,oc,f){return oa.isSome()&&ob.isSome()&&oc.isSome()?Optional.some(f(oa.getOrDie(),ob.getOrDie(),oc.getOrDie())):Optional.none();};var mapFrom=function mapFrom(a,f){return a!==undefined&&a!==null?Optional.some(f(a)):Optional.none();};var someIf=function someIf(b,a){return b?Optional.some(a):Optional.none();};var addToEnd=function addToEnd(str,suffix){return str+suffix;};var removeFromStart=function removeFromStart(str,numChars){return str.substring(numChars);};var checkRange=function checkRange(str,substr,start){return substr===''||str.length>=substr.length&&str.substr(start,start+substr.length)===substr;};var removeLeading=function removeLeading(str,prefix){return startsWith(str,prefix)?removeFromStart(str,prefix.length):str;};var ensureTrailing=function ensureTrailing(str,suffix){return endsWith(str,suffix)?str:addToEnd(str,suffix);};var contains$1=function contains$1(str,substr){return str.indexOf(substr)!==-1;};var startsWith=function startsWith(str,prefix){return checkRange(str,prefix,0);};var endsWith=function endsWith(str,suffix){return checkRange(str,suffix,str.length-suffix.length);};var blank=function blank(r){return function(s){return s.replace(r,'');};};var trim$1=blank(/^\s+|\s+$/g);var isNotEmpty=function isNotEmpty(s){return s.length>0;};var isEmpty=function isEmpty(s){return!isNotEmpty(s);};var isSupported$1=function isSupported$1(dom){return dom.style!==undefined&&isFunction(dom.style.getPropertyValue);};var fromHtml$2=function fromHtml$2(html,scope){var doc=scope||document;var div=doc.createElement('div');div.innerHTML=html;if(!div.hasChildNodes()||div.childNodes.length>1){var message='HTML does not have a single root node';console.error(message,html);throw new Error(message);}return fromDom(div.childNodes[0]);};var fromTag=function fromTag(tag,scope){var doc=scope||document;var node=doc.createElement(tag);return fromDom(node);};var fromText=function fromText(text,scope){var doc=scope||document;var node=doc.createTextNode(text);return fromDom(node);};var fromDom=function fromDom(node){if(node===null||node===undefined){throw new Error('Node cannot be null or undefined');}return{dom:node};};var fromPoint=function fromPoint(docElm,x,y){return Optional.from(docElm.dom.elementFromPoint(x,y)).map(fromDom);};var SugarElement={fromHtml:fromHtml$2,fromTag:fromTag,fromText:fromText,fromDom:fromDom,fromPoint:fromPoint};typeof window!=='undefined'?window:Function('return this;')();var DOCUMENT=9;var DOCUMENT_FRAGMENT=11;var ELEMENT=1;var TEXT=3;var name$3=function name$3(element){var r=element.dom.nodeName;return r.toLowerCase();};var type$1=function type$1(element){return element.dom.nodeType;};var isType=function isType(t){return function(element){return type$1(element)===t;};};var isElement$1=isType(ELEMENT);var isText=isType(TEXT);var isDocument=isType(DOCUMENT);var isDocumentFragment=isType(DOCUMENT_FRAGMENT);var isTag=function isTag(tag){return function(e){return isElement$1(e)&&name$3(e)===tag;};};var is=function is(element,selector){var dom=element.dom;if(dom.nodeType!==ELEMENT){return false;}else{var elem=dom;if(elem.matches!==undefined){return elem.matches(selector);}else if(elem.msMatchesSelector!==undefined){return elem.msMatchesSelector(selector);}else if(elem.webkitMatchesSelector!==undefined){return elem.webkitMatchesSelector(selector);}else if(elem.mozMatchesSelector!==undefined){return elem.mozMatchesSelector(selector);}else{throw new Error('Browser lacks native selectors');}}};var bypassSelector=function bypassSelector(dom){return dom.nodeType!==ELEMENT&&dom.nodeType!==DOCUMENT&&dom.nodeType!==DOCUMENT_FRAGMENT||dom.childElementCount===0;};var all$3=function all$3(selector,scope){var base=scope===undefined?document:scope.dom;return bypassSelector(base)?[]:map$2(base.querySelectorAll(selector),SugarElement.fromDom);};var one=function one(selector,scope){var base=scope===undefined?document:scope.dom;return bypassSelector(base)?Optional.none():Optional.from(base.querySelector(selector)).map(SugarElement.fromDom);};var eq=function eq(e1,e2){return e1.dom===e2.dom;};var contains=function contains(e1,e2){var d1=e1.dom;var d2=e2.dom;return d1===d2?false:d1.contains(d2);};var owner$4=function owner$4(element){return SugarElement.fromDom(element.dom.ownerDocument);};var documentOrOwner=function documentOrOwner(dos){return isDocument(dos)?dos:owner$4(dos);};var documentElement=function documentElement(element){return SugarElement.fromDom(documentOrOwner(element).dom.documentElement);};var defaultView=function defaultView(element){return SugarElement.fromDom(documentOrOwner(element).dom.defaultView);};var parent=function parent(element){return Optional.from(element.dom.parentNode).map(SugarElement.fromDom);};var parentElement=function parentElement(element){return Optional.from(element.dom.parentElement).map(SugarElement.fromDom);};var offsetParent=function offsetParent(element){return Optional.from(element.dom.offsetParent).map(SugarElement.fromDom);};var nextSibling=function nextSibling(element){return Optional.from(element.dom.nextSibling).map(SugarElement.fromDom);};var children=function children(element){return map$2(element.dom.childNodes,SugarElement.fromDom);};var child$2=function child$2(element,index){var cs=element.dom.childNodes;return Optional.from(cs[index]).map(SugarElement.fromDom);};var firstChild=function firstChild(element){return child$2(element,0);};var spot=function spot(element,offset){return{element:element,offset:offset};};var leaf=function leaf(element,offset){var cs=children(element);return cs.length>0&&offset<cs.length?spot(cs[offset],0):spot(element,offset);};var isShadowRoot=function isShadowRoot(dos){return isDocumentFragment(dos)&&isNonNullable(dos.dom.host);};var supported=isFunction(Element.prototype.attachShadow)&&isFunction(Node.prototype.getRootNode);var isSupported=constant$1(supported);var getRootNode=supported?function(e){return SugarElement.fromDom(e.dom.getRootNode());}:documentOrOwner;var getContentContainer=function getContentContainer(dos){return isShadowRoot(dos)?dos:SugarElement.fromDom(documentOrOwner(dos).dom.body);};var isInShadowRoot=function isInShadowRoot(e){return getShadowRoot(e).isSome();};var getShadowRoot=function getShadowRoot(e){var r=getRootNode(e);return isShadowRoot(r)?Optional.some(r):Optional.none();};var getShadowHost=function getShadowHost(e){return SugarElement.fromDom(e.dom.host);};var getOriginalEventTarget=function getOriginalEventTarget(event){if(isSupported()&&isNonNullable(event.target)){var el=SugarElement.fromDom(event.target);if(isElement$1(el)&&isOpenShadowHost(el)){if(event.composed&&event.composedPath){var composedPath=event.composedPath();if(composedPath){return head(composedPath);}}}}return Optional.from(event.target);};var isOpenShadowHost=function isOpenShadowHost(element){return isNonNullable(element.dom.shadowRoot);};var inBody=function inBody(element){var dom=isText(element)?element.dom.parentNode:element.dom;if(dom===undefined||dom===null||dom.ownerDocument===null){return false;}var doc=dom.ownerDocument;return getShadowRoot(SugarElement.fromDom(dom)).fold(function(){return doc.body.contains(dom);},compose1(inBody,getShadowHost));};var body=function body(){return getBody(SugarElement.fromDom(document));};var getBody=function getBody(doc){var b=doc.dom.body;if(b===null||b===undefined){throw new Error('Body is not available yet');}return SugarElement.fromDom(b);};var rawSet=function rawSet(dom,key,value){if(isString(value)||isBoolean(value)||isNumber(value)){dom.setAttribute(key,value+'');}else{console.error('Invalid call to Attribute.set. Key ',key,':: Value ',value,':: Element ',dom);throw new Error('Attribute value was not simple');}};var set$9=function set$9(element,key,value){rawSet(element.dom,key,value);};var setAll$1=function setAll$1(element,attrs){var dom=element.dom;each(attrs,function(v,k){rawSet(dom,k,v);});};var get$f=function get$f(element,key){var v=element.dom.getAttribute(key);return v===null?undefined:v;};var getOpt=function getOpt(element,key){return Optional.from(get$f(element,key));};var has$1=function has$1(element,key){var dom=element.dom;return dom&&dom.hasAttribute?dom.hasAttribute(key):false;};var remove$7=function remove$7(element,key){element.dom.removeAttribute(key);};var clone$1=function clone$1(element){return foldl(element.dom.attributes,function(acc,attr){acc[attr.name]=attr.value;return acc;},{});};var internalSet=function internalSet(dom,property,value){if(!isString(value)){console.error('Invalid call to CSS.set. Property ',property,':: Value ',value,':: Element ',dom);throw new Error('CSS value must be a string: '+value);}if(isSupported$1(dom)){dom.style.setProperty(property,value);}};var internalRemove=function internalRemove(dom,property){if(isSupported$1(dom)){dom.style.removeProperty(property);}};var set$8=function set$8(element,property,value){var dom=element.dom;internalSet(dom,property,value);};var setAll=function setAll(element,css){var dom=element.dom;each(css,function(v,k){internalSet(dom,k,v);});};var setOptions=function setOptions(element,css){var dom=element.dom;each(css,function(v,k){v.fold(function(){internalRemove(dom,k);},function(value){internalSet(dom,k,value);});});};var get$e=function get$e(element,property){var dom=element.dom;var styles=window.getComputedStyle(dom);var r=styles.getPropertyValue(property);return r===''&&!inBody(element)?getUnsafeProperty(dom,property):r;};var getUnsafeProperty=function getUnsafeProperty(dom,property){return isSupported$1(dom)?dom.style.getPropertyValue(property):'';};var getRaw=function getRaw(element,property){var dom=element.dom;var raw=getUnsafeProperty(dom,property);return Optional.from(raw).filter(function(r){return r.length>0;});};var getAllRaw=function getAllRaw(element){var css={};var dom=element.dom;if(isSupported$1(dom)){for(var i=0;i<dom.style.length;i++){var ruleName=dom.style.item(i);css[ruleName]=dom.style[ruleName];}}return css;};var isValidValue=function isValidValue(tag,property,value){var element=SugarElement.fromTag(tag);set$8(element,property,value);var style=getRaw(element,property);return style.isSome();};var remove$6=function remove$6(element,property){var dom=element.dom;internalRemove(dom,property);if(is$1(getOpt(element,'style').map(trim$1),'')){remove$7(element,'style');}};var reflow=function reflow(e){return e.dom.offsetWidth;};var Dimension=function Dimension(name,getOffset){var set=function set(element,h){if(!isNumber(h)&&!h.match(/^[0-9]+$/)){throw new Error(name+'.set accepts only positive integer values. Value was '+h);}var dom=element.dom;if(isSupported$1(dom)){dom.style[name]=h+'px';}};var get=function get(element){var r=getOffset(element);if(r<=0||r===null){var css=get$e(element,name);return parseFloat(css)||0;}return r;};var getOuter=get;var aggregate=function aggregate(element,properties){return foldl(properties,function(acc,property){var val=get$e(element,property);var value=val===undefined?0:parseInt(val,10);return isNaN(value)?acc:acc+value;},0);};var max=function max(element,value,properties){var cumulativeInclusions=aggregate(element,properties);var absoluteMax=value>cumulativeInclusions?value-cumulativeInclusions:0;return absoluteMax;};return{set:set,get:get,getOuter:getOuter,aggregate:aggregate,max:max};};var api$2=Dimension('height',function(element){var dom=element.dom;return inBody(element)?dom.getBoundingClientRect().height:dom.offsetHeight;});var get$d=function get$d(element){return api$2.get(element);};var getOuter$2=function getOuter$2(element){return api$2.getOuter(element);};var setMax$1=function setMax$1(element,value){var inclusions=['margin-top','border-top-width','padding-top','padding-bottom','border-bottom-width','margin-bottom'];var absMax=api$2.max(element,value,inclusions);set$8(element,'max-height',absMax+'px');};var r$1=function r$1(left,top){var translate=function translate(x,y){return r$1(left+x,top+y);};return{left:left,top:top,translate:translate};};var SugarPosition=r$1;var boxPosition=function boxPosition(dom){var box=dom.getBoundingClientRect();return SugarPosition(box.left,box.top);};var firstDefinedOrZero=function firstDefinedOrZero(a,b){if(a!==undefined){return a;}else{return b!==undefined?b:0;}};var absolute$3=function absolute$3(element){var doc=element.dom.ownerDocument;var body=doc.body;var win=doc.defaultView;var html=doc.documentElement;if(body===element.dom){return SugarPosition(body.offsetLeft,body.offsetTop);}var scrollTop=firstDefinedOrZero(win===null||win===void 0?void 0:win.pageYOffset,html.scrollTop);var scrollLeft=firstDefinedOrZero(win===null||win===void 0?void 0:win.pageXOffset,html.scrollLeft);var clientTop=firstDefinedOrZero(html.clientTop,body.clientTop);var clientLeft=firstDefinedOrZero(html.clientLeft,body.clientLeft);return viewport$1(element).translate(scrollLeft-clientLeft,scrollTop-clientTop);};var viewport$1=function viewport$1(element){var dom=element.dom;var doc=dom.ownerDocument;var body=doc.body;if(body===dom){return SugarPosition(body.offsetLeft,body.offsetTop);}if(!inBody(element)){return SugarPosition(0,0);}return boxPosition(dom);};var api$1=Dimension('width',function(element){return element.dom.offsetWidth;});var set$7=function set$7(element,h){return api$1.set(element,h);};var get$c=function get$c(element){return api$1.get(element);};var getOuter$1=function getOuter$1(element){return api$1.getOuter(element);};var setMax=function setMax(element,value){var inclusions=['margin-left','border-left-width','padding-left','padding-right','border-right-width','margin-right'];var absMax=api$1.max(element,value,inclusions);set$8(element,'max-width',absMax+'px');};var cached=function cached(f){var called=false;var r;return function(){if(!called){called=true;for(var _len4=arguments.length,args=new Array(_len4),_key5=0;_key5<_len4;_key5++){args[_key5]=arguments[_key5];}r=f.apply(null,args);}return r;};};var DeviceType=function DeviceType(os,browser,userAgent,mediaMatch){var isiPad=os.isiOS()&&/ipad/i.test(userAgent)===true;var isiPhone=os.isiOS()&&!isiPad;var isMobile=os.isiOS()||os.isAndroid();var isTouch=isMobile||mediaMatch('(pointer:coarse)');var isTablet=isiPad||!isiPhone&&isMobile&&mediaMatch('(min-device-width:768px)');var isPhone=isiPhone||isMobile&&!isTablet;var iOSwebview=browser.isSafari()&&os.isiOS()&&/safari/i.test(userAgent)===false;var isDesktop=!isPhone&&!isTablet&&!iOSwebview;return{isiPad:constant$1(isiPad),isiPhone:constant$1(isiPhone),isTablet:constant$1(isTablet),isPhone:constant$1(isPhone),isTouch:constant$1(isTouch),isAndroid:os.isAndroid,isiOS:os.isiOS,isWebView:constant$1(iOSwebview),isDesktop:constant$1(isDesktop)};};var firstMatch=function firstMatch(regexes,s){for(var i=0;i<regexes.length;i++){var x=regexes[i];if(x.test(s)){return x;}}return undefined;};var find$3=function find$3(regexes,agent){var r=firstMatch(regexes,agent);if(!r){return{major:0,minor:0};}var group=function group(i){return Number(agent.replace(r,'$'+i));};return nu$d(group(1),group(2));};var detect$4=function detect$4(versionRegexes,agent){var cleanedAgent=String(agent).toLowerCase();if(versionRegexes.length===0){return unknown$3();}return find$3(versionRegexes,cleanedAgent);};var unknown$3=function unknown$3(){return nu$d(0,0);};var nu$d=function nu$d(major,minor){return{major:major,minor:minor};};var Version={nu:nu$d,detect:detect$4,unknown:unknown$3};var detectBrowser$1=function detectBrowser$1(browsers,userAgentData){return findMap(userAgentData.brands,function(uaBrand){var lcBrand=uaBrand.brand.toLowerCase();return find$5(browsers,function(browser){var _a;return lcBrand===((_a=browser.brand)===null||_a===void 0?void 0:_a.toLowerCase());}).map(function(info){return{current:info.name,version:Version.nu(parseInt(uaBrand.version,10),0)};});});};var detect$3=function detect$3(candidates,userAgent){var agent=String(userAgent).toLowerCase();return find$5(candidates,function(candidate){return candidate.search(agent);});};var detectBrowser=function detectBrowser(browsers,userAgent){return detect$3(browsers,userAgent).map(function(browser){var version=Version.detect(browser.versionRegexes,userAgent);return{current:browser.name,version:version};});};var detectOs=function detectOs(oses,userAgent){return detect$3(oses,userAgent).map(function(os){var version=Version.detect(os.versionRegexes,userAgent);return{current:os.name,version:version};});};var normalVersionRegex=/.*?version\/\ ?([0-9]+)\.([0-9]+).*/;var checkContains=function checkContains(target){return function(uastring){return contains$1(uastring,target);};};var browsers=[{name:'Edge',versionRegexes:[/.*?edge\/ ?([0-9]+)\.([0-9]+)$/],search:function search(uastring){return contains$1(uastring,'edge/')&&contains$1(uastring,'chrome')&&contains$1(uastring,'safari')&&contains$1(uastring,'applewebkit');}},{name:'Chromium',brand:'Chromium',versionRegexes:[/.*?chrome\/([0-9]+)\.([0-9]+).*/,normalVersionRegex],search:function search(uastring){return contains$1(uastring,'chrome')&&!contains$1(uastring,'chromeframe');}},{name:'IE',versionRegexes:[/.*?msie\ ?([0-9]+)\.([0-9]+).*/,/.*?rv:([0-9]+)\.([0-9]+).*/],search:function search(uastring){return contains$1(uastring,'msie')||contains$1(uastring,'trident');}},{name:'Opera',versionRegexes:[normalVersionRegex,/.*?opera\/([0-9]+)\.([0-9]+).*/],search:checkContains('opera')},{name:'Firefox',versionRegexes:[/.*?firefox\/\ ?([0-9]+)\.([0-9]+).*/],search:checkContains('firefox')},{name:'Safari',versionRegexes:[normalVersionRegex,/.*?cpu os ([0-9]+)_([0-9]+).*/],search:function search(uastring){return(contains$1(uastring,'safari')||contains$1(uastring,'mobile/'))&&contains$1(uastring,'applewebkit');}}];var oses=[{name:'Windows',search:checkContains('win'),versionRegexes:[/.*?windows\ nt\ ?([0-9]+)\.([0-9]+).*/]},{name:'iOS',search:function search(uastring){return contains$1(uastring,'iphone')||contains$1(uastring,'ipad');},versionRegexes:[/.*?version\/\ ?([0-9]+)\.([0-9]+).*/,/.*cpu os ([0-9]+)_([0-9]+).*/,/.*cpu iphone os ([0-9]+)_([0-9]+).*/]},{name:'Android',search:checkContains('android'),versionRegexes:[/.*?android\ ?([0-9]+)\.([0-9]+).*/]},{name:'macOS',search:checkContains('mac os x'),versionRegexes:[/.*?mac\ os\ x\ ?([0-9]+)_([0-9]+).*/]},{name:'Linux',search:checkContains('linux'),versionRegexes:[]},{name:'Solaris',search:checkContains('sunos'),versionRegexes:[]},{name:'FreeBSD',search:checkContains('freebsd'),versionRegexes:[]},{name:'ChromeOS',search:checkContains('cros'),versionRegexes:[/.*?chrome\/([0-9]+)\.([0-9]+).*/]}];var PlatformInfo={browsers:constant$1(browsers),oses:constant$1(oses)};var edge='Edge';var chromium='Chromium';var ie='IE';var opera='Opera';var firefox='Firefox';var safari='Safari';var unknown$2=function unknown$2(){return nu$c({current:undefined,version:Version.unknown()});};var nu$c=function nu$c(info){var current=info.current;var version=info.version;var isBrowser=function isBrowser(name){return function(){return current===name;};};return{current:current,version:version,isEdge:isBrowser(edge),isChromium:isBrowser(chromium),isIE:isBrowser(ie),isOpera:isBrowser(opera),isFirefox:isBrowser(firefox),isSafari:isBrowser(safari)};};var Browser={unknown:unknown$2,nu:nu$c,edge:constant$1(edge),chromium:constant$1(chromium),ie:constant$1(ie),opera:constant$1(opera),firefox:constant$1(firefox),safari:constant$1(safari)};var windows='Windows';var ios='iOS';var android='Android';var linux='Linux';var macos='macOS';var solaris='Solaris';var freebsd='FreeBSD';var chromeos='ChromeOS';var unknown$1=function unknown$1(){return nu$b({current:undefined,version:Version.unknown()});};var nu$b=function nu$b(info){var current=info.current;var version=info.version;var isOS=function isOS(name){return function(){return current===name;};};return{current:current,version:version,isWindows:isOS(windows),isiOS:isOS(ios),isAndroid:isOS(android),isMacOS:isOS(macos),isLinux:isOS(linux),isSolaris:isOS(solaris),isFreeBSD:isOS(freebsd),isChromeOS:isOS(chromeos)};};var OperatingSystem={unknown:unknown$1,nu:nu$b,windows:constant$1(windows),ios:constant$1(ios),android:constant$1(android),linux:constant$1(linux),macos:constant$1(macos),solaris:constant$1(solaris),freebsd:constant$1(freebsd),chromeos:constant$1(chromeos)};var detect$2=function detect$2(userAgent,userAgentDataOpt,mediaMatch){var browsers=PlatformInfo.browsers();var oses=PlatformInfo.oses();var browser=userAgentDataOpt.bind(function(userAgentData){return detectBrowser$1(browsers,userAgentData);}).orThunk(function(){return detectBrowser(browsers,userAgent);}).fold(Browser.unknown,Browser.nu);var os=detectOs(oses,userAgent).fold(OperatingSystem.unknown,OperatingSystem.nu);var deviceType=DeviceType(os,browser,userAgent,mediaMatch);return{browser:browser,os:os,deviceType:deviceType};};var PlatformDetection={detect:detect$2};var mediaMatch=function mediaMatch(query){return window.matchMedia(query).matches;};var platform=cached(function(){return PlatformDetection.detect(navigator.userAgent,Optional.from(navigator.userAgentData),mediaMatch);});var detect$1=function detect$1(){return platform();};var mkEvent=function mkEvent(target,x,y,stop,prevent,kill,raw){return{target:target,x:x,y:y,stop:stop,prevent:prevent,kill:kill,raw:raw};};var fromRawEvent$1=function fromRawEvent$1(rawEvent){var target=SugarElement.fromDom(getOriginalEventTarget(rawEvent).getOr(rawEvent.target));var stop=function stop(){return rawEvent.stopPropagation();};var prevent=function prevent(){return rawEvent.preventDefault();};var kill=compose(prevent,stop);return mkEvent(target,rawEvent.clientX,rawEvent.clientY,stop,prevent,kill,rawEvent);};var handle=function handle(filter,handler){return function(rawEvent){if(filter(rawEvent)){handler(fromRawEvent$1(rawEvent));}};};var binder=function binder(element,event,filter,handler,useCapture){var wrapped=handle(filter,handler);element.dom.addEventListener(event,wrapped,useCapture);return{unbind:curry(unbind,element,event,wrapped,useCapture)};};var bind$2=function bind$2(element,event,filter,handler){return binder(element,event,filter,handler,false);};var capture$1=function capture$1(element,event,filter,handler){return binder(element,event,filter,handler,true);};var unbind=function unbind(element,event,handler,useCapture){element.dom.removeEventListener(event,handler,useCapture);};var before$1=function before$1(marker,element){var parent$1=parent(marker);parent$1.each(function(v){v.dom.insertBefore(element.dom,marker.dom);});};var after$2=function after$2(marker,element){var sibling=nextSibling(marker);sibling.fold(function(){var parent$1=parent(marker);parent$1.each(function(v){append$2(v,element);});},function(v){before$1(v,element);});};var prepend$1=function prepend$1(parent,element){var firstChild$1=firstChild(parent);firstChild$1.fold(function(){append$2(parent,element);},function(v){parent.dom.insertBefore(element.dom,v.dom);});};var append$2=function append$2(parent,element){parent.dom.appendChild(element.dom);};var appendAt=function appendAt(parent,element,index){child$2(parent,index).fold(function(){append$2(parent,element);},function(v){before$1(v,element);});};var append$1=function append$1(parent,elements){each$1(elements,function(x){append$2(parent,x);});};var empty=function empty(element){element.dom.textContent='';each$1(children(element),function(rogue){remove$5(rogue);});};var remove$5=function remove$5(element){var dom=element.dom;if(dom.parentNode!==null){dom.parentNode.removeChild(dom);}};var get$b=function get$b(_DOC){var doc=_DOC!==undefined?_DOC.dom:document;var x=doc.body.scrollLeft||doc.documentElement.scrollLeft;var y=doc.body.scrollTop||doc.documentElement.scrollTop;return SugarPosition(x,y);};var to=function to(x,y,_DOC){var doc=_DOC!==undefined?_DOC.dom:document;var win=doc.defaultView;if(win){win.scrollTo(x,y);}};var get$a=function get$a(_win){var win=_win===undefined?window:_win;if(detect$1().browser.isFirefox()){return Optional.none();}else{return Optional.from(win.visualViewport);}};var bounds$1=function bounds$1(x,y,width,height){return{x:x,y:y,width:width,height:height,right:x+width,bottom:y+height};};var getBounds$3=function getBounds$3(_win){var win=_win===undefined?window:_win;var doc=win.document;var scroll=get$b(SugarElement.fromDom(doc));return get$a(win).fold(function(){var html=win.document.documentElement;var width=html.clientWidth;var height=html.clientHeight;return bounds$1(scroll.left,scroll.top,width,height);},function(visualViewport){return bounds$1(Math.max(visualViewport.pageLeft,scroll.left),Math.max(visualViewport.pageTop,scroll.top),visualViewport.width,visualViewport.height);});};var getDocument=function getDocument(){return SugarElement.fromDom(document);};var walkUp=function walkUp(navigation,doc){var frame=navigation.view(doc);return frame.fold(constant$1([]),function(f){var parent=navigation.owner(f);var rest=walkUp(navigation,parent);return[f].concat(rest);});};var pathTo=function pathTo(element,navigation){var d=navigation.owner(element);var paths=walkUp(navigation,d);return Optional.some(paths);};var view=function view(doc){var _a;var element=doc.dom===document?Optional.none():Optional.from((_a=doc.dom.defaultView)===null||_a===void 0?void 0:_a.frameElement);return element.map(SugarElement.fromDom);};var owner$3=function owner$3(element){return owner$4(element);};var Navigation=/*#__PURE__*/Object.freeze({__proto__:null,view:view,owner:owner$3});var find$2=function find$2(element){var doc=getDocument();var scroll=get$b(doc);var path=pathTo(element,Navigation);return path.fold(curry(absolute$3,element),function(frames){var offset=viewport$1(element);var r=foldr(frames,function(b,a){var loc=viewport$1(a);return{left:b.left+loc.left,top:b.top+loc.top};},{left:0,top:0});return SugarPosition(r.left+offset.left+scroll.left,r.top+offset.top+scroll.top);});};var pointed=function pointed(point,width,height){return{point:point,width:width,height:height};};var rect=function rect(x,y,width,height){return{x:x,y:y,width:width,height:height};};var bounds=function bounds(x,y,width,height){return{x:x,y:y,width:width,height:height,right:x+width,bottom:y+height};};var box$1=function box$1(element){var xy=absolute$3(element);var w=getOuter$1(element);var h=getOuter$2(element);return bounds(xy.left,xy.top,w,h);};var absolute$2=function absolute$2(element){var position=find$2(element);var width=getOuter$1(element);var height=getOuter$2(element);return bounds(position.left,position.top,width,height);};var win=function win(){return getBounds$3(window);};var value$4=function value$4(value){var applyHelper=function applyHelper(fn){return fn(value);};var constHelper=constant$1(value);var outputHelper=function outputHelper(){return output;};var output={tag:true,inner:value,fold:function fold(_onError,onValue){return onValue(value);},isValue:always,isError:never,map:function map(mapper){return Result.value(mapper(value));},mapError:outputHelper,bind:applyHelper,exists:applyHelper,forall:applyHelper,getOr:constHelper,or:outputHelper,getOrThunk:constHelper,orThunk:outputHelper,getOrDie:constHelper,each:function each(fn){fn(value);},toOptional:function toOptional(){return Optional.some(value);}};return output;};var error$1=function error$1(error){var outputHelper=function outputHelper(){return output;};var output={tag:false,inner:error,fold:function fold(onError,_onValue){return onError(error);},isValue:never,isError:always,map:outputHelper,mapError:function mapError(mapper){return Result.error(mapper(error));},bind:outputHelper,exists:never,forall:always,getOr:identity,or:identity,getOrThunk:apply,orThunk:apply,getOrDie:die(String(error)),each:noop,toOptional:Optional.none};return output;};var fromOption=function fromOption(optional,err){return optional.fold(function(){return error$1(err);},value$4);};var Result={value:value$4,error:error$1,fromOption:fromOption};var SimpleResultType;(function(SimpleResultType){SimpleResultType[SimpleResultType['Error']=0]='Error';SimpleResultType[SimpleResultType['Value']=1]='Value';})(SimpleResultType||(SimpleResultType={}));var fold$1=function fold$1(res,onError,onValue){return res.stype===SimpleResultType.Error?onError(res.serror):onValue(res.svalue);};var partition$2=function partition$2(results){var values=[];var errors=[];each$1(results,function(obj){fold$1(obj,function(err){return errors.push(err);},function(val){return values.push(val);});});return{values:values,errors:errors};};var mapError=function mapError(res,f){if(res.stype===SimpleResultType.Error){return{stype:SimpleResultType.Error,serror:f(res.serror)};}else{return res;}};var map=function map(res,f){if(res.stype===SimpleResultType.Value){return{stype:SimpleResultType.Value,svalue:f(res.svalue)};}else{return res;}};var bind$1=function bind$1(res,f){if(res.stype===SimpleResultType.Value){return f(res.svalue);}else{return res;}};var bindError=function bindError(res,f){if(res.stype===SimpleResultType.Error){return f(res.serror);}else{return res;}};var svalue=function svalue(v){return{stype:SimpleResultType.Value,svalue:v};};var serror=function serror(e){return{stype:SimpleResultType.Error,serror:e};};var toResult$1=function toResult$1(res){return fold$1(res,Result.error,Result.value);};var fromResult$1=function fromResult$1(res){return res.fold(serror,svalue);};var SimpleResult={fromResult:fromResult$1,toResult:toResult$1,svalue:svalue,partition:partition$2,serror:serror,bind:bind$1,bindError:bindError,map:map,mapError:mapError,fold:fold$1};var field$2=function field$2(key,newKey,presence,prop){return{tag:'field',key:key,newKey:newKey,presence:presence,prop:prop};};var customField$1=function customField$1(newKey,instantiator){return{tag:'custom',newKey:newKey,instantiator:instantiator};};var fold=function fold(value,ifField,ifCustom){switch(value.tag){case'field':return ifField(value.key,value.newKey,value.presence,value.prop);case'custom':return ifCustom(value.newKey,value.instantiator);}};var shallow$1=function shallow$1(old,nu){return nu;};var deep=function deep(old,nu){var bothObjects=isPlainObject(old)&&isPlainObject(nu);return bothObjects?deepMerge(old,nu):nu;};var baseMerge=function baseMerge(merger){return function(){if(arguments.length===0){throw new Error("Can't merge zero objects");}var ret={};for(var j=0;j<arguments.length;j++){var curObject=j<0||arguments.length<=j?undefined:arguments[j];for(var key in curObject){if(has$2(curObject,key)){ret[key]=merger(ret[key],curObject[key]);}}}return ret;};};var deepMerge=baseMerge(deep);var merge$1=baseMerge(shallow$1);var required$2=function required$2(){return{tag:'required',process:{}};};var defaultedThunk=function defaultedThunk(fallbackThunk){return{tag:'defaultedThunk',process:fallbackThunk};};var defaulted$1=function defaulted$1(fallback){return defaultedThunk(constant$1(fallback));};var asOption=function asOption(){return{tag:'option',process:{}};};var mergeWithThunk=function mergeWithThunk(baseThunk){return{tag:'mergeWithThunk',process:baseThunk};};var mergeWith=function mergeWith(base){return mergeWithThunk(constant$1(base));};var mergeValues$1=function mergeValues$1(values,base){return values.length>0?SimpleResult.svalue(deepMerge(base,merge$1.apply(undefined,values))):SimpleResult.svalue(base);};var mergeErrors$1=function mergeErrors$1(errors){return compose(SimpleResult.serror,flatten)(errors);};var consolidateObj=function consolidateObj(objects,base){var partition=SimpleResult.partition(objects);return partition.errors.length>0?mergeErrors$1(partition.errors):mergeValues$1(partition.values,base);};var consolidateArr=function consolidateArr(objects){var partitions=SimpleResult.partition(objects);return partitions.errors.length>0?mergeErrors$1(partitions.errors):SimpleResult.svalue(partitions.values);};var ResultCombine={consolidateObj:consolidateObj,consolidateArr:consolidateArr};var formatObj=function formatObj(input){return isObject(input)&&keys(input).length>100?' removed due to size':JSON.stringify(input,null,2);};var formatErrors=function formatErrors(errors){var es=errors.length>10?errors.slice(0,10).concat([{path:[],getErrorInfo:constant$1('... (only showing first ten failures)')}]):errors;return map$2(es,function(e){return'Failed path: ('+e.path.join(' > ')+')\n'+e.getErrorInfo();});};var nu$a=function nu$a(path,getErrorInfo){return SimpleResult.serror([{path:path,getErrorInfo:getErrorInfo}]);};var missingRequired=function missingRequired(path,key,obj){return nu$a(path,function(){return'Could not find valid *required* value for "'+key+'" in '+formatObj(obj);});};var missingKey=function missingKey(path,key){return nu$a(path,function(){return'Choice schema did not contain choice key: "'+key+'"';});};var missingBranch=function missingBranch(path,branches,branch){return nu$a(path,function(){return'The chosen schema: "'+branch+'" did not exist in branches: '+formatObj(branches);});};var unsupportedFields=function unsupportedFields(path,unsupported){return nu$a(path,function(){return'There are unsupported fields: ['+unsupported.join(', ')+'] specified';});};var custom=function custom(path,err){return nu$a(path,constant$1(err));};var value$3=function value$3(validator){var extract=function extract(path,val){return SimpleResult.bindError(validator(val),function(err){return custom(path,err);});};var toString=constant$1('val');return{extract:extract,toString:toString};};var anyValue$1=value$3(SimpleResult.svalue);var requiredAccess=function requiredAccess(path,obj,key,bundle){return get$g(obj,key).fold(function(){return missingRequired(path,key,obj);},bundle);};var fallbackAccess=function fallbackAccess(obj,key,fallback,bundle){var v=get$g(obj,key).getOrThunk(function(){return fallback(obj);});return bundle(v);};var optionAccess=function optionAccess(obj,key,bundle){return bundle(get$g(obj,key));};var optionDefaultedAccess=function optionDefaultedAccess(obj,key,fallback,bundle){var opt=get$g(obj,key).map(function(val){return val===true?fallback(obj):val;});return bundle(opt);};var extractField=function extractField(field,path,obj,key,prop){var bundle=function bundle(av){return prop.extract(path.concat([key]),av);};var bundleAsOption=function bundleAsOption(optValue){return optValue.fold(function(){return SimpleResult.svalue(Optional.none());},function(ov){var result=prop.extract(path.concat([key]),ov);return SimpleResult.map(result,Optional.some);});};switch(field.tag){case'required':return requiredAccess(path,obj,key,bundle);case'defaultedThunk':return fallbackAccess(obj,key,field.process,bundle);case'option':return optionAccess(obj,key,bundleAsOption);case'defaultedOptionThunk':return optionDefaultedAccess(obj,key,field.process,bundleAsOption);case'mergeWithThunk':{return fallbackAccess(obj,key,constant$1({}),function(v){var result=deepMerge(field.process(obj),v);return bundle(result);});}}};var extractFields=function extractFields(path,obj,fields){var success={};var errors=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=fields[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _field2=_step.value;fold(_field2,function(key,newKey,presence,prop){var result=extractField(presence,path,obj,key,prop);SimpleResult.fold(result,function(err){errors.push.apply(errors,_toConsumableArray(err));},function(res){success[newKey]=res;});},function(newKey,instantiator){success[newKey]=instantiator(obj);});}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator["return"]!=null){_iterator["return"]();}}finally{if(_didIteratorError){throw _iteratorError;}}}return errors.length>0?SimpleResult.serror(errors):SimpleResult.svalue(success);};var valueThunk=function valueThunk(getDelegate){var extract=function extract(path,val){return getDelegate().extract(path,val);};var toString=function toString(){return getDelegate().toString();};return{extract:extract,toString:toString};};var getSetKeys=function getSetKeys(obj){return keys(filter$1(obj,isNonNullable));};var objOfOnly=function objOfOnly(fields){var delegate=objOf(fields);var fieldNames=foldr(fields,function(acc,value){return fold(value,function(key){return deepMerge(acc,_defineProperty({},key,true));},constant$1(acc));},{});var extract=function extract(path,o){var keys=isBoolean(o)?[]:getSetKeys(o);var extra=filter$2(keys,function(k){return!hasNonNullableKey(fieldNames,k);});return extra.length===0?delegate.extract(path,o):unsupportedFields(path,extra);};return{extract:extract,toString:delegate.toString};};var objOf=function objOf(values){var extract=function extract(path,o){return extractFields(path,o,values);};var toString=function toString(){var fieldStrings=map$2(values,function(value){return fold(value,function(key,_okey,_presence,prop){return key+' -> '+prop.toString();},function(newKey,_instantiator){return'state('+newKey+')';});});return'obj{\n'+fieldStrings.join('\n')+'}';};return{extract:extract,toString:toString};};var arrOf=function arrOf(prop){var extract=function extract(path,array){var results=map$2(array,function(a,i){return prop.extract(path.concat(['['+i+']']),a);});return ResultCombine.consolidateArr(results);};var toString=function toString(){return'array('+prop.toString()+')';};return{extract:extract,toString:toString};};var oneOf=function oneOf(props){var extract=function extract(path,val){var errors=[];var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=props[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var prop=_step2.value;var res=prop.extract(path,val);if(res.stype===SimpleResultType.Value){return res;}errors.push(res);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2["return"]!=null){_iterator2["return"]();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return ResultCombine.consolidateArr(errors);};var toString=function toString(){return'oneOf('+map$2(props,function(prop){return prop.toString();}).join(', ')+')';};return{extract:extract,toString:toString};};var setOf$1=function setOf$1(validator,prop){var validateKeys=function validateKeys(path,keys){return arrOf(value$3(validator)).extract(path,keys);};var extract=function extract(path,o){var keys$1=keys(o);var validatedKeys=validateKeys(path,keys$1);return SimpleResult.bind(validatedKeys,function(validKeys){var schema=map$2(validKeys,function(vk){return field$2(vk,vk,required$2(),prop);});return objOf(schema).extract(path,o);});};var toString=function toString(){return'setOf('+prop.toString()+')';};return{extract:extract,toString:toString};};var thunk=function thunk(_desc,processor){var getP=cached(processor);var extract=function extract(path,val){return getP().extract(path,val);};var toString=function toString(){return getP().toString();};return{extract:extract,toString:toString};};var arrOfObj=compose(arrOf,objOf);var anyValue=constant$1(anyValue$1);var typedValue=function typedValue(validator,expectedType){return value$3(function(a){var actualType=_typeof(a);return validator(a)?SimpleResult.svalue(a):SimpleResult.serror("Expected type: ".concat(expectedType," but got: ").concat(actualType));});};var number=typedValue(isNumber,'number');var string=typedValue(isString,'string');var _boolean=typedValue(isBoolean,'boolean');var functionProcessor=typedValue(isFunction,'function');var isPostMessageable=function isPostMessageable(val){if(Object(val)!==val){return true;}switch({}.toString.call(val).slice(8,-1)){case'Boolean':case'Number':case'String':case'Date':case'RegExp':case'Blob':case'FileList':case'ImageData':case'ImageBitmap':case'ArrayBuffer':return true;case'Array':case'Object':return Object.keys(val).every(function(prop){return isPostMessageable(val[prop]);});default:return false;}};var postMessageable=value$3(function(a){if(isPostMessageable(a)){return SimpleResult.svalue(a);}else{return SimpleResult.serror('Expected value to be acceptable for sending via postMessage');}});var chooseFrom=function chooseFrom(path,input,branches,ch){var fields=get$g(branches,ch);return fields.fold(function(){return missingBranch(path,branches,ch);},function(vp){return vp.extract(path.concat(['branch: '+ch]),input);});};var choose$2=function choose$2(key,branches){var extract=function extract(path,input){var choice=get$g(input,key);return choice.fold(function(){return missingKey(path,key);},function(chosen){return chooseFrom(path,input,branches,chosen);});};var toString=function toString(){return'chooseOn('+key+'). Possible values: '+keys(branches);};return{extract:extract,toString:toString};};var arrOfVal=function arrOfVal(){return arrOf(anyValue$1);};var valueOf=function valueOf(validator){return value$3(function(v){return validator(v).fold(SimpleResult.serror,SimpleResult.svalue);});};var setOf=function setOf(validator,prop){return setOf$1(function(v){return SimpleResult.fromResult(validator(v));},prop);};var extractValue=function extractValue(label,prop,obj){var res=prop.extract([label],obj);return SimpleResult.mapError(res,function(errs){return{input:obj,errors:errs};});};var asRaw=function asRaw(label,prop,obj){return SimpleResult.toResult(extractValue(label,prop,obj));};var getOrDie=function getOrDie(extraction){return extraction.fold(function(errInfo){throw new Error(formatError(errInfo));},identity);};var asRawOrDie$1=function asRawOrDie$1(label,prop,obj){return getOrDie(asRaw(label,prop,obj));};var formatError=function formatError(errInfo){return'Errors: \n'+formatErrors(errInfo.errors).join('\n')+'\n\nInput object: '+formatObj(errInfo.input);};var choose$1=function choose$1(key,branches){return choose$2(key,map$1(branches,objOf));};var thunkOf=function thunkOf(desc,schema){return thunk(desc,schema);};var field$1=field$2;var customField=customField$1;var validateEnum=function validateEnum(values){return valueOf(function(value){return contains$2(values,value)?Result.value(value):Result.error("Unsupported value: \"".concat(value,"\", choose one of \"").concat(values.join(', '),"\"."));});};var required$1=function required$1(key){return field$1(key,key,required$2(),anyValue());};var requiredOf=function requiredOf(key,schema){return field$1(key,key,required$2(),schema);};var requiredNumber=function requiredNumber(key){return requiredOf(key,number);};var requiredString=function requiredString(key){return requiredOf(key,string);};var requiredStringEnum=function requiredStringEnum(key,values){return field$1(key,key,required$2(),validateEnum(values));};var requiredBoolean=function requiredBoolean(key){return requiredOf(key,_boolean);};var requiredFunction=function requiredFunction(key){return requiredOf(key,functionProcessor);};var forbid=function forbid(key,message){return field$1(key,key,asOption(),value$3(function(_v){return SimpleResult.serror('The field: '+key+' is forbidden. '+message);}));};var requiredObjOf=function requiredObjOf(key,objSchema){return field$1(key,key,required$2(),objOf(objSchema));};var requiredArrayOfObj=function requiredArrayOfObj(key,objFields){return field$1(key,key,required$2(),arrOfObj(objFields));};var requiredArrayOf=function requiredArrayOf(key,schema){return field$1(key,key,required$2(),arrOf(schema));};var option$3=function option$3(key){return field$1(key,key,asOption(),anyValue());};var optionOf=function optionOf(key,schema){return field$1(key,key,asOption(),schema);};var optionNumber=function optionNumber(key){return optionOf(key,number);};var optionString=function optionString(key){return optionOf(key,string);};var optionStringEnum=function optionStringEnum(key,values){return optionOf(key,validateEnum(values));};var optionFunction=function optionFunction(key){return optionOf(key,functionProcessor);};var optionArrayOf=function optionArrayOf(key,schema){return optionOf(key,arrOf(schema));};var optionObjOf=function optionObjOf(key,objSchema){return optionOf(key,objOf(objSchema));};var optionObjOfOnly=function optionObjOfOnly(key,objSchema){return optionOf(key,objOfOnly(objSchema));};var defaulted=function defaulted(key,fallback){return field$1(key,key,defaulted$1(fallback),anyValue());};var defaultedOf=function defaultedOf(key,fallback,schema){return field$1(key,key,defaulted$1(fallback),schema);};var defaultedNumber=function defaultedNumber(key,fallback){return defaultedOf(key,fallback,number);};var defaultedString=function defaultedString(key,fallback){return defaultedOf(key,fallback,string);};var defaultedStringEnum=function defaultedStringEnum(key,fallback,values){return defaultedOf(key,fallback,validateEnum(values));};var defaultedBoolean=function defaultedBoolean(key,fallback){return defaultedOf(key,fallback,_boolean);};var defaultedFunction=function defaultedFunction(key,fallback){return defaultedOf(key,fallback,functionProcessor);};var defaultedPostMsg=function defaultedPostMsg(key,fallback){return defaultedOf(key,fallback,postMessageable);};var defaultedArrayOf=function defaultedArrayOf(key,fallback,schema){return defaultedOf(key,fallback,arrOf(schema));};var defaultedObjOf=function defaultedObjOf(key,fallback,objSchema){return defaultedOf(key,fallback,objOf(objSchema));};var Cell=function Cell(initial){var value=initial;var get=function get(){return value;};var set=function set(v){value=v;};return{get:get,set:set};};var generate$7=function generate$7(cases){if(!isArray(cases)){throw new Error('cases must be an array');}if(cases.length===0){throw new Error('there must be at least one case');}var constructors=[];var adt={};each$1(cases,function(acase,count){var keys$1=keys(acase);if(keys$1.length!==1){throw new Error('one and only one name per case');}var key=keys$1[0];var value=acase[key];if(adt[key]!==undefined){throw new Error('duplicate key detected:'+key);}else if(key==='cata'){throw new Error('cannot have a case named cata (sorry)');}else if(!isArray(value)){throw new Error('case arguments must be an array');}constructors.push(key);adt[key]=function(){for(var _len5=arguments.length,args=new Array(_len5),_key6=0;_key6<_len5;_key6++){args[_key6]=arguments[_key6];}var argLength=args.length;if(argLength!==value.length){throw new Error('Wrong number of arguments to case '+key+'. Expected '+value.length+' ('+value+'), got '+argLength);}var match=function match(branches){var branchKeys=keys(branches);if(constructors.length!==branchKeys.length){throw new Error('Wrong number of arguments to match. Expected: '+constructors.join(',')+'\nActual: '+branchKeys.join(','));}var allReqd=forall(constructors,function(reqKey){return contains$2(branchKeys,reqKey);});if(!allReqd){throw new Error('Not all branches were specified when using match. Specified: '+branchKeys.join(', ')+'\nRequired: '+constructors.join(', '));}return branches[key].apply(null,args);};return{fold:function fold(){for(var _len6=arguments.length,foldArgs=new Array(_len6),_key7=0;_key7<_len6;_key7++){foldArgs[_key7]=arguments[_key7];}if(foldArgs.length!==cases.length){throw new Error('Wrong number of arguments to fold. Expected '+cases.length+', got '+foldArgs.length);}var target=foldArgs[count];return target.apply(null,args);},match:match,log:function log(label){console.log(label,{constructors:constructors,constructor:key,params:args});}};};});return adt;};var Adt={generate:generate$7};Adt.generate([{bothErrors:['error1','error2']},{firstError:['error1','value2']},{secondError:['value1','error2']},{bothValues:['value1','value2']}]);var partition$1=function partition$1(results){var errors=[];var values=[];each$1(results,function(result){result.fold(function(err){errors.push(err);},function(value){values.push(value);});});return{errors:errors,values:values};};var exclude$1=function exclude$1(obj,fields){var r={};each(obj,function(v,k){if(!contains$2(fields,k)){r[k]=v;}});return r;};var wrap$2=function wrap$2(key,value){return _defineProperty({},key,value);};var wrapAll$1=function wrapAll$1(keyvalues){var r={};each$1(keyvalues,function(kv){r[kv.key]=kv.value;});return r;};var exclude=function exclude(obj,fields){return exclude$1(obj,fields);};var wrap$1=function wrap$1(key,value){return wrap$2(key,value);};var wrapAll=function wrapAll(keyvalues){return wrapAll$1(keyvalues);};var mergeValues=function mergeValues(values,base){return values.length===0?Result.value(base):Result.value(deepMerge(base,merge$1.apply(undefined,values)));};var mergeErrors=function mergeErrors(errors){return Result.error(flatten(errors));};var consolidate=function consolidate(objs,base){var partitions=partition$1(objs);return partitions.errors.length>0?mergeErrors(partitions.errors):mergeValues(partitions.values,base);};var ensureIsRoot=function ensureIsRoot(isRoot){return isFunction(isRoot)?isRoot:never;};var ancestor$2=function ancestor$2(scope,transform,isRoot){var element=scope.dom;var stop=ensureIsRoot(isRoot);while(element.parentNode){element=element.parentNode;var el=SugarElement.fromDom(element);var transformed=transform(el);if(transformed.isSome()){return transformed;}else if(stop(el)){break;}}return Optional.none();};var closest$4=function closest$4(scope,transform,isRoot){var current=transform(scope);var stop=ensureIsRoot(isRoot);return current.orThunk(function(){return stop(scope)?Optional.none():ancestor$2(scope,transform,stop);});};var isSource=function isSource(component,simulatedEvent){return eq(component.element,simulatedEvent.event.target);};var defaultEventHandler={can:always,abort:never,run:noop};var nu$9=function nu$9(parts){if(!hasNonNullableKey(parts,'can')&&!hasNonNullableKey(parts,'abort')&&!hasNonNullableKey(parts,'run')){throw new Error('EventHandler defined by: '+JSON.stringify(parts,null,2)+' does not have can, abort, or run!');}return _objectSpread({},defaultEventHandler,{},parts);};var all$2=function all$2(handlers,f){return function(){for(var _len7=arguments.length,args=new Array(_len7),_key8=0;_key8<_len7;_key8++){args[_key8]=arguments[_key8];}return foldl(handlers,function(acc,handler){return acc&&f(handler).apply(undefined,args);},true);};};var any=function any(handlers,f){return function(){for(var _len8=arguments.length,args=new Array(_len8),_key9=0;_key9<_len8;_key9++){args[_key9]=arguments[_key9];}return foldl(handlers,function(acc,handler){return acc||f(handler).apply(undefined,args);},false);};};var read$2=function read$2(handler){return isFunction(handler)?{can:always,abort:never,run:handler}:handler;};var fuse$1=function fuse$1(handlers){var can=all$2(handlers,function(handler){return handler.can;});var abort=any(handlers,function(handler){return handler.abort;});var run=function run(){for(var _len9=arguments.length,args=new Array(_len9),_key10=0;_key10<_len9;_key10++){args[_key10]=arguments[_key10];}each$1(handlers,function(handler){handler.run.apply(undefined,args);});};return{can:can,abort:abort,run:run};};var constant=constant$1;var touchstart=constant('touchstart');var touchmove=constant('touchmove');var touchend=constant('touchend');var touchcancel=constant('touchcancel');var mousedown=constant('mousedown');var mousemove=constant('mousemove');var mouseout=constant('mouseout');var mouseup=constant('mouseup');var mouseover=constant('mouseover');var focusin=constant('focusin');var focusout=constant('focusout');var keydown=constant('keydown');var keyup=constant('keyup');var input=constant('input');var change=constant('change');var click=constant('click');var transitioncancel=constant('transitioncancel');var transitionend=constant('transitionend');var transitionstart=constant('transitionstart');var selectstart=constant('selectstart');var prefixName=function prefixName(name){return constant$1('alloy.'+name);};var alloy={tap:prefixName('tap')};var focus$4=prefixName('focus');var postBlur=prefixName('blur.post');var postPaste=prefixName('paste.post');var receive=prefixName('receive');var execute$5=prefixName('execute');var focusItem=prefixName('focus.item');var tap=alloy.tap;var longpress=prefixName('longpress');var sandboxClose=prefixName('sandbox.close');var typeaheadCancel=prefixName('typeahead.cancel');var systemInit=prefixName('system.init');var documentTouchmove=prefixName('system.touchmove');var documentTouchend=prefixName('system.touchend');var windowScroll=prefixName('system.scroll');var windowResize=prefixName('system.resize');var attachedToDom=prefixName('system.attached');var detachedFromDom=prefixName('system.detached');var dismissRequested=prefixName('system.dismissRequested');var repositionRequested=prefixName('system.repositionRequested');var focusShifted=prefixName('focusmanager.shifted');var slotVisibility=prefixName('slotcontainer.visibility');var changeTab=prefixName('change.tab');var dismissTab=prefixName('dismiss.tab');var highlight$1=prefixName('highlight');var dehighlight$1=prefixName('dehighlight');var emit=function emit(component,event){dispatchWith(component,component.element,event,{});};var emitWith=function emitWith(component,event,properties){dispatchWith(component,component.element,event,properties);};var emitExecute=function emitExecute(component){emit(component,execute$5());};var dispatch=function dispatch(component,target,event){dispatchWith(component,target,event,{});};var dispatchWith=function dispatchWith(component,target,event,properties){var data=_objectSpread({target:target},properties);component.getSystem().triggerEvent(event,target,data);};var dispatchEvent=function dispatchEvent(component,target,event,simulatedEvent){component.getSystem().triggerEvent(event,target,simulatedEvent.event);};var derive$2=function derive$2(configs){return wrapAll(configs);};var abort=function abort(name,predicate){return{key:name,value:nu$9({abort:predicate})};};var can=function can(name,predicate){return{key:name,value:nu$9({can:predicate})};};var preventDefault=function preventDefault(name){return{key:name,value:nu$9({run:function run(component,simulatedEvent){simulatedEvent.event.prevent();}})};};var run$1=function run$1(name,handler){return{key:name,value:nu$9({run:handler})};};var runActionExtra=function runActionExtra(name,action,extra){return{key:name,value:nu$9({run:function run(component,simulatedEvent){action.apply(undefined,[component,simulatedEvent].concat(extra));}})};};var runOnName=function runOnName(name){return function(handler){return run$1(name,handler);};};var runOnSourceName=function runOnSourceName(name){return function(handler){return{key:name,value:nu$9({run:function run(component,simulatedEvent){if(isSource(component,simulatedEvent)){handler(component,simulatedEvent);}}})};};};var redirectToUid=function redirectToUid(name,uid){return run$1(name,function(component,simulatedEvent){component.getSystem().getByUid(uid).each(function(redirectee){dispatchEvent(redirectee,redirectee.element,name,simulatedEvent);});});};var redirectToPart=function redirectToPart(name,detail,partName){var uid=detail.partUids[partName];return redirectToUid(name,uid);};var runWithTarget=function runWithTarget(name,f){return run$1(name,function(component,simulatedEvent){var ev=simulatedEvent.event;var target=component.getSystem().getByDom(ev.target).getOrThunk(function(){var closest=closest$4(ev.target,function(el){return component.getSystem().getByDom(el).toOptional();},never);return closest.getOr(component);});f(component,target,simulatedEvent);});};var cutter=function cutter(name){return run$1(name,function(component,simulatedEvent){simulatedEvent.cut();});};var stopper=function stopper(name){return run$1(name,function(component,simulatedEvent){simulatedEvent.stop();});};var runOnSource=function runOnSource(name,f){return runOnSourceName(name)(f);};var runOnAttached=runOnSourceName(attachedToDom());var runOnDetached=runOnSourceName(detachedFromDom());var runOnInit=runOnSourceName(systemInit());var runOnExecute$1=runOnName(execute$5());var fromHtml$1=function fromHtml$1(html,scope){var doc=scope||document;var div=doc.createElement('div');div.innerHTML=html;return children(SugarElement.fromDom(div));};var get$9=function get$9(element){return element.dom.innerHTML;};var set$6=function set$6(element,content){var owner=owner$4(element);var docDom=owner.dom;var fragment=SugarElement.fromDom(docDom.createDocumentFragment());var contentElements=fromHtml$1(content,docDom);append$1(fragment,contentElements);empty(element);append$2(element,fragment);};var getOuter=function getOuter(element){var container=SugarElement.fromTag('div');var clone=SugarElement.fromDom(element.dom.cloneNode(true));append$2(container,clone);return get$9(container);};var clone=function clone(original,isDeep){return SugarElement.fromDom(original.dom.cloneNode(isDeep));};var shallow=function shallow(original){return clone(original,false);};var getHtml=function getHtml(element){if(isShadowRoot(element)){return'#shadow-root';}else{var _clone=shallow(element);return getOuter(_clone);}};var element=function element(elem){return getHtml(elem);};var isRecursive=function isRecursive(component,originator,target){return eq(originator,component.element)&&!eq(originator,target);};var events$i=derive$2([can(focus$4(),function(component,simulatedEvent){var event=simulatedEvent.event;var originator=event.originator;var target=event.target;if(isRecursive(component,originator,target)){console.warn(focus$4()+' did not get interpreted by the desired target. '+'\nOriginator: '+element(originator)+'\nTarget: '+element(target)+'\nCheck the '+focus$4()+' event handlers');return false;}else{return true;}})]);var DefaultEvents=/*#__PURE__*/Object.freeze({__proto__:null,events:events$i});var unique=0;var generate$6=function generate$6(prefix){var date=new Date();var time=date.getTime();var random=Math.floor(Math.random()*1000000000);unique++;return prefix+'_'+random+unique+String(time);};var prefix$1=constant$1('alloy-id-');var idAttr$1=constant$1('data-alloy-id');var prefix=prefix$1();var idAttr=idAttr$1();var write=function write(label,elem){var id=generate$6(prefix+label);writeOnly(elem,id);return id;};var writeOnly=function writeOnly(elem,uid){Object.defineProperty(elem.dom,idAttr,{value:uid,writable:true});};var read$1=function read$1(elem){var id=isElement$1(elem)?elem.dom[idAttr]:null;return Optional.from(id);};var generate$5=function generate$5(prefix){return generate$6(prefix);};var make$8=identity;var NoContextApi=function NoContextApi(getComp){var getMessage=function getMessage(event){return"The component must be in a context to execute: ".concat(event)+(getComp?'\n'+element(getComp().element)+' is not in context.':'');};var fail=function fail(event){return function(){throw new Error(getMessage(event));};};var warn=function warn(event){return function(){console.warn(getMessage(event));};};return{debugInfo:constant$1('fake'),triggerEvent:warn('triggerEvent'),triggerFocus:warn('triggerFocus'),triggerEscape:warn('triggerEscape'),broadcast:warn('broadcast'),broadcastOn:warn('broadcastOn'),broadcastEvent:warn('broadcastEvent'),build:fail('build'),buildOrPatch:fail('buildOrPatch'),addToWorld:fail('addToWorld'),removeFromWorld:fail('removeFromWorld'),addToGui:fail('addToGui'),removeFromGui:fail('removeFromGui'),getByUid:fail('getByUid'),getByDom:fail('getByDom'),isConnected:never};};var singleton$1=NoContextApi();var markAsBehaviourApi=function markAsBehaviourApi(f,apiName,apiFunction){var delegate=apiFunction.toString();var endIndex=delegate.indexOf(')')+1;var openBracketIndex=delegate.indexOf('(');var parameters=delegate.substring(openBracketIndex+1,endIndex-1).split(/,\s*/);f.toFunctionAnnotation=function(){return{name:apiName,parameters:cleanParameters(parameters.slice(0,1).concat(parameters.slice(3)))};};return f;};var cleanParameters=function cleanParameters(parameters){return map$2(parameters,function(p){return endsWith(p,'/*')?p.substring(0,p.length-'/*'.length):p;});};var markAsExtraApi=function markAsExtraApi(f,extraName){var delegate=f.toString();var endIndex=delegate.indexOf(')')+1;var openBracketIndex=delegate.indexOf('(');var parameters=delegate.substring(openBracketIndex+1,endIndex-1).split(/,\s*/);f.toFunctionAnnotation=function(){return{name:extraName,parameters:cleanParameters(parameters)};};return f;};var markAsSketchApi=function markAsSketchApi(f,apiFunction){var delegate=apiFunction.toString();var endIndex=delegate.indexOf(')')+1;var openBracketIndex=delegate.indexOf('(');var parameters=delegate.substring(openBracketIndex+1,endIndex-1).split(/,\s*/);f.toFunctionAnnotation=function(){return{name:'OVERRIDE',parameters:cleanParameters(parameters.slice(1))};};return f;};var premadeTag=generate$6('alloy-premade');var premade$1=function premade$1(comp){Object.defineProperty(comp.element.dom,premadeTag,{value:comp.uid,writable:true});return wrap$1(premadeTag,comp);};var isPremade=function isPremade(element){return has$2(element.dom,premadeTag);};var getPremade=function getPremade(spec){return get$g(spec,premadeTag);};var makeApi=function makeApi(f){return markAsSketchApi(function(component){for(var _len10=arguments.length,rest=new Array(_len10>1?_len10-1:0),_key11=1;_key11<_len10;_key11++){rest[_key11-1]=arguments[_key11];}return f.apply(void 0,[component.getApis(),component].concat(rest));},f);};var NoState={init:function init(){return nu$8({readState:constant$1('No State required')});}};var nu$8=function nu$8(spec){return spec;};var generateFrom$1=function generateFrom$1(spec,all){var schema=map$2(all,function(a){return optionObjOf(a.name(),[required$1('config'),defaulted('state',NoState)]);});var validated=asRaw('component.behaviours',objOf(schema),spec.behaviours).fold(function(errInfo){throw new Error(formatError(errInfo)+'\nComplete spec:\n'+JSON.stringify(spec,null,2));},identity);return{list:all,data:map$1(validated,function(optBlobThunk){var output=optBlobThunk.map(function(blob){return{config:blob.config,state:blob.state.init(blob.config)};});return constant$1(output);})};};var getBehaviours$3=function getBehaviours$3(bData){return bData.list;};var getData$2=function getData$2(bData){return bData.data;};var byInnerKey=function byInnerKey(data,tuple){var r={};each(data,function(detail,key){each(detail,function(value,indexKey){var chain=get$g(r,indexKey).getOr([]);r[indexKey]=chain.concat([tuple(key,value)]);});});return r;};var nu$7=function nu$7(s){return{classes:isUndefined(s.classes)?[]:s.classes,attributes:isUndefined(s.attributes)?{}:s.attributes,styles:isUndefined(s.styles)?{}:s.styles};};var merge=function merge(defnA,mod){return _objectSpread({},defnA,{attributes:_objectSpread({},defnA.attributes,{},mod.attributes),styles:_objectSpread({},defnA.styles,{},mod.styles),classes:defnA.classes.concat(mod.classes)});};var combine$2=function combine$2(info,baseMod,behaviours,base){var modsByBehaviour=_objectSpread({},baseMod);each$1(behaviours,function(behaviour){modsByBehaviour[behaviour.name()]=behaviour.exhibit(info,base);});var byAspect=byInnerKey(modsByBehaviour,function(name,modification){return{name:name,modification:modification};});var combineObjects=function combineObjects(objects){return foldr(objects,function(b,a){return _objectSpread({},a.modification,{},b);},{});};var combinedClasses=foldr(byAspect.classes,function(b,a){return a.modification.concat(b);},[]);var combinedAttributes=combineObjects(byAspect.attributes);var combinedStyles=combineObjects(byAspect.styles);return nu$7({classes:combinedClasses,attributes:combinedAttributes,styles:combinedStyles});};var sortKeys=function sortKeys(label,keyName,array,order){try{var sorted=sort(array,function(a,b){var aKey=a[keyName];var bKey=b[keyName];var aIndex=order.indexOf(aKey);var bIndex=order.indexOf(bKey);if(aIndex===-1){throw new Error('The ordering for '+label+' does not have an entry for '+aKey+'.\nOrder specified: '+JSON.stringify(order,null,2));}if(bIndex===-1){throw new Error('The ordering for '+label+' does not have an entry for '+bKey+'.\nOrder specified: '+JSON.stringify(order,null,2));}if(aIndex<bIndex){return-1;}else if(bIndex<aIndex){return 1;}else{return 0;}});return Result.value(sorted);}catch(err){return Result.error([err]);}};var uncurried=function uncurried(handler,purpose){return{handler:handler,purpose:purpose};};var curried=function curried(handler,purpose){return{cHandler:handler,purpose:purpose};};var curryArgs=function curryArgs(descHandler,extraArgs){return curried(curry.apply(undefined,[descHandler.handler].concat(extraArgs)),descHandler.purpose);};var getCurried=function getCurried(descHandler){return descHandler.cHandler;};var behaviourTuple=function behaviourTuple(name,handler){return{name:name,handler:handler};};var nameToHandlers=function nameToHandlers(behaviours,info){var r={};each$1(behaviours,function(behaviour){r[behaviour.name()]=behaviour.handlers(info);});return r;};var groupByEvents=function groupByEvents(info,behaviours,base){var behaviourEvents=_objectSpread({},base,{},nameToHandlers(behaviours,info));return byInnerKey(behaviourEvents,behaviourTuple);};var combine$1=function combine$1(info,eventOrder,behaviours,base){var byEventName=groupByEvents(info,behaviours,base);return combineGroups(byEventName,eventOrder);};var assemble=function assemble(rawHandler){var handler=read$2(rawHandler);return function(component,simulatedEvent){for(var _len11=arguments.length,rest=new Array(_len11>2?_len11-2:0),_key12=2;_key12<_len11;_key12++){rest[_key12-2]=arguments[_key12];}var args=[component,simulatedEvent].concat(rest);if(handler.abort.apply(undefined,args)){simulatedEvent.stop();}else if(handler.can.apply(undefined,args)){handler.run.apply(undefined,args);}};};var missingOrderError=function missingOrderError(eventName,tuples){return Result.error(['The event ('+eventName+') has more than one behaviour that listens to it.\nWhen this occurs, you must '+'specify an event ordering for the behaviours in your spec (e.g. [ "listing", "toggling" ]).\nThe behaviours that '+'can trigger it are: '+JSON.stringify(map$2(tuples,function(c){return c.name;}),null,2)]);};var fuse=function fuse(tuples,eventOrder,eventName){var order=eventOrder[eventName];if(!order){return missingOrderError(eventName,tuples);}else{return sortKeys('Event: '+eventName,'name',tuples,order).map(function(sortedTuples){var handlers=map$2(sortedTuples,function(tuple){return tuple.handler;});return fuse$1(handlers);});}};var combineGroups=function combineGroups(byEventName,eventOrder){var r=mapToArray(byEventName,function(tuples,eventName){var combined=tuples.length===1?Result.value(tuples[0].handler):fuse(tuples,eventOrder,eventName);return combined.map(function(handler){var assembled=assemble(handler);var purpose=tuples.length>1?filter$2(eventOrder[eventName],function(o){return exists(tuples,function(t){return t.name===o;});}).join(' > '):tuples[0].name;return wrap$1(eventName,uncurried(assembled,purpose));});});return consolidate(r,{});};var baseBehaviour='alloy.base.behaviour';var schema$z=objOf([field$1('dom','dom',required$2(),objOf([required$1('tag'),defaulted('styles',{}),defaulted('classes',[]),defaulted('attributes',{}),option$3('value'),option$3('innerHtml')])),required$1('components'),required$1('uid'),defaulted('events',{}),defaulted('apis',{}),field$1('eventOrder','eventOrder',mergeWith((_mergeWith={},_defineProperty(_mergeWith,execute$5(),['disabling',baseBehaviour,'toggling','typeaheadevents']),_defineProperty(_mergeWith,focus$4(),[baseBehaviour,'focusing','keying']),_defineProperty(_mergeWith,systemInit(),[baseBehaviour,'disabling','toggling','representing']),_defineProperty(_mergeWith,input(),[baseBehaviour,'representing','streaming','invalidating']),_defineProperty(_mergeWith,detachedFromDom(),[baseBehaviour,'representing','item-events','tooltipping']),_defineProperty(_mergeWith,mousedown(),['focusing',baseBehaviour,'item-type-events']),_defineProperty(_mergeWith,touchstart(),['focusing',baseBehaviour,'item-type-events']),_defineProperty(_mergeWith,mouseover(),['item-type-events','tooltipping']),_defineProperty(_mergeWith,receive(),['receiving','reflecting','tooltipping']),_mergeWith)),anyValue()),option$3('domModification')]);var toInfo=function toInfo(spec){return asRaw('custom.definition',schema$z,spec);};var toDefinition=function toDefinition(detail){return _objectSpread({},detail.dom,{uid:detail.uid,domChildren:map$2(detail.components,function(comp){return comp.element;})});};var toModification=function toModification(detail){return detail.domModification.fold(function(){return nu$7({});},nu$7);};var toEvents=function toEvents(info){return info.events;};var read=function read(element,attr){var value=get$f(element,attr);return value===undefined||value===''?[]:value.split(' ');};var add$4=function add$4(element,attr,id){var old=read(element,attr);var nu=old.concat([id]);set$9(element,attr,nu.join(' '));return true;};var remove$4=function remove$4(element,attr,id){var nu=filter$2(read(element,attr),function(v){return v!==id;});if(nu.length>0){set$9(element,attr,nu.join(' '));}else{remove$7(element,attr);}return false;};var supports=function supports(element){return element.dom.classList!==undefined;};var get$8=function get$8(element){return read(element,'class');};var add$3=function add$3(element,clazz){return add$4(element,'class',clazz);};var remove$3=function remove$3(element,clazz){return remove$4(element,'class',clazz);};var add$2=function add$2(element,clazz){if(supports(element)){element.dom.classList.add(clazz);}else{add$3(element,clazz);}};var cleanClass=function cleanClass(element){var classList=supports(element)?element.dom.classList:get$8(element);if(classList.length===0){remove$7(element,'class');}};var remove$2=function remove$2(element,clazz){if(supports(element)){var classList=element.dom.classList;classList.remove(clazz);}else{remove$3(element,clazz);}cleanClass(element);};var has=function has(element,clazz){return supports(element)&&element.dom.classList.contains(clazz);};var add$1=function add$1(element,classes){each$1(classes,function(x){add$2(element,x);});};var remove$1=function remove$1(element,classes){each$1(classes,function(x){remove$2(element,x);});};var hasAll=function hasAll(element,classes){return forall(classes,function(clazz){return has(element,clazz);});};var getNative=function getNative(element){var classList=element.dom.classList;var r=new Array(classList.length);for(var i=0;i<classList.length;i++){var _item2=classList.item(i);if(_item2!==null){r[i]=_item2;}}return r;};var get$7=function get$7(element){return supports(element)?getNative(element):get$8(element);};var get$6=function get$6(element){return element.dom.value;};var set$5=function set$5(element,value){if(value===undefined){throw new Error('Value.set was undefined');}element.dom.value=value;};var determineObsoleted=function determineObsoleted(parent,index,oldObsoleted){var newObsoleted=child$2(parent,index);return newObsoleted.map(function(newObs){var elemChanged=oldObsoleted.exists(function(o){return!eq(o,newObs);});if(elemChanged){var oldTag=oldObsoleted.map(name$3).getOr('span');var marker=SugarElement.fromTag(oldTag);before$1(newObs,marker);return marker;}else{return newObs;}});};var ensureInDom=function ensureInDom(parent,child,obsoleted){obsoleted.fold(function(){return append$2(parent,child);},function(obs){if(!eq(obs,child)){before$1(obs,child);remove$5(obs);}});};var patchChildrenWith=function patchChildrenWith(parent,nu,f){var builtChildren=map$2(nu,f);var currentChildren=children(parent);each$1(currentChildren.slice(builtChildren.length),remove$5);return builtChildren;};var patchSpecChild=function patchSpecChild(parent,index,spec,build){var oldObsoleted=child$2(parent,index);var childComp=build(spec,oldObsoleted);var obsoleted=determineObsoleted(parent,index,oldObsoleted);ensureInDom(parent,childComp.element,obsoleted);return childComp;};var patchSpecChildren=function patchSpecChildren(parent,specs,build){return patchChildrenWith(parent,specs,function(spec,index){return patchSpecChild(parent,index,spec,build);});};var patchDomChildren=function patchDomChildren(parent,nodes){return patchChildrenWith(parent,nodes,function(node,index){var optObsoleted=child$2(parent,index);ensureInDom(parent,node,optObsoleted);return node;});};var diffKeyValueSet=function diffKeyValueSet(newObj,oldObj){var newKeys=keys(newObj);var oldKeys=keys(oldObj);var toRemove=difference(oldKeys,newKeys);var toSet=bifilter(newObj,function(v,k){return!has$2(oldObj,k)||v!==oldObj[k];}).t;return{toRemove:toRemove,toSet:toSet};};var reconcileToDom=function reconcileToDom(definition,obsoleted){var _clone$=clone$1(obsoleted),clazz=_clone$["class"],style=_clone$.style,existingAttributes=_objectWithoutProperties(_clone$,["class","style"]);var _diffKeyValueSet=diffKeyValueSet(definition.attributes,existingAttributes),attrsToSet=_diffKeyValueSet.toSet,attrsToRemove=_diffKeyValueSet.toRemove;var updateAttrs=function updateAttrs(){each$1(attrsToRemove,function(a){return remove$7(obsoleted,a);});setAll$1(obsoleted,attrsToSet);};var existingStyles=getAllRaw(obsoleted);var _diffKeyValueSet2=diffKeyValueSet(definition.styles,existingStyles),stylesToSet=_diffKeyValueSet2.toSet,stylesToRemove=_diffKeyValueSet2.toRemove;var updateStyles=function updateStyles(){each$1(stylesToRemove,function(s){return remove$6(obsoleted,s);});setAll(obsoleted,stylesToSet);};var existingClasses=get$7(obsoleted);var classesToRemove=difference(existingClasses,definition.classes);var classesToAdd=difference(definition.classes,existingClasses);var updateClasses=function updateClasses(){add$1(obsoleted,classesToAdd);remove$1(obsoleted,classesToRemove);};var updateHtml=function updateHtml(html){set$6(obsoleted,html);};var updateChildren=function updateChildren(){var children=definition.domChildren;patchDomChildren(obsoleted,children);};var updateValue=function updateValue(){var valueElement=obsoleted;var value=definition.value.getOrUndefined();if(value!==get$6(valueElement)){set$5(valueElement,value!==null&&value!==void 0?value:'');}};updateAttrs();updateClasses();updateStyles();definition.innerHtml.fold(updateChildren,updateHtml);updateValue();return obsoleted;};var introduceToDom=function introduceToDom(definition){var subject=SugarElement.fromTag(definition.tag);setAll$1(subject,definition.attributes);add$1(subject,definition.classes);setAll(subject,definition.styles);definition.innerHtml.each(function(html){return set$6(subject,html);});var children=definition.domChildren;append$1(subject,children);definition.value.each(function(value){set$5(subject,value);});return subject;};var attemptPatch=function attemptPatch(definition,obsoleted){try{var e=reconcileToDom(definition,obsoleted);return Optional.some(e);}catch(err){return Optional.none();}};var hasMixedChildren=function hasMixedChildren(definition){return definition.innerHtml.isSome()&&definition.domChildren.length>0;};var renderToDom=function renderToDom(definition,optObsoleted){var canBePatched=function canBePatched(candidate){return name$3(candidate)===definition.tag&&!hasMixedChildren(definition)&&!isPremade(candidate);};var elem=optObsoleted.filter(canBePatched).bind(function(obsoleted){return attemptPatch(definition,obsoleted);}).getOrThunk(function(){return introduceToDom(definition);});writeOnly(elem,definition.uid);return elem;};var getBehaviours$2=function getBehaviours$2(spec){var behaviours=get$g(spec,'behaviours').getOr({});return bind$3(keys(behaviours),function(name){var behaviour=behaviours[name];return isNonNullable(behaviour)?[behaviour.me]:[];});};var generateFrom=function generateFrom(spec,all){return generateFrom$1(spec,all);};var generate$4=function generate$4(spec){var all=getBehaviours$2(spec);return generateFrom(spec,all);};var getDomDefinition=function getDomDefinition(info,bList,bData){var definition=toDefinition(info);var infoModification=toModification(info);var baseModification={'alloy.base.modification':infoModification};var modification=bList.length>0?combine$2(bData,baseModification,bList,definition):infoModification;return merge(definition,modification);};var getEvents=function getEvents(info,bList,bData){var baseEvents={'alloy.base.behaviour':toEvents(info)};return combine$1(bData,info.eventOrder,bList,baseEvents).getOrDie();};var build$2=function build$2(spec,obsoleted){var getMe=function getMe(){return me;};var systemApi=Cell(singleton$1);var info=getOrDie(toInfo(spec));var bBlob=generate$4(spec);var bList=getBehaviours$3(bBlob);var bData=getData$2(bBlob);var modDefinition=getDomDefinition(info,bList,bData);var item=renderToDom(modDefinition,obsoleted);var events=getEvents(info,bList,bData);var subcomponents=Cell(info.components);var connect=function connect(newApi){systemApi.set(newApi);};var disconnect=function disconnect(){systemApi.set(NoContextApi(getMe));};var syncComponents=function syncComponents(){var children$1=children(item);var subs=bind$3(children$1,function(child){return systemApi.get().getByDom(child).fold(function(){return[];},pure$2);});subcomponents.set(subs);};var config=function config(behaviour){var b=bData;var f=isFunction(b[behaviour.name()])?b[behaviour.name()]:function(){throw new Error('Could not find '+behaviour.name()+' in '+JSON.stringify(spec,null,2));};return f();};var hasConfigured=function hasConfigured(behaviour){return isFunction(bData[behaviour.name()]);};var getApis=function getApis(){return info.apis;};var readState=function readState(behaviourName){return bData[behaviourName]().map(function(b){return b.state.readState();}).getOr('not enabled');};var me={uid:spec.uid,getSystem:systemApi.get,config:config,hasConfigured:hasConfigured,spec:spec,readState:readState,getApis:getApis,connect:connect,disconnect:disconnect,element:item,syncComponents:syncComponents,components:subcomponents.get,events:events};return me;};var buildSubcomponents=function buildSubcomponents(spec,obsoleted){var components=get$g(spec,'components').getOr([]);return obsoleted.fold(function(){return map$2(components,build$1);},function(obs){return map$2(components,function(c,i){return buildOrPatch(c,child$2(obs,i));});});};var buildFromSpec=function buildFromSpec(userSpec,obsoleted){var _make$=make$8(userSpec),specEvents=_make$.events,spec=_objectWithoutProperties(_make$,["events"]);var components=buildSubcomponents(spec,obsoleted);var completeSpec=_objectSpread({},spec,{events:_objectSpread({},DefaultEvents,{},specEvents),components:components});return Result.value(build$2(completeSpec,obsoleted));};var text$1=function text$1(textContent){var element=SugarElement.fromText(textContent);return external$1({element:element});};var external$1=function external$1(spec){var extSpec=asRawOrDie$1('external.component',objOfOnly([required$1('element'),option$3('uid')]),spec);var systemApi=Cell(NoContextApi());var connect=function connect(newApi){systemApi.set(newApi);};var disconnect=function disconnect(){systemApi.set(NoContextApi(function(){return me;}));};var uid=extSpec.uid.getOrThunk(function(){return generate$5('external');});writeOnly(extSpec.element,uid);var me={uid:uid,getSystem:systemApi.get,config:Optional.none,hasConfigured:never,connect:connect,disconnect:disconnect,getApis:function getApis(){return{};},element:extSpec.element,spec:spec,readState:constant$1('No state'),syncComponents:noop,components:constant$1([]),events:{}};return premade$1(me);};var uids=generate$5;var isSketchSpec$1=function isSketchSpec$1(spec){return has$2(spec,'uid');};var buildOrPatch=function buildOrPatch(spec,obsoleted){return getPremade(spec).getOrThunk(function(){var userSpecWithUid=isSketchSpec$1(spec)?spec:_objectSpread({uid:uids('')},spec);return buildFromSpec(userSpecWithUid,obsoleted).getOrDie();});};var build$1=function build$1(spec){return buildOrPatch(spec,Optional.none());};var premade=premade$1;var ClosestOrAncestor=function ClosestOrAncestor(is,ancestor,scope,a,isRoot){if(is(scope,a)){return Optional.some(scope);}else if(isFunction(isRoot)&&isRoot(scope)){return Optional.none();}else{return ancestor(scope,a,isRoot);}};var ancestor$1=function ancestor$1(scope,predicate,isRoot){var element=scope.dom;var stop=isFunction(isRoot)?isRoot:never;while(element.parentNode){element=element.parentNode;var el=SugarElement.fromDom(element);if(predicate(el)){return Optional.some(el);}else if(stop(el)){break;}}return Optional.none();};var closest$3=function closest$3(scope,predicate,isRoot){var is=function is(s,test){return test(s);};return ClosestOrAncestor(is,ancestor$1,scope,predicate,isRoot);};var child$1=function child$1(scope,predicate){var pred=function pred(node){return predicate(SugarElement.fromDom(node));};var result=find$5(scope.dom.childNodes,pred);return result.map(SugarElement.fromDom);};var descendant$1=function descendant$1(scope,predicate){var descend=function descend(node){for(var i=0;i<node.childNodes.length;i++){var _child=SugarElement.fromDom(node.childNodes[i]);if(predicate(_child)){return Optional.some(_child);}var res=descend(node.childNodes[i]);if(res.isSome()){return res;}}return Optional.none();};return descend(scope.dom);};var closest$2=function closest$2(scope,predicate,isRoot){return closest$3(scope,predicate,isRoot).isSome();};var ancestor=function ancestor(scope,selector,isRoot){return ancestor$1(scope,function(e){return is(e,selector);},isRoot);};var child=function child(scope,selector){return child$1(scope,function(e){return is(e,selector);});};var descendant=function descendant(scope,selector){return one(selector,scope);};var closest$1=function closest$1(scope,selector,isRoot){var is$1=function is$1(element,selector){return is(element,selector);};return ClosestOrAncestor(is$1,ancestor,scope,selector,isRoot);};var attribute='aria-controls';var find$1=function find$1(queryElem){var dependent=closest$3(queryElem,function(elem){if(!isElement$1(elem)){return false;}var id=get$f(elem,'id');return id!==undefined&&id.indexOf(attribute)>-1;});return dependent.bind(function(dep){var id=get$f(dep,'id');var dos=getRootNode(dep);return descendant(dos,"[".concat(attribute,"=\"").concat(id,"\"]"));});};var manager=function manager(){var ariaId=generate$6(attribute);var link=function link(elem){set$9(elem,attribute,ariaId);};var unlink=function unlink(elem){remove$7(elem,attribute);};return{id:ariaId,link:link,unlink:unlink};};var isAriaPartOf=function isAriaPartOf(component,queryElem){return find$1(queryElem).exists(function(owner){return isPartOf$1(component,owner);});};var isPartOf$1=function isPartOf$1(component,queryElem){return closest$2(queryElem,function(el){return eq(el,component.element);},never)||isAriaPartOf(component,queryElem);};var unknown='unknown';var EventConfiguration;(function(EventConfiguration){EventConfiguration[EventConfiguration['STOP']=0]='STOP';EventConfiguration[EventConfiguration['NORMAL']=1]='NORMAL';EventConfiguration[EventConfiguration['LOGGING']=2]='LOGGING';})(EventConfiguration||(EventConfiguration={}));var eventConfig=Cell({});var makeEventLogger=function makeEventLogger(eventName,initialTarget){var sequence=[];var startTime=new Date().getTime();return{logEventCut:function logEventCut(_name,target,purpose){sequence.push({outcome:'cut',target:target,purpose:purpose});},logEventStopped:function logEventStopped(_name,target,purpose){sequence.push({outcome:'stopped',target:target,purpose:purpose});},logNoParent:function logNoParent(_name,target,purpose){sequence.push({outcome:'no-parent',target:target,purpose:purpose});},logEventNoHandlers:function logEventNoHandlers(_name,target){sequence.push({outcome:'no-handlers-left',target:target});},logEventResponse:function logEventResponse(_name,target,purpose){sequence.push({outcome:'response',purpose:purpose,target:target});},write:function write(){var finishTime=new Date().getTime();if(contains$2(['mousemove','mouseover','mouseout',systemInit()],eventName)){return;}console.log(eventName,{event:eventName,time:finishTime-startTime,target:initialTarget.dom,sequence:map$2(sequence,function(s){if(!contains$2(['cut','stopped','response'],s.outcome)){return s.outcome;}else{return'{'+s.purpose+'} '+s.outcome+' at ('+element(s.target)+')';}})});}};};var processEvent=function processEvent(eventName,initialTarget,f){var status=get$g(eventConfig.get(),eventName).orThunk(function(){var patterns=keys(eventConfig.get());return findMap(patterns,function(p){return eventName.indexOf(p)>-1?Optional.some(eventConfig.get()[p]):Optional.none();});}).getOr(EventConfiguration.NORMAL);switch(status){case EventConfiguration.NORMAL:return f(noLogger());case EventConfiguration.LOGGING:{var logger=makeEventLogger(eventName,initialTarget);var _output=f(logger);logger.write();return _output;}case EventConfiguration.STOP:return true;}};var path=['alloy/data/Fields','alloy/debugging/Debugging'];var getTrace=function getTrace(){var err=new Error();if(err.stack!==undefined){var lines=err.stack.split('\n');return find$5(lines,function(line){return line.indexOf('alloy')>0&&!exists(path,function(p){return line.indexOf(p)>-1;});}).getOr(unknown);}else{return unknown;}};var ignoreEvent={logEventCut:noop,logEventStopped:noop,logNoParent:noop,logEventNoHandlers:noop,logEventResponse:noop,write:noop};var monitorEvent=function monitorEvent(eventName,initialTarget,f){return processEvent(eventName,initialTarget,f);};var noLogger=constant$1(ignoreEvent);var menuFields=constant$1([required$1('menu'),required$1('selectedMenu')]);var itemFields=constant$1([required$1('item'),required$1('selectedItem')]);constant$1(objOf(itemFields().concat(menuFields())));var itemSchema$3=constant$1(objOf(itemFields()));var _initSize=requiredObjOf('initSize',[required$1('numColumns'),required$1('numRows')]);var itemMarkers=function itemMarkers(){return requiredOf('markers',itemSchema$3());};var tieredMenuMarkers=function tieredMenuMarkers(){return requiredObjOf('markers',[required$1('backgroundMenu')].concat(menuFields()).concat(itemFields()));};var markers$1=function markers$1(required){return requiredObjOf('markers',map$2(required,required$1));};var onPresenceHandler=function onPresenceHandler(label,fieldName,presence){getTrace();return field$1(fieldName,fieldName,presence,valueOf(function(f){return Result.value(function(){for(var _len12=arguments.length,args=new Array(_len12),_key13=0;_key13<_len12;_key13++){args[_key13]=arguments[_key13];}return f.apply(undefined,args);});}));};var onHandler=function onHandler(fieldName){return onPresenceHandler('onHandler',fieldName,defaulted$1(noop));};var onKeyboardHandler=function onKeyboardHandler(fieldName){return onPresenceHandler('onKeyboardHandler',fieldName,defaulted$1(Optional.none));};var onStrictHandler=function onStrictHandler(fieldName){return onPresenceHandler('onHandler',fieldName,required$2());};var onStrictKeyboardHandler=function onStrictKeyboardHandler(fieldName){return onPresenceHandler('onKeyboardHandler',fieldName,required$2());};var output$1=function output$1(name,value){return customField(name,constant$1(value));};var snapshot=function snapshot(name){return customField(name,identity);};var initSize=constant$1(_initSize);var nu$6=function nu$6(x,y,bubble,direction,placement,boundsRestriction,labelPrefix){var alwaysFit=arguments.length>7&&arguments[7]!==undefined?arguments[7]:false;return{x:x,y:y,bubble:bubble,direction:direction,placement:placement,restriction:boundsRestriction,label:"".concat(labelPrefix,"-").concat(placement),alwaysFit:alwaysFit};};var adt$a=Adt.generate([{southeast:[]},{southwest:[]},{northeast:[]},{northwest:[]},{south:[]},{north:[]},{east:[]},{west:[]}]);var cata$2=function cata$2(subject,southeast,southwest,northeast,northwest,south,north,east,west){return subject.fold(southeast,southwest,northeast,northwest,south,north,east,west);};var cataVertical=function cataVertical(subject,south,middle,north){return subject.fold(south,south,north,north,south,north,middle,middle);};var cataHorizontal=function cataHorizontal(subject,east,middle,west){return subject.fold(east,west,east,west,middle,middle,east,west);};var southeast$3=adt$a.southeast;var southwest$3=adt$a.southwest;var northeast$3=adt$a.northeast;var northwest$3=adt$a.northwest;var south$3=adt$a.south;var north$3=adt$a.north;var east$3=adt$a.east;var west$3=adt$a.west;var cycleBy=function cycleBy(value,delta,min,max){var r=value+delta;if(r>max){return min;}else if(r<min){return max;}else{return r;}};var clamp=function clamp(value,min,max){return Math.min(Math.max(value,min),max);};var getRestriction=function getRestriction(anchor,restriction){switch(restriction){case 1:return anchor.x;case 0:return anchor.x+anchor.width;case 2:return anchor.y;case 3:return anchor.y+anchor.height;}};var boundsRestriction=function boundsRestriction(anchor,restrictions){return mapToObject(['left','right','top','bottom'],function(dir){return get$g(restrictions,dir).map(function(restriction){return getRestriction(anchor,restriction);});});};var adjustBounds=function adjustBounds(bounds$1,restriction,bubbleOffset){var applyRestriction=function applyRestriction(dir,current){return restriction[dir].map(function(pos){var isVerticalAxis=dir==='top'||dir==='bottom';var offset=isVerticalAxis?bubbleOffset.top:bubbleOffset.left;var comparator=dir==='left'||dir==='top'?Math.max:Math.min;var newPos=comparator(pos,current)+offset;return isVerticalAxis?clamp(newPos,bounds$1.y,bounds$1.bottom):clamp(newPos,bounds$1.x,bounds$1.right);}).getOr(current);};var adjustedLeft=applyRestriction('left',bounds$1.x);var adjustedTop=applyRestriction('top',bounds$1.y);var adjustedRight=applyRestriction('right',bounds$1.right);var adjustedBottom=applyRestriction('bottom',bounds$1.bottom);return bounds(adjustedLeft,adjustedTop,adjustedRight-adjustedLeft,adjustedBottom-adjustedTop);};var labelPrefix$2='layout';var eastX$1=function eastX$1(anchor){return anchor.x;};var middleX$1=function middleX$1(anchor,element){return anchor.x+anchor.width/2-element.width/2;};var westX$1=function westX$1(anchor,element){return anchor.x+anchor.width-element.width;};var northY$2=function northY$2(anchor,element){return anchor.y-element.height;};var southY$2=function southY$2(anchor){return anchor.y+anchor.height;};var centreY$1=function centreY$1(anchor,element){return anchor.y+anchor.height/2-element.height/2;};var eastEdgeX$1=function eastEdgeX$1(anchor){return anchor.x+anchor.width;};var westEdgeX$1=function westEdgeX$1(anchor,element){return anchor.x-element.width;};var southeast$2=function southeast$2(anchor,element,bubbles){return nu$6(eastX$1(anchor),southY$2(anchor),bubbles.southeast(),southeast$3(),'southeast',boundsRestriction(anchor,{left:1,top:3}),labelPrefix$2);};var southwest$2=function southwest$2(anchor,element,bubbles){return nu$6(westX$1(anchor,element),southY$2(anchor),bubbles.southwest(),southwest$3(),'southwest',boundsRestriction(anchor,{right:0,top:3}),labelPrefix$2);};var northeast$2=function northeast$2(anchor,element,bubbles){return nu$6(eastX$1(anchor),northY$2(anchor,element),bubbles.northeast(),northeast$3(),'northeast',boundsRestriction(anchor,{left:1,bottom:2}),labelPrefix$2);};var northwest$2=function northwest$2(anchor,element,bubbles){return nu$6(westX$1(anchor,element),northY$2(anchor,element),bubbles.northwest(),northwest$3(),'northwest',boundsRestriction(anchor,{right:0,bottom:2}),labelPrefix$2);};var north$2=function north$2(anchor,element,bubbles){return nu$6(middleX$1(anchor,element),northY$2(anchor,element),bubbles.north(),north$3(),'north',boundsRestriction(anchor,{bottom:2}),labelPrefix$2);};var south$2=function south$2(anchor,element,bubbles){return nu$6(middleX$1(anchor,element),southY$2(anchor),bubbles.south(),south$3(),'south',boundsRestriction(anchor,{top:3}),labelPrefix$2);};var east$2=function east$2(anchor,element,bubbles){return nu$6(eastEdgeX$1(anchor),centreY$1(anchor,element),bubbles.east(),east$3(),'east',boundsRestriction(anchor,{left:0}),labelPrefix$2);};var west$2=function west$2(anchor,element,bubbles){return nu$6(westEdgeX$1(anchor,element),centreY$1(anchor,element),bubbles.west(),west$3(),'west',boundsRestriction(anchor,{right:1}),labelPrefix$2);};var all$1=function all$1(){return[southeast$2,southwest$2,northeast$2,northwest$2,south$2,north$2,east$2,west$2];};var allRtl$1=function allRtl$1(){return[southwest$2,southeast$2,northwest$2,northeast$2,south$2,north$2,east$2,west$2];};var aboveOrBelow=function aboveOrBelow(){return[northeast$2,northwest$2,southeast$2,southwest$2,north$2,south$2];};var aboveOrBelowRtl=function aboveOrBelowRtl(){return[northwest$2,northeast$2,southwest$2,southeast$2,north$2,south$2];};var belowOrAbove=function belowOrAbove(){return[southeast$2,southwest$2,northeast$2,northwest$2,south$2,north$2];};var belowOrAboveRtl=function belowOrAboveRtl(){return[southwest$2,southeast$2,northwest$2,northeast$2,south$2,north$2];};var chooseChannels=function chooseChannels(channels,message){return message.universal?channels:filter$2(channels,function(ch){return contains$2(message.channels,ch);});};var events$h=function events$h(receiveConfig){return derive$2([run$1(receive(),function(component,message){var channelMap=receiveConfig.channels;var channels=keys(channelMap);var receivingData=message;var targetChannels=chooseChannels(channels,receivingData);each$1(targetChannels,function(ch){var channelInfo=channelMap[ch];var channelSchema=channelInfo.schema;var data=asRawOrDie$1('channel['+ch+'] data\nReceiver: '+element(component.element),channelSchema,receivingData.data);channelInfo.onReceive(component,data);});})]);};var ActiveReceiving=/*#__PURE__*/Object.freeze({__proto__:null,events:events$h});var ReceivingSchema=[requiredOf('channels',setOf(Result.value,objOfOnly([onStrictHandler('onReceive'),defaulted('schema',anyValue())])))];var executeEvent=function executeEvent(bConfig,bState,executor){return runOnExecute$1(function(component){executor(component,bConfig,bState);});};var loadEvent=function loadEvent(bConfig,bState,f){return runOnInit(function(component,_simulatedEvent){f(component,bConfig,bState);});};var create$4=function create$4(schema,name,active,apis,extra,state){var configSchema=objOfOnly(schema);var schemaSchema=optionObjOf(name,[optionObjOfOnly('config',schema)]);return doCreate(configSchema,schemaSchema,name,active,apis,extra,state);};var createModes$1=function createModes$1(modes,name,active,apis,extra,state){var configSchema=modes;var schemaSchema=optionObjOf(name,[optionOf('config',modes)]);return doCreate(configSchema,schemaSchema,name,active,apis,extra,state);};var wrapApi=function wrapApi(bName,apiFunction,apiName){var f=function f(component){for(var _len13=arguments.length,rest=new Array(_len13>1?_len13-1:0),_key14=1;_key14<_len13;_key14++){rest[_key14-1]=arguments[_key14];}var args=[component].concat(rest);return component.config({name:constant$1(bName)}).fold(function(){throw new Error('We could not find any behaviour configuration for: '+bName+'. Using API: '+apiName);},function(info){var rest=Array.prototype.slice.call(args,1);return apiFunction.apply(undefined,[component,info.config,info.state].concat(rest));});};return markAsBehaviourApi(f,apiName,apiFunction);};var revokeBehaviour=function revokeBehaviour(name){return{key:name,value:undefined};};var doCreate=function doCreate(configSchema,schemaSchema,name,active,apis,extra,state){var getConfig=function getConfig(info){return hasNonNullableKey(info,name)?info[name]():Optional.none();};var wrappedApis=map$1(apis,function(apiF,apiName){return wrapApi(name,apiF,apiName);});var wrappedExtra=map$1(extra,function(extraF,extraName){return markAsExtraApi(extraF,extraName);});var me=_objectSpread({},wrappedExtra,{},wrappedApis,{revoke:curry(revokeBehaviour,name),config:function config(spec){var prepared=asRawOrDie$1(name+'-config',configSchema,spec);return{key:name,value:{config:prepared,me:me,configAsRaw:cached(function(){return asRawOrDie$1(name+'-config',configSchema,spec);}),initialConfig:spec,state:state}};},schema:constant$1(schemaSchema),exhibit:function exhibit(info,base){return lift2(getConfig(info),get$g(active,'exhibit'),function(behaviourInfo,exhibitor){return exhibitor(base,behaviourInfo.config,behaviourInfo.state);}).getOrThunk(function(){return nu$7({});});},name:constant$1(name),handlers:function handlers(info){return getConfig(info).map(function(behaviourInfo){var getEvents=get$g(active,'events').getOr(function(){return{};});return getEvents(behaviourInfo.config,behaviourInfo.state);}).getOr({});}});return me;};var derive$1=function derive$1(capabilities){return wrapAll(capabilities);};var simpleSchema=objOfOnly([required$1('fields'),required$1('name'),defaulted('active',{}),defaulted('apis',{}),defaulted('state',NoState),defaulted('extra',{})]);var create$3=function create$3(data){var value=asRawOrDie$1('Creating behaviour: '+data.name,simpleSchema,data);return create$4(value.fields,value.name,value.active,value.apis,value.extra,value.state);};var modeSchema=objOfOnly([required$1('branchKey'),required$1('branches'),required$1('name'),defaulted('active',{}),defaulted('apis',{}),defaulted('state',NoState),defaulted('extra',{})]);var createModes=function createModes(data){var value=asRawOrDie$1('Creating behaviour: '+data.name,modeSchema,data);return createModes$1(choose$1(value.branchKey,value.branches),value.name,value.active,value.apis,value.extra,value.state);};var revoke=constant$1(undefined);var Receiving=create$3({fields:ReceivingSchema,name:'receiving',active:ActiveReceiving});var exhibit$6=function exhibit$6(base,posConfig){return nu$7({classes:[],styles:posConfig.useFixed()?{}:{position:'relative'}});};var ActivePosition=/*#__PURE__*/Object.freeze({__proto__:null,exhibit:exhibit$6});var focus$3=function focus$3(element){return element.dom.focus();};var blur$1=function blur$1(element){return element.dom.blur();};var hasFocus=function hasFocus(element){var root=getRootNode(element).dom;return element.dom===root.activeElement;};var active$1=function active$1(){var root=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getDocument();return Optional.from(root.dom.activeElement).map(SugarElement.fromDom);};var search=function search(element){return active$1(getRootNode(element)).filter(function(e){return element.dom.contains(e.dom);});};var preserve$1=function preserve$1(f,container){var dos=getRootNode(container);var refocus=active$1(dos).bind(function(focused){var hasFocus=function hasFocus(elem){return eq(focused,elem);};return hasFocus(container)?Optional.some(container):descendant$1(container,hasFocus);});var result=f(container);refocus.each(function(oldFocus){active$1(dos).filter(function(newFocus){return eq(newFocus,oldFocus);}).fold(function(){focus$3(oldFocus);},noop);});return result;};var NuPositionCss=function NuPositionCss(position,left,top,right,bottom){var toPx=function toPx(num){return num+'px';};return{position:position,left:left.map(toPx),top:top.map(toPx),right:right.map(toPx),bottom:bottom.map(toPx)};};var toOptions=function toOptions(position){return _objectSpread({},position,{position:Optional.some(position.position)});};var applyPositionCss=function applyPositionCss(element,position){setOptions(element,toOptions(position));};var adt$9=Adt.generate([{none:[]},{relative:['x','y','width','height']},{fixed:['x','y','width','height']}]);var positionWithDirection=function positionWithDirection(posName,decision,x,y,width,height){var decisionRect=decision.rect;var decisionX=decisionRect.x-x;var decisionY=decisionRect.y-y;var decisionWidth=decisionRect.width;var decisionHeight=decisionRect.height;var decisionRight=width-(decisionX+decisionWidth);var decisionBottom=height-(decisionY+decisionHeight);var left=Optional.some(decisionX);var top=Optional.some(decisionY);var right=Optional.some(decisionRight);var bottom=Optional.some(decisionBottom);var none=Optional.none();return cata$2(decision.direction,function(){return NuPositionCss(posName,left,top,none,none);},function(){return NuPositionCss(posName,none,top,right,none);},function(){return NuPositionCss(posName,left,none,none,bottom);},function(){return NuPositionCss(posName,none,none,right,bottom);},function(){return NuPositionCss(posName,left,top,none,none);},function(){return NuPositionCss(posName,left,none,none,bottom);},function(){return NuPositionCss(posName,left,top,none,none);},function(){return NuPositionCss(posName,none,top,right,none);});};var reposition=function reposition(origin,decision){return origin.fold(function(){var decisionRect=decision.rect;return NuPositionCss('absolute',Optional.some(decisionRect.x),Optional.some(decisionRect.y),Optional.none(),Optional.none());},function(x,y,width,height){return positionWithDirection('absolute',decision,x,y,width,height);},function(x,y,width,height){return positionWithDirection('fixed',decision,x,y,width,height);});};var toBox=function toBox(origin,element){var rel=curry(find$2,element);var position=origin.fold(rel,rel,function(){var scroll=get$b();return find$2(element).translate(-scroll.left,-scroll.top);});var width=getOuter$1(element);var height=getOuter$2(element);return bounds(position.left,position.top,width,height);};var viewport=function viewport(origin,getBounds){return getBounds.fold(function(){return origin.fold(win,win,bounds);},function(b){return origin.fold(b,b,function(){var bounds$1=b();var pos=translate$2(origin,bounds$1.x,bounds$1.y);return bounds(pos.left,pos.top,bounds$1.width,bounds$1.height);});});};var translate$2=function translate$2(origin,x,y){var pos=SugarPosition(x,y);var removeScroll=function removeScroll(){var outerScroll=get$b();return pos.translate(-outerScroll.left,-outerScroll.top);};return origin.fold(constant$1(pos),constant$1(pos),removeScroll);};var cata$1=function cata$1(subject,onNone,onRelative,onFixed){return subject.fold(onNone,onRelative,onFixed);};adt$9.none;var relative$1=adt$9.relative;var fixed$1=adt$9.fixed;var anchor=function anchor(anchorBox,origin){return{anchorBox:anchorBox,origin:origin};};var box=function box(anchorBox,origin){return anchor(anchorBox,origin);};var placementAttribute='data-alloy-placement';var setPlacement$1=function setPlacement$1(element,placement){set$9(element,placementAttribute,placement);};var getPlacement=function getPlacement(element){return getOpt(element,placementAttribute);};var reset$2=function reset$2(element){return remove$7(element,placementAttribute);};var adt$8=Adt.generate([{fit:['reposition']},{nofit:['reposition','visibleW','visibleH','isVisible']}]);var determinePosition=function determinePosition(box,bounds){var boundsX=bounds.x,boundsY=bounds.y,boundsRight=bounds.right,boundsBottom=bounds.bottom;var x=box.x,y=box.y,right=box.right,bottom=box.bottom,width=box.width,height=box.height;var xInBounds=x>=boundsX&&x<=boundsRight;var yInBounds=y>=boundsY&&y<=boundsBottom;var originInBounds=xInBounds&&yInBounds;var rightInBounds=right<=boundsRight&&right>=boundsX;var bottomInBounds=bottom<=boundsBottom&&bottom>=boundsY;var sizeInBounds=rightInBounds&&bottomInBounds;var visibleW=Math.min(width,x>=boundsX?boundsRight-x:right-boundsX);var visibleH=Math.min(height,y>=boundsY?boundsBottom-y:bottom-boundsY);return{originInBounds:originInBounds,sizeInBounds:sizeInBounds,visibleW:visibleW,visibleH:visibleH};};var calcReposition=function calcReposition(box,bounds$1){var boundsX=bounds$1.x,boundsY=bounds$1.y,boundsRight=bounds$1.right,boundsBottom=bounds$1.bottom;var x=box.x,y=box.y,width=box.width,height=box.height;var maxX=Math.max(boundsX,boundsRight-width);var maxY=Math.max(boundsY,boundsBottom-height);var restrictedX=clamp(x,boundsX,maxX);var restrictedY=clamp(y,boundsY,maxY);var restrictedWidth=Math.min(restrictedX+width,boundsRight)-restrictedX;var restrictedHeight=Math.min(restrictedY+height,boundsBottom)-restrictedY;return bounds(restrictedX,restrictedY,restrictedWidth,restrictedHeight);};var calcMaxSizes=function calcMaxSizes(direction,box,bounds){var upAvailable=constant$1(box.bottom-bounds.y);var downAvailable=constant$1(bounds.bottom-box.y);var maxHeight=cataVertical(direction,downAvailable,downAvailable,upAvailable);var westAvailable=constant$1(box.right-bounds.x);var eastAvailable=constant$1(bounds.right-box.x);var maxWidth=cataHorizontal(direction,eastAvailable,eastAvailable,westAvailable);return{maxWidth:maxWidth,maxHeight:maxHeight};};var attempt=function attempt(candidate,width,height,bounds$1){var bubble=candidate.bubble;var bubbleOffset=bubble.offset;var adjustedBounds=adjustBounds(bounds$1,candidate.restriction,bubbleOffset);var newX=candidate.x+bubbleOffset.left;var newY=candidate.y+bubbleOffset.top;var box=bounds(newX,newY,width,height);var _determinePosition=determinePosition(box,adjustedBounds),originInBounds=_determinePosition.originInBounds,sizeInBounds=_determinePosition.sizeInBounds,visibleW=_determinePosition.visibleW,visibleH=_determinePosition.visibleH;var fits=originInBounds&&sizeInBounds;var fittedBox=fits?box:calcReposition(box,adjustedBounds);var isPartlyVisible=fittedBox.width>0&&fittedBox.height>0;var _calcMaxSizes=calcMaxSizes(candidate.direction,fittedBox,bounds$1),maxWidth=_calcMaxSizes.maxWidth,maxHeight=_calcMaxSizes.maxHeight;var reposition={rect:fittedBox,maxHeight:maxHeight,maxWidth:maxWidth,direction:candidate.direction,placement:candidate.placement,classes:{on:bubble.classesOn,off:bubble.classesOff},layout:candidate.label,testY:newY};return fits||candidate.alwaysFit?adt$8.fit(reposition):adt$8.nofit(reposition,visibleW,visibleH,isPartlyVisible);};var attempts=function attempts(element,candidates,anchorBox,elementBox,bubbles,bounds){var panelWidth=elementBox.width;var panelHeight=elementBox.height;var attemptBestFit=function attemptBestFit(layout,reposition,visibleW,visibleH,isVisible){var next=layout(anchorBox,elementBox,bubbles,element,bounds);var attemptLayout=attempt(next,panelWidth,panelHeight,bounds);return attemptLayout.fold(constant$1(attemptLayout),function(newReposition,newVisibleW,newVisibleH,newIsVisible){var improved=isVisible===newIsVisible?newVisibleH>visibleH||newVisibleW>visibleW:!isVisible&&newIsVisible;return improved?attemptLayout:adt$8.nofit(reposition,visibleW,visibleH,isVisible);});};var abc=foldl(candidates,function(b,a){var bestNext=curry(attemptBestFit,a);return b.fold(constant$1(b),bestNext);},adt$8.nofit({rect:anchorBox,maxHeight:elementBox.height,maxWidth:elementBox.width,direction:southeast$3(),placement:'southeast',classes:{on:[],off:[]},layout:'none',testY:anchorBox.y},-1,-1,false));return abc.fold(identity,identity);};var singleton=function singleton(doRevoke){var subject=Cell(Optional.none());var revoke=function revoke(){return subject.get().each(doRevoke);};var clear=function clear(){revoke();subject.set(Optional.none());};var isSet=function isSet(){return subject.get().isSome();};var get=function get(){return subject.get();};var set=function set(s){revoke();subject.set(Optional.some(s));};return{clear:clear,isSet:isSet,get:get,set:set};};var destroyable=function destroyable(){return singleton(function(s){return s.destroy();});};var unbindable=function unbindable(){return singleton(function(s){return s.unbind();});};var value$2=function value$2(){var subject=singleton(noop);var on=function on(f){return subject.get().each(f);};return _objectSpread({},subject,{on:on});};var filter=always;var bind=function bind(element,event,handler){return bind$2(element,event,filter,handler);};var capture=function capture(element,event,handler){return capture$1(element,event,filter,handler);};var fromRawEvent=fromRawEvent$1;var properties=['top','bottom','right','left'];var timerAttr='data-alloy-transition-timer';var isTransitioning$1=function isTransitioning$1(element,transition){return hasAll(element,transition.classes);};var shouldApplyTransitionCss=function shouldApplyTransitionCss(transition,decision,lastPlacement){return lastPlacement.exists(function(placer){var mode=transition.mode;return mode==='all'?true:placer[mode]!==decision[mode];});};var hasChanges=function hasChanges(position,intermediate){var round=function round(value){return parseFloat(value).toFixed(3);};return find$4(intermediate,function(value,key){var newValue=position[key].map(round);var val=value.map(round);return!equals(newValue,val);}).isSome();};var getTransitionDuration=function getTransitionDuration(element){var get=function get(name){var style=get$e(element,name);var times=style.split(/\s*,\s*/);return filter$2(times,isNotEmpty);};var parse=function parse(value){if(isString(value)&&/^[\d.]+/.test(value)){var num=parseFloat(value);return endsWith(value,'ms')?num:num*1000;}else{return 0;}};var delay=get('transition-delay');var duration=get('transition-duration');return foldl(duration,function(acc,dur,i){var time=parse(delay[i])+parse(dur);return Math.max(acc,time);},0);};var setupTransitionListeners=function setupTransitionListeners(element,transition){var transitionEnd=unbindable();var transitionCancel=unbindable();var timer;var isSourceTransition=function isSourceTransition(e){var _a;var pseudoElement=(_a=e.raw.pseudoElement)!==null&&_a!==void 0?_a:'';return eq(e.target,element)&&isEmpty(pseudoElement)&&contains$2(properties,e.raw.propertyName);};var transitionDone=function transitionDone(e){if(isNullable(e)||isSourceTransition(e)){transitionEnd.clear();transitionCancel.clear();var _type=e===null||e===void 0?void 0:e.raw.type;if(isNullable(_type)||_type===transitionend()){clearTimeout(timer);remove$7(element,timerAttr);remove$1(element,transition.classes);}}};var transitionStart=bind(element,transitionstart(),function(e){if(isSourceTransition(e)){transitionStart.unbind();transitionEnd.set(bind(element,transitionend(),transitionDone));transitionCancel.set(bind(element,transitioncancel(),transitionDone));}});var duration=getTransitionDuration(element);requestAnimationFrame(function(){timer=setTimeout(transitionDone,duration+17);set$9(element,timerAttr,timer);});};var startTransitioning=function startTransitioning(element,transition){add$1(element,transition.classes);getOpt(element,timerAttr).each(function(timerId){clearTimeout(parseInt(timerId,10));remove$7(element,timerAttr);});setupTransitionListeners(element,transition);};var applyTransitionCss=function applyTransitionCss(element,origin,position,transition,decision,lastPlacement){var shouldTransition=shouldApplyTransitionCss(transition,decision,lastPlacement);if(shouldTransition||isTransitioning$1(element,transition)){set$8(element,'position',position.position);var _rect=toBox(origin,element);var intermediatePosition=reposition(origin,_objectSpread({},decision,{rect:_rect}));var intermediateCssOptions=mapToObject(properties,function(prop){return intermediatePosition[prop];});if(hasChanges(position,intermediateCssOptions)){setOptions(element,intermediateCssOptions);if(shouldTransition){startTransitioning(element,transition);}reflow(element);}}else{remove$1(element,transition.classes);}};var elementSize=function elementSize(p){return{width:getOuter$1(p),height:getOuter$2(p)};};var layout=function layout(anchorBox,element,bubbles,options){remove$6(element,'max-height');remove$6(element,'max-width');var elementBox=elementSize(element);return attempts(element,options.preference,anchorBox,elementBox,bubbles,options.bounds);};var setClasses=function setClasses(element,decision){var classInfo=decision.classes;remove$1(element,classInfo.off);add$1(element,classInfo.on);};var setHeight=function setHeight(element,decision,options){var maxHeightFunction=options.maxHeightFunction;maxHeightFunction(element,decision.maxHeight);};var setWidth=function setWidth(element,decision,options){var maxWidthFunction=options.maxWidthFunction;maxWidthFunction(element,decision.maxWidth);};var position$2=function position$2(element,decision,options){var positionCss=reposition(options.origin,decision);options.transition.each(function(transition){applyTransitionCss(element,options.origin,positionCss,transition,decision,options.lastPlacement);});applyPositionCss(element,positionCss);};var setPlacement=function setPlacement(element,decision){setPlacement$1(element,decision.placement);};var setMaxHeight=function setMaxHeight(element,maxHeight){setMax$1(element,Math.floor(maxHeight));};var anchored=constant$1(function(element,available){setMaxHeight(element,available);setAll(element,{'overflow-x':'hidden','overflow-y':'auto'});});var expandable$1=constant$1(function(element,available){setMaxHeight(element,available);});var defaultOr=function defaultOr(options,key,dephault){return options[key]===undefined?dephault:options[key];};var simple=function simple(anchor,element,bubble,layouts,lastPlacement,getBounds,overrideOptions,transition){var maxHeightFunction=defaultOr(overrideOptions,'maxHeightFunction',anchored());var maxWidthFunction=defaultOr(overrideOptions,'maxWidthFunction',noop);var anchorBox=anchor.anchorBox;var origin=anchor.origin;var options={bounds:viewport(origin,getBounds),origin:origin,preference:layouts,maxHeightFunction:maxHeightFunction,maxWidthFunction:maxWidthFunction,lastPlacement:lastPlacement,transition:transition};return go(anchorBox,element,bubble,options);};var go=function go(anchorBox,element,bubble,options){var decision=layout(anchorBox,element,bubble,options);position$2(element,decision,options);setPlacement(element,decision);setClasses(element,decision);setHeight(element,decision,options);setWidth(element,decision,options);return{layout:decision.layout,placement:decision.placement};};var allAlignments=['valignCentre','alignLeft','alignRight','alignCentre','top','bottom','left','right','inset'];var nu$5=function nu$5(xOffset,yOffset,classes){var insetModifier=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var insetXOffset=xOffset*insetModifier;var insetYOffset=yOffset*insetModifier;var getClasses=function getClasses(prop){return get$g(classes,prop).getOr([]);};var make=function make(xDelta,yDelta,alignmentsOn){var alignmentsOff=difference(allAlignments,alignmentsOn);return{offset:SugarPosition(xDelta,yDelta),classesOn:bind$3(alignmentsOn,getClasses),classesOff:bind$3(alignmentsOff,getClasses)};};return{southeast:function southeast(){return make(-xOffset,yOffset,['top','alignLeft']);},southwest:function southwest(){return make(xOffset,yOffset,['top','alignRight']);},south:function south(){return make(-xOffset/2,yOffset,['top','alignCentre']);},northeast:function northeast(){return make(-xOffset,-yOffset,['bottom','alignLeft']);},northwest:function northwest(){return make(xOffset,-yOffset,['bottom','alignRight']);},north:function north(){return make(-xOffset/2,-yOffset,['bottom','alignCentre']);},east:function east(){return make(xOffset,-yOffset/2,['valignCentre','left']);},west:function west(){return make(-xOffset,-yOffset/2,['valignCentre','right']);},insetNortheast:function insetNortheast(){return make(insetXOffset,insetYOffset,['top','alignLeft','inset']);},insetNorthwest:function insetNorthwest(){return make(-insetXOffset,insetYOffset,['top','alignRight','inset']);},insetNorth:function insetNorth(){return make(-insetXOffset/2,insetYOffset,['top','alignCentre','inset']);},insetSoutheast:function insetSoutheast(){return make(insetXOffset,-insetYOffset,['bottom','alignLeft','inset']);},insetSouthwest:function insetSouthwest(){return make(-insetXOffset,-insetYOffset,['bottom','alignRight','inset']);},insetSouth:function insetSouth(){return make(-insetXOffset/2,-insetYOffset,['bottom','alignCentre','inset']);},insetEast:function insetEast(){return make(-insetXOffset,-insetYOffset/2,['valignCentre','right','inset']);},insetWest:function insetWest(){return make(insetXOffset,-insetYOffset/2,['valignCentre','left','inset']);}};};var fallback=function fallback(){return nu$5(0,0,{});};var nu$4=identity;var onDirection=function onDirection(isLtr,isRtl){return function(element){return getDirection(element)==='rtl'?isRtl:isLtr;};};var getDirection=function getDirection(element){return get$e(element,'direction')==='rtl'?'rtl':'ltr';};var AttributeValue;(function(AttributeValue){AttributeValue['TopToBottom']='toptobottom';AttributeValue['BottomToTop']='bottomtotop';})(AttributeValue||(AttributeValue={}));var Attribute='data-alloy-vertical-dir';var isBottomToTopDir=function isBottomToTopDir(el){return closest$2(el,function(current){return isElement$1(current)&&get$f(current,'data-alloy-vertical-dir')===AttributeValue.BottomToTop;});};var schema$y=function schema$y(){return optionObjOf('layouts',[required$1('onLtr'),required$1('onRtl'),option$3('onBottomLtr'),option$3('onBottomRtl')]);};var get$5=function get$5(elem,info,defaultLtr,defaultRtl,defaultBottomLtr,defaultBottomRtl,dirElement){var isBottomToTop=dirElement.map(isBottomToTopDir).getOr(false);var customLtr=info.layouts.map(function(ls){return ls.onLtr(elem);});var customRtl=info.layouts.map(function(ls){return ls.onRtl(elem);});var ltr=isBottomToTop?info.layouts.bind(function(ls){return ls.onBottomLtr.map(function(f){return f(elem);});}).or(customLtr).getOr(defaultBottomLtr):customLtr.getOr(defaultLtr);var rtl=isBottomToTop?info.layouts.bind(function(ls){return ls.onBottomRtl.map(function(f){return f(elem);});}).or(customRtl).getOr(defaultBottomRtl):customRtl.getOr(defaultRtl);var f=onDirection(ltr,rtl);return f(elem);};var placement$4=function placement$4(component,anchorInfo,origin){var hotspot=anchorInfo.hotspot;var anchorBox=toBox(origin,hotspot.element);var layouts=get$5(component.element,anchorInfo,belowOrAbove(),belowOrAboveRtl(),aboveOrBelow(),aboveOrBelowRtl(),Optional.some(anchorInfo.hotspot.element));return Optional.some(nu$4({anchorBox:anchorBox,bubble:anchorInfo.bubble.getOr(fallback()),overrides:anchorInfo.overrides,layouts:layouts,placer:Optional.none()}));};var HotspotAnchor=[required$1('hotspot'),option$3('bubble'),defaulted('overrides',{}),schema$y(),output$1('placement',placement$4)];var placement$3=function placement$3(component,anchorInfo,origin){var pos=translate$2(origin,anchorInfo.x,anchorInfo.y);var anchorBox=bounds(pos.left,pos.top,anchorInfo.width,anchorInfo.height);var layouts=get$5(component.element,anchorInfo,all$1(),allRtl$1(),all$1(),allRtl$1(),Optional.none());return Optional.some(nu$4({anchorBox:anchorBox,bubble:anchorInfo.bubble,overrides:anchorInfo.overrides,layouts:layouts,placer:Optional.none()}));};var MakeshiftAnchor=[required$1('x'),required$1('y'),defaulted('height',0),defaulted('width',0),defaulted('bubble',fallback()),defaulted('overrides',{}),schema$y(),output$1('placement',placement$3)];var adt$7=Adt.generate([{screen:['point']},{absolute:['point','scrollLeft','scrollTop']}]);var toFixed=function toFixed(pos){return pos.fold(identity,function(point,scrollLeft,scrollTop){return point.translate(-scrollLeft,-scrollTop);});};var toAbsolute=function toAbsolute(pos){return pos.fold(identity,identity);};var sum=function sum(points){return foldl(points,function(b,a){return b.translate(a.left,a.top);},SugarPosition(0,0));};var sumAsFixed=function sumAsFixed(positions){var points=map$2(positions,toFixed);return sum(points);};var sumAsAbsolute=function sumAsAbsolute(positions){var points=map$2(positions,toAbsolute);return sum(points);};var screen=adt$7.screen;var absolute$1=adt$7.absolute;var getOffset=function getOffset(component,origin,anchorInfo){var win=defaultView(anchorInfo.root).dom;var hasSameOwner=function hasSameOwner(frame){var frameOwner=owner$4(frame);var compOwner=owner$4(component.element);return eq(frameOwner,compOwner);};return Optional.from(win.frameElement).map(SugarElement.fromDom).filter(hasSameOwner).map(absolute$3);};var getRootPoint=function getRootPoint(component,origin,anchorInfo){var doc=owner$4(component.element);var outerScroll=get$b(doc);var offset=getOffset(component,origin,anchorInfo).getOr(outerScroll);return absolute$1(offset,outerScroll.left,outerScroll.top);};var getBox=function getBox(left,top,width,height){var point=screen(SugarPosition(left,top));return Optional.some(pointed(point,width,height));};var calcNewAnchor=function calcNewAnchor(optBox,rootPoint,anchorInfo,origin,elem){return optBox.map(function(box){var points=[rootPoint,box.point];var topLeft=cata$1(origin,function(){return sumAsAbsolute(points);},function(){return sumAsAbsolute(points);},function(){return sumAsFixed(points);});var anchorBox=rect(topLeft.left,topLeft.top,box.width,box.height);var layoutsLtr=anchorInfo.showAbove?aboveOrBelow():belowOrAbove();var layoutsRtl=anchorInfo.showAbove?aboveOrBelowRtl():belowOrAboveRtl();var layouts=get$5(elem,anchorInfo,layoutsLtr,layoutsRtl,layoutsLtr,layoutsRtl,Optional.none());return nu$4({anchorBox:anchorBox,bubble:anchorInfo.bubble.getOr(fallback()),overrides:anchorInfo.overrides,layouts:layouts,placer:Optional.none()});});};var placement$2=function placement$2(component,anchorInfo,origin){var rootPoint=getRootPoint(component,origin,anchorInfo);return anchorInfo.node.filter(inBody).bind(function(target){var rect=target.dom.getBoundingClientRect();var nodeBox=getBox(rect.left,rect.top,rect.width,rect.height);var elem=anchorInfo.node.getOr(component.element);return calcNewAnchor(nodeBox,rootPoint,anchorInfo,origin,elem);});};var NodeAnchor=[required$1('node'),required$1('root'),option$3('bubble'),schema$y(),defaulted('overrides',{}),defaulted('showAbove',false),output$1('placement',placement$2)];var zeroWidth="\uFEFF";var nbsp='\xA0';var create$2=function create$2(start,soffset,finish,foffset){return{start:start,soffset:soffset,finish:finish,foffset:foffset};};var SimRange={create:create$2};var adt$6=Adt.generate([{before:['element']},{on:['element','offset']},{after:['element']}]);var cata=function cata(subject,onBefore,onOn,onAfter){return subject.fold(onBefore,onOn,onAfter);};var getStart$1=function getStart$1(situ){return situ.fold(identity,identity,identity);};var before=adt$6.before;var on$1=adt$6.on;var after$1=adt$6.after;var Situ={before:before,on:on$1,after:after$1,cata:cata,getStart:getStart$1};var adt$5=Adt.generate([{domRange:['rng']},{relative:['startSitu','finishSitu']},{exact:['start','soffset','finish','foffset']}]);var exactFromRange=function exactFromRange(simRange){return adt$5.exact(simRange.start,simRange.soffset,simRange.finish,simRange.foffset);};var getStart=function getStart(selection){return selection.match({domRange:function domRange(rng){return SugarElement.fromDom(rng.startContainer);},relative:function relative(startSitu,_finishSitu){return Situ.getStart(startSitu);},exact:function exact(start,_soffset,_finish,_foffset){return start;}});};var domRange=adt$5.domRange;var relative=adt$5.relative;var exact=adt$5.exact;var getWin=function getWin(selection){var start=getStart(selection);return defaultView(start);};var range$1=SimRange.create;var SimSelection={domRange:domRange,relative:relative,exact:exact,exactFromRange:exactFromRange,getWin:getWin,range:range$1};var setStart=function setStart(rng,situ){situ.fold(function(e){rng.setStartBefore(e.dom);},function(e,o){rng.setStart(e.dom,o);},function(e){rng.setStartAfter(e.dom);});};var setFinish=function setFinish(rng,situ){situ.fold(function(e){rng.setEndBefore(e.dom);},function(e,o){rng.setEnd(e.dom,o);},function(e){rng.setEndAfter(e.dom);});};var relativeToNative=function relativeToNative(win,startSitu,finishSitu){var range=win.document.createRange();setStart(range,startSitu);setFinish(range,finishSitu);return range;};var exactToNative=function exactToNative(win,start,soffset,finish,foffset){var rng=win.document.createRange();rng.setStart(start.dom,soffset);rng.setEnd(finish.dom,foffset);return rng;};var toRect=function toRect(rect){return{left:rect.left,top:rect.top,right:rect.right,bottom:rect.bottom,width:rect.width,height:rect.height};};var getFirstRect$1=function getFirstRect$1(rng){var rects=rng.getClientRects();var rect=rects.length>0?rects[0]:rng.getBoundingClientRect();return rect.width>0||rect.height>0?Optional.some(rect).map(toRect):Optional.none();};var getBounds$2=function getBounds$2(rng){var rect=rng.getBoundingClientRect();return rect.width>0||rect.height>0?Optional.some(rect).map(toRect):Optional.none();};var adt$4=Adt.generate([{ltr:['start','soffset','finish','foffset']},{rtl:['start','soffset','finish','foffset']}]);var fromRange=function fromRange(win,type,range){return type(SugarElement.fromDom(range.startContainer),range.startOffset,SugarElement.fromDom(range.endContainer),range.endOffset);};var getRanges=function getRanges(win,selection){return selection.match({domRange:function domRange(rng){return{ltr:constant$1(rng),rtl:Optional.none};},relative:function relative(startSitu,finishSitu){return{ltr:cached(function(){return relativeToNative(win,startSitu,finishSitu);}),rtl:cached(function(){return Optional.some(relativeToNative(win,finishSitu,startSitu));})};},exact:function exact(start,soffset,finish,foffset){return{ltr:cached(function(){return exactToNative(win,start,soffset,finish,foffset);}),rtl:cached(function(){return Optional.some(exactToNative(win,finish,foffset,start,soffset));})};}});};var doDiagnose=function doDiagnose(win,ranges){var rng=ranges.ltr();if(rng.collapsed){var reversed=ranges.rtl().filter(function(rev){return rev.collapsed===false;});return reversed.map(function(rev){return adt$4.rtl(SugarElement.fromDom(rev.endContainer),rev.endOffset,SugarElement.fromDom(rev.startContainer),rev.startOffset);}).getOrThunk(function(){return fromRange(win,adt$4.ltr,rng);});}else{return fromRange(win,adt$4.ltr,rng);}};var diagnose=function diagnose(win,selection){var ranges=getRanges(win,selection);return doDiagnose(win,ranges);};var asLtrRange=function asLtrRange(win,selection){var diagnosis=diagnose(win,selection);return diagnosis.match({ltr:function ltr(start,soffset,finish,foffset){var rng=win.document.createRange();rng.setStart(start.dom,soffset);rng.setEnd(finish.dom,foffset);return rng;},rtl:function rtl(start,soffset,finish,foffset){var rng=win.document.createRange();rng.setStart(finish.dom,foffset);rng.setEnd(start.dom,soffset);return rng;}});};adt$4.ltr;adt$4.rtl;var descendants=function descendants(scope,selector){return all$3(selector,scope);};var makeRange=function makeRange(start,soffset,finish,foffset){var doc=owner$4(start);var rng=doc.dom.createRange();rng.setStart(start.dom,soffset);rng.setEnd(finish.dom,foffset);return rng;};var after=function after(start,soffset,finish,foffset){var r=makeRange(start,soffset,finish,foffset);var same=eq(start,finish)&&soffset===foffset;return r.collapsed&&!same;};var getNativeSelection=function getNativeSelection(win){return Optional.from(win.getSelection());};var readRange=function readRange(selection){if(selection.rangeCount>0){var firstRng=selection.getRangeAt(0);var lastRng=selection.getRangeAt(selection.rangeCount-1);return Optional.some(SimRange.create(SugarElement.fromDom(firstRng.startContainer),firstRng.startOffset,SugarElement.fromDom(lastRng.endContainer),lastRng.endOffset));}else{return Optional.none();}};var doGetExact=function doGetExact(selection){if(selection.anchorNode===null||selection.focusNode===null){return readRange(selection);}else{var _anchor=SugarElement.fromDom(selection.anchorNode);var _focus=SugarElement.fromDom(selection.focusNode);return after(_anchor,selection.anchorOffset,_focus,selection.focusOffset)?Optional.some(SimRange.create(_anchor,selection.anchorOffset,_focus,selection.focusOffset)):readRange(selection);}};var getExact=function getExact(win){return getNativeSelection(win).filter(function(sel){return sel.rangeCount>0;}).bind(doGetExact);};var getFirstRect=function getFirstRect(win,selection){var rng=asLtrRange(win,selection);return getFirstRect$1(rng);};var getBounds$1=function getBounds$1(win,selection){var rng=asLtrRange(win,selection);return getBounds$2(rng);};var NodeValue=function NodeValue(is,name){var get=function get(element){if(!is(element)){throw new Error('Can only get '+name+' value of a '+name+' node');}return getOption(element).getOr('');};var getOption=function getOption(element){return is(element)?Optional.from(element.dom.nodeValue):Optional.none();};var set=function set(element,value){if(!is(element)){throw new Error('Can only set raw '+name+' value of a '+name+' node');}element.dom.nodeValue=value;};return{get:get,getOption:getOption,set:set};};var api=NodeValue(isText,'text');var get$4=function get$4(element){return api.get(element);};var point=function point(element,offset){return{element:element,offset:offset};};var descendOnce$1=function descendOnce$1(element,offset){var children$1=children(element);if(children$1.length===0){return point(element,offset);}else if(offset<children$1.length){return point(children$1[offset],0);}else{var _last=children$1[children$1.length-1];var len=isText(_last)?get$4(_last).length:children(_last).length;return point(_last,len);}};var descendOnce=function descendOnce(element,offset){return isText(element)?point(element,offset):descendOnce$1(element,offset);};var getAnchorSelection=function getAnchorSelection(win,anchorInfo){var getSelection=anchorInfo.getSelection.getOrThunk(function(){return function(){return getExact(win);};});return getSelection().map(function(sel){var modStart=descendOnce(sel.start,sel.soffset);var modFinish=descendOnce(sel.finish,sel.foffset);return SimSelection.range(modStart.element,modStart.offset,modFinish.element,modFinish.offset);});};var placement$1=function placement$1(component,anchorInfo,origin){var win=defaultView(anchorInfo.root).dom;var rootPoint=getRootPoint(component,origin,anchorInfo);var selectionBox=getAnchorSelection(win,anchorInfo).bind(function(sel){var optRect=getBounds$1(win,SimSelection.exactFromRange(sel)).orThunk(function(){var x=SugarElement.fromText(zeroWidth);before$1(sel.start,x);var rect=getFirstRect(win,SimSelection.exact(x,0,x,1));remove$5(x);return rect;});return optRect.bind(function(rawRect){return getBox(rawRect.left,rawRect.top,rawRect.width,rawRect.height);});});var targetElement=getAnchorSelection(win,anchorInfo).bind(function(sel){return isElement$1(sel.start)?Optional.some(sel.start):parentElement(sel.start);});var elem=targetElement.getOr(component.element);return calcNewAnchor(selectionBox,rootPoint,anchorInfo,origin,elem);};var SelectionAnchor=[option$3('getSelection'),required$1('root'),option$3('bubble'),schema$y(),defaulted('overrides',{}),defaulted('showAbove',false),output$1('placement',placement$1)];var labelPrefix$1='link-layout';var eastX=function eastX(anchor){return anchor.x+anchor.width;};var westX=function westX(anchor,element){return anchor.x-element.width;};var northY$1=function northY$1(anchor,element){return anchor.y-element.height+anchor.height;};var southY$1=function southY$1(anchor){return anchor.y;};var southeast$1=function southeast$1(anchor,element,bubbles){return nu$6(eastX(anchor),southY$1(anchor),bubbles.southeast(),southeast$3(),'southeast',boundsRestriction(anchor,{left:0,top:2}),labelPrefix$1);};var southwest$1=function southwest$1(anchor,element,bubbles){return nu$6(westX(anchor,element),southY$1(anchor),bubbles.southwest(),southwest$3(),'southwest',boundsRestriction(anchor,{right:1,top:2}),labelPrefix$1);};var northeast$1=function northeast$1(anchor,element,bubbles){return nu$6(eastX(anchor),northY$1(anchor,element),bubbles.northeast(),northeast$3(),'northeast',boundsRestriction(anchor,{left:0,bottom:3}),labelPrefix$1);};var northwest$1=function northwest$1(anchor,element,bubbles){return nu$6(westX(anchor,element),northY$1(anchor,element),bubbles.northwest(),northwest$3(),'northwest',boundsRestriction(anchor,{right:1,bottom:3}),labelPrefix$1);};var all=function all(){return[southeast$1,southwest$1,northeast$1,northwest$1];};var allRtl=function allRtl(){return[southwest$1,southeast$1,northwest$1,northeast$1];};var placement=function placement(component,submenuInfo,origin){var anchorBox=toBox(origin,submenuInfo.item.element);var layouts=get$5(component.element,submenuInfo,all(),allRtl(),all(),allRtl(),Optional.none());return Optional.some(nu$4({anchorBox:anchorBox,bubble:fallback(),overrides:submenuInfo.overrides,layouts:layouts,placer:Optional.none()}));};var SubmenuAnchor=[required$1('item'),schema$y(),defaulted('overrides',{}),output$1('placement',placement)];var AnchorSchema=choose$1('type',{selection:SelectionAnchor,node:NodeAnchor,hotspot:HotspotAnchor,submenu:SubmenuAnchor,makeshift:MakeshiftAnchor});var TransitionSchema=[requiredArrayOf('classes',string),defaultedStringEnum('mode','all',['all','layout','placement'])];var PositionSchema=[defaulted('useFixed',never),option$3('getBounds')];var PlacementSchema=[requiredOf('anchor',AnchorSchema),optionObjOf('transition',TransitionSchema)];var getFixedOrigin=function getFixedOrigin(){var html=document.documentElement;return fixed$1(0,0,html.clientWidth,html.clientHeight);};var getRelativeOrigin=function getRelativeOrigin(component){var position=absolute$3(component.element);var bounds=component.element.dom.getBoundingClientRect();return relative$1(position.left,position.top,bounds.width,bounds.height);};var place=function place(component,origin,anchoring,getBounds,placee,lastPlace,transition){var anchor=box(anchoring.anchorBox,origin);return simple(anchor,placee.element,anchoring.bubble,anchoring.layouts,lastPlace,getBounds,anchoring.overrides,transition);};var position$1=function position$1(component,posConfig,posState,placee,placementSpec){positionWithin(component,posConfig,posState,placee,placementSpec,Optional.none());};var positionWithin=function positionWithin(component,posConfig,posState,placee,placementSpec,boxElement){var boundsBox=boxElement.map(box$1);return positionWithinBounds(component,posConfig,posState,placee,placementSpec,boundsBox);};var positionWithinBounds=function positionWithinBounds(component,posConfig,posState,placee,placementSpec,bounds){var placeeDetail=asRawOrDie$1('placement.info',objOf(PlacementSchema),placementSpec);var anchorage=placeeDetail.anchor;var element=placee.element;var placeeState=posState.get(placee.uid);preserve$1(function(){set$8(element,'position','fixed');var oldVisibility=getRaw(element,'visibility');set$8(element,'visibility','hidden');var origin=posConfig.useFixed()?getFixedOrigin():getRelativeOrigin(component);var placer=anchorage.placement;var getBounds=bounds.map(constant$1).or(posConfig.getBounds);placer(component,anchorage,origin).each(function(anchoring){var doPlace=anchoring.placer.getOr(place);var newState=doPlace(component,origin,anchoring,getBounds,placee,placeeState,placeeDetail.transition);posState.set(placee.uid,newState);});oldVisibility.fold(function(){remove$6(element,'visibility');},function(vis){set$8(element,'visibility',vis);});if(getRaw(element,'left').isNone()&&getRaw(element,'top').isNone()&&getRaw(element,'right').isNone()&&getRaw(element,'bottom').isNone()&&is$1(getRaw(element,'position'),'fixed')){remove$6(element,'position');}},element);};var getMode=function getMode(component,pConfig,_pState){return pConfig.useFixed()?'fixed':'absolute';};var reset$1=function reset$1(component,pConfig,posState,placee){var element=placee.element;each$1(['position','left','right','top','bottom'],function(prop){return remove$6(element,prop);});reset$2(element);posState.clear(placee.uid);};var PositionApis=/*#__PURE__*/Object.freeze({__proto__:null,position:position$1,positionWithin:positionWithin,positionWithinBounds:positionWithinBounds,getMode:getMode,reset:reset$1});var init$g=function init$g(){var state={};var set=function set(id,data){state[id]=data;};var get=function get(id){return get$g(state,id);};var clear=function clear(id){if(isNonNullable(id)){delete state[id];}else{state={};}};return nu$8({readState:function readState(){return state;},clear:clear,set:set,get:get});};var PositioningState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$g});var Positioning=create$3({fields:PositionSchema,name:'positioning',active:ActivePosition,apis:PositionApis,state:PositioningState});var isConnected=function isConnected(comp){return comp.getSystem().isConnected();};var fireDetaching=function fireDetaching(component){emit(component,detachedFromDom());var children=component.components();each$1(children,fireDetaching);};var fireAttaching=function fireAttaching(component){var children=component.components();each$1(children,fireAttaching);emit(component,attachedToDom());};var virtualAttach=function virtualAttach(parent,child){parent.getSystem().addToWorld(child);if(inBody(parent.element)){fireAttaching(child);}};var virtualDetach=function virtualDetach(comp){fireDetaching(comp);comp.getSystem().removeFromWorld(comp);};var attach$1=function attach$1(parent,child){append$2(parent.element,child.element);};var detachChildren$1=function detachChildren$1(component){each$1(component.components(),function(childComp){return remove$5(childComp.element);});empty(component.element);component.syncComponents();};var replaceChildren=function replaceChildren(component,newSpecs,buildNewChildren){var subs=component.components();detachChildren$1(component);var newChildren=buildNewChildren(newSpecs);var deleted=difference(subs,newChildren);each$1(deleted,function(comp){fireDetaching(comp);component.getSystem().removeFromWorld(comp);});each$1(newChildren,function(childComp){if(!isConnected(childComp)){component.getSystem().addToWorld(childComp);attach$1(component,childComp);if(inBody(component.element)){fireAttaching(childComp);}}else{attach$1(component,childComp);}});component.syncComponents();};var virtualReplaceChildren=function virtualReplaceChildren(component,newSpecs,buildNewChildren){var subs=component.components();var existingComps=bind$3(newSpecs,function(spec){return getPremade(spec).toArray();});each$1(subs,function(childComp){if(!contains$2(existingComps,childComp)){virtualDetach(childComp);}});var newChildren=buildNewChildren(newSpecs);var deleted=difference(subs,newChildren);each$1(deleted,function(deletedComp){if(isConnected(deletedComp)){virtualDetach(deletedComp);}});each$1(newChildren,function(childComp){if(!isConnected(childComp)){virtualAttach(component,childComp);}});component.syncComponents();};var attach=function attach(parent,child){attachWith(parent,child,append$2);};var attachWith=function attachWith(parent,child,insertion){parent.getSystem().addToWorld(child);insertion(parent.element,child.element);if(inBody(parent.element)){fireAttaching(child);}parent.syncComponents();};var doDetach=function doDetach(component){fireDetaching(component);remove$5(component.element);component.getSystem().removeFromWorld(component);};var detach=function detach(component){var parent$1=parent(component.element).bind(function(p){return component.getSystem().getByDom(p).toOptional();});doDetach(component);parent$1.each(function(p){p.syncComponents();});};var detachChildren=function detachChildren(component){var subs=component.components();each$1(subs,doDetach);empty(component.element);component.syncComponents();};var attachSystem=function attachSystem(element,guiSystem){attachSystemWith(element,guiSystem,append$2);};var attachSystemAfter=function attachSystemAfter(element,guiSystem){attachSystemWith(element,guiSystem,after$2);};var attachSystemWith=function attachSystemWith(element,guiSystem,inserter){inserter(element,guiSystem.element);var children$1=children(guiSystem.element);each$1(children$1,function(child){guiSystem.getByDom(child).each(fireAttaching);});};var detachSystem=function detachSystem(guiSystem){var children$1=children(guiSystem.element);each$1(children$1,function(child){guiSystem.getByDom(child).each(fireDetaching);});remove$5(guiSystem.element);};var rebuild=function rebuild(sandbox,sConfig,sState,data){sState.get().each(function(_data){detachChildren(sandbox);});var point=sConfig.getAttachPoint(sandbox);attach(point,sandbox);var built=sandbox.getSystem().build(data);attach(sandbox,built);sState.set(built);return built;};var open$1=function open$1(sandbox,sConfig,sState,data){var newState=rebuild(sandbox,sConfig,sState,data);sConfig.onOpen(sandbox,newState);return newState;};var setContent=function setContent(sandbox,sConfig,sState,data){return sState.get().map(function(){return rebuild(sandbox,sConfig,sState,data);});};var openWhileCloaked=function openWhileCloaked(sandbox,sConfig,sState,data,transaction){cloak(sandbox,sConfig);open$1(sandbox,sConfig,sState,data);transaction();decloak(sandbox,sConfig);};var close$1=function close$1(sandbox,sConfig,sState){sState.get().each(function(data){detachChildren(sandbox);detach(sandbox);sConfig.onClose(sandbox,data);sState.clear();});};var isOpen$1=function isOpen$1(_sandbox,_sConfig,sState){return sState.isOpen();};var isPartOf=function isPartOf(sandbox,sConfig,sState,queryElem){return isOpen$1(sandbox,sConfig,sState)&&sState.get().exists(function(data){return sConfig.isPartOf(sandbox,data,queryElem);});};var getState$2=function getState$2(_sandbox,_sConfig,sState){return sState.get();};var store=function store(sandbox,cssKey,attr,newValue){getRaw(sandbox.element,cssKey).fold(function(){remove$7(sandbox.element,attr);},function(v){set$9(sandbox.element,attr,v);});set$8(sandbox.element,cssKey,newValue);};var restore=function restore(sandbox,cssKey,attr){getOpt(sandbox.element,attr).fold(function(){return remove$6(sandbox.element,cssKey);},function(oldValue){return set$8(sandbox.element,cssKey,oldValue);});};var cloak=function cloak(sandbox,sConfig,_sState){var sink=sConfig.getAttachPoint(sandbox);set$8(sandbox.element,'position',Positioning.getMode(sink));store(sandbox,'visibility',sConfig.cloakVisibilityAttr,'hidden');};var hasPosition=function hasPosition(element){return exists(['top','left','right','bottom'],function(pos){return getRaw(element,pos).isSome();});};var decloak=function decloak(sandbox,sConfig,_sState){if(!hasPosition(sandbox.element)){remove$6(sandbox.element,'position');}restore(sandbox,'visibility',sConfig.cloakVisibilityAttr);};var SandboxApis=/*#__PURE__*/Object.freeze({__proto__:null,cloak:cloak,decloak:decloak,open:open$1,openWhileCloaked:openWhileCloaked,close:close$1,isOpen:isOpen$1,isPartOf:isPartOf,getState:getState$2,setContent:setContent});var events$g=function events$g(sandboxConfig,sandboxState){return derive$2([run$1(sandboxClose(),function(sandbox,_simulatedEvent){close$1(sandbox,sandboxConfig,sandboxState);})]);};var ActiveSandbox=/*#__PURE__*/Object.freeze({__proto__:null,events:events$g});var SandboxSchema=[onHandler('onOpen'),onHandler('onClose'),required$1('isPartOf'),required$1('getAttachPoint'),defaulted('cloakVisibilityAttr','data-precloak-visibility')];var init$f=function init$f(){var contents=value$2();var readState=constant$1('not-implemented');return nu$8({readState:readState,isOpen:contents.isSet,clear:contents.clear,set:contents.set,get:contents.get});};var SandboxState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$f});var Sandboxing=create$3({fields:SandboxSchema,name:'sandboxing',active:ActiveSandbox,apis:SandboxApis,state:SandboxState});var dismissPopups=constant$1('dismiss.popups');var repositionPopups=constant$1('reposition.popups');var mouseReleased=constant$1('mouse.released');var schema$x=objOfOnly([defaulted('isExtraPart',never),optionObjOf('fireEventInstead',[defaulted('event',dismissRequested())])]);var receivingChannel$1=function receivingChannel$1(rawSpec){var detail=asRawOrDie$1('Dismissal',schema$x,rawSpec);return _defineProperty({},dismissPopups(),{schema:objOfOnly([required$1('target')]),onReceive:function onReceive(sandbox,data){if(Sandboxing.isOpen(sandbox)){var isPart=Sandboxing.isPartOf(sandbox,data.target)||detail.isExtraPart(sandbox,data.target);if(!isPart){detail.fireEventInstead.fold(function(){return Sandboxing.close(sandbox);},function(fe){return emit(sandbox,fe.event);});}}}});};var schema$w=objOfOnly([optionObjOf('fireEventInstead',[defaulted('event',repositionRequested())]),requiredFunction('doReposition')]);var receivingChannel=function receivingChannel(rawSpec){var detail=asRawOrDie$1('Reposition',schema$w,rawSpec);return _defineProperty({},repositionPopups(),{onReceive:function onReceive(sandbox){if(Sandboxing.isOpen(sandbox)){detail.fireEventInstead.fold(function(){return detail.doReposition(sandbox);},function(fe){return emit(sandbox,fe.event);});}}});};var onLoad$5=function onLoad$5(component,repConfig,repState){repConfig.store.manager.onLoad(component,repConfig,repState);};var onUnload$2=function onUnload$2(component,repConfig,repState){repConfig.store.manager.onUnload(component,repConfig,repState);};var setValue$3=function setValue$3(component,repConfig,repState,data){repConfig.store.manager.setValue(component,repConfig,repState,data);};var getValue$3=function getValue$3(component,repConfig,repState){return repConfig.store.manager.getValue(component,repConfig,repState);};var getState$1=function getState$1(component,repConfig,repState){return repState;};var RepresentApis=/*#__PURE__*/Object.freeze({__proto__:null,onLoad:onLoad$5,onUnload:onUnload$2,setValue:setValue$3,getValue:getValue$3,getState:getState$1});var events$f=function events$f(repConfig,repState){var es=repConfig.resetOnDom?[runOnAttached(function(comp,_se){onLoad$5(comp,repConfig,repState);}),runOnDetached(function(comp,_se){onUnload$2(comp,repConfig,repState);})]:[loadEvent(repConfig,repState,onLoad$5)];return derive$2(es);};var ActiveRepresenting=/*#__PURE__*/Object.freeze({__proto__:null,events:events$f});var memory$1=function memory$1(){var data=Cell(null);var readState=function readState(){return{mode:'memory',value:data.get()};};var isNotSet=function isNotSet(){return data.get()===null;};var clear=function clear(){data.set(null);};return nu$8({set:data.set,get:data.get,isNotSet:isNotSet,clear:clear,readState:readState});};var manual=function manual(){var readState=noop;return nu$8({readState:readState});};var dataset=function dataset(){var dataByValue=Cell({});var dataByText=Cell({});var readState=function readState(){return{mode:'dataset',dataByValue:dataByValue.get(),dataByText:dataByText.get()};};var clear=function clear(){dataByValue.set({});dataByText.set({});};var lookup=function lookup(itemString){return get$g(dataByValue.get(),itemString).orThunk(function(){return get$g(dataByText.get(),itemString);});};var update=function update(items){var currentDataByValue=dataByValue.get();var currentDataByText=dataByText.get();var newDataByValue={};var newDataByText={};each$1(items,function(item){newDataByValue[item.value]=item;get$g(item,'meta').each(function(meta){get$g(meta,'text').each(function(text){newDataByText[text]=item;});});});dataByValue.set(_objectSpread({},currentDataByValue,{},newDataByValue));dataByText.set(_objectSpread({},currentDataByText,{},newDataByText));};return nu$8({readState:readState,lookup:lookup,update:update,clear:clear});};var init$e=function init$e(spec){return spec.store.manager.state(spec);};var RepresentState=/*#__PURE__*/Object.freeze({__proto__:null,memory:memory$1,dataset:dataset,manual:manual,init:init$e});var setValue$2=function setValue$2(component,repConfig,repState,data){var store=repConfig.store;repState.update([data]);store.setValue(component,data);repConfig.onSetValue(component,data);};var getValue$2=function getValue$2(component,repConfig,repState){var store=repConfig.store;var key=store.getDataKey(component);return repState.lookup(key).getOrThunk(function(){return store.getFallbackEntry(key);});};var onLoad$4=function onLoad$4(component,repConfig,repState){var store=repConfig.store;store.initialValue.each(function(data){setValue$2(component,repConfig,repState,data);});};var onUnload$1=function onUnload$1(component,repConfig,repState){repState.clear();};var DatasetStore=[option$3('initialValue'),required$1('getFallbackEntry'),required$1('getDataKey'),required$1('setValue'),output$1('manager',{setValue:setValue$2,getValue:getValue$2,onLoad:onLoad$4,onUnload:onUnload$1,state:dataset})];var getValue$1=function getValue$1(component,repConfig,_repState){return repConfig.store.getValue(component);};var setValue$1=function setValue$1(component,repConfig,_repState,data){repConfig.store.setValue(component,data);repConfig.onSetValue(component,data);};var onLoad$3=function onLoad$3(component,repConfig,_repState){repConfig.store.initialValue.each(function(data){repConfig.store.setValue(component,data);});};var ManualStore=[required$1('getValue'),defaulted('setValue',noop),option$3('initialValue'),output$1('manager',{setValue:setValue$1,getValue:getValue$1,onLoad:onLoad$3,onUnload:noop,state:NoState.init})];var setValue=function setValue(component,repConfig,repState,data){repState.set(data);repConfig.onSetValue(component,data);};var getValue=function getValue(component,repConfig,repState){return repState.get();};var onLoad$2=function onLoad$2(component,repConfig,repState){repConfig.store.initialValue.each(function(initVal){if(repState.isNotSet()){repState.set(initVal);}});};var onUnload=function onUnload(component,repConfig,repState){repState.clear();};var MemoryStore=[option$3('initialValue'),output$1('manager',{setValue:setValue,getValue:getValue,onLoad:onLoad$2,onUnload:onUnload,state:memory$1})];var RepresentSchema=[defaultedOf('store',{mode:'memory'},choose$1('mode',{memory:MemoryStore,manual:ManualStore,dataset:DatasetStore})),onHandler('onSetValue'),defaulted('resetOnDom',false)];var Representing=create$3({fields:RepresentSchema,name:'representing',active:ActiveRepresenting,apis:RepresentApis,extra:{setValueFrom:function setValueFrom(component,source){var value=Representing.getValue(source);Representing.setValue(component,value);}},state:RepresentState});var field=function field(name,forbidden){return defaultedObjOf(name,{},map$2(forbidden,function(f){return forbid(f.name(),'Cannot configure '+f.name()+' for '+name);}).concat([customField('dump',identity)]));};var get$3=function get$3(data){return data.dump;};var augment=function augment(data,original){return _objectSpread({},derive$1(original),{},data.dump);};var SketchBehaviours={field:field,augment:augment,get:get$3};var _placeholder='placeholder';var adt$3=Adt.generate([{single:['required','valueThunk']},{multiple:['required','valueThunks']}]);var isSubstituted=function isSubstituted(spec){return has$2(spec,'uiType');};var subPlaceholder=function subPlaceholder(owner,detail,compSpec,placeholders){if(owner.exists(function(o){return o!==compSpec.owner;})){return adt$3.single(true,constant$1(compSpec));}return get$g(placeholders,compSpec.name).fold(function(){throw new Error('Unknown placeholder component: '+compSpec.name+'\nKnown: ['+keys(placeholders)+']\nNamespace: '+owner.getOr('none')+'\nSpec: '+JSON.stringify(compSpec,null,2));},function(newSpec){return newSpec.replace();});};var scan=function scan(owner,detail,compSpec,placeholders){if(isSubstituted(compSpec)&&compSpec.uiType===_placeholder){return subPlaceholder(owner,detail,compSpec,placeholders);}else{return adt$3.single(false,constant$1(compSpec));}};var substitute=function substitute(owner,detail,compSpec,placeholders){var base=scan(owner,detail,compSpec,placeholders);return base.fold(function(req,valueThunk){var value=isSubstituted(compSpec)?valueThunk(detail,compSpec.config,compSpec.validated):valueThunk(detail);var childSpecs=get$g(value,'components').getOr([]);var substituted=bind$3(childSpecs,function(c){return substitute(owner,detail,c,placeholders);});return[_objectSpread({},value,{components:substituted})];},function(req,valuesThunk){if(isSubstituted(compSpec)){var _values=valuesThunk(detail,compSpec.config,compSpec.validated);var preprocessor=compSpec.validated.preprocess.getOr(identity);return preprocessor(_values);}else{return valuesThunk(detail);}});};var substituteAll=function substituteAll(owner,detail,components,placeholders){return bind$3(components,function(c){return substitute(owner,detail,c,placeholders);});};var oneReplace=function oneReplace(label,replacements){var called=false;var used=function used(){return called;};var replace=function replace(){if(called){throw new Error('Trying to use the same placeholder more than once: '+label);}called=true;return replacements;};var required=function required(){return replacements.fold(function(req,_){return req;},function(req,_){return req;});};return{name:constant$1(label),required:required,used:used,replace:replace};};var substitutePlaces=function substitutePlaces(owner,detail,components,placeholders){var ps=map$1(placeholders,function(ph,name){return oneReplace(name,ph);});var outcome=substituteAll(owner,detail,components,ps);each(ps,function(p){if(p.used()===false&&p.required()){throw new Error('Placeholder: '+p.name()+' was not found in components list\nNamespace: '+owner.getOr('none')+'\nComponents: '+JSON.stringify(detail.components,null,2));}});return outcome;};var single$2=adt$3.single;var multiple=adt$3.multiple;var placeholder=constant$1(_placeholder);var adt$2=Adt.generate([{required:['data']},{external:['data']},{optional:['data']},{group:['data']}]);var fFactory=defaulted('factory',{sketch:identity});var fSchema=defaulted('schema',[]);var fName=required$1('name');var fPname=field$1('pname','pname',defaultedThunk(function(typeSpec){return'<alloy.'+generate$6(typeSpec.name)+'>';}),anyValue());var fGroupSchema=customField('schema',function(){return[option$3('preprocess')];});var fDefaults=defaulted('defaults',constant$1({}));var fOverrides=defaulted('overrides',constant$1({}));var requiredSpec=objOf([fFactory,fSchema,fName,fPname,fDefaults,fOverrides]);var externalSpec=objOf([fFactory,fSchema,fName,fDefaults,fOverrides]);var optionalSpec=objOf([fFactory,fSchema,fName,fPname,fDefaults,fOverrides]);var groupSpec=objOf([fFactory,fGroupSchema,fName,required$1('unit'),fPname,fDefaults,fOverrides]);var asNamedPart=function asNamedPart(part){return part.fold(Optional.some,Optional.none,Optional.some,Optional.some);};var name$2=function name$2(part){var get=function get(data){return data.name;};return part.fold(get,get,get,get);};var asCommon=function asCommon(part){return part.fold(identity,identity,identity,identity);};var convert=function convert(adtConstructor,partSchema){return function(spec){var data=asRawOrDie$1('Converting part type',partSchema,spec);return adtConstructor(data);};};var required=convert(adt$2.required,requiredSpec);var external=convert(adt$2.external,externalSpec);var optional=convert(adt$2.optional,optionalSpec);var group=convert(adt$2.group,groupSpec);var original=constant$1('entirety');var PartType=/*#__PURE__*/Object.freeze({__proto__:null,required:required,external:external,optional:optional,group:group,asNamedPart:asNamedPart,name:name$2,asCommon:asCommon,original:original});var combine=function combine(detail,data,partSpec,partValidated){return deepMerge(data.defaults(detail,partSpec,partValidated),partSpec,{uid:detail.partUids[data.name]},data.overrides(detail,partSpec,partValidated));};var subs=function subs(owner,detail,parts){var internals={};var externals={};each$1(parts,function(part){part.fold(function(data){internals[data.pname]=single$2(true,function(detail,partSpec,partValidated){return data.factory.sketch(combine(detail,data,partSpec,partValidated));});},function(data){var partSpec=detail.parts[data.name];externals[data.name]=constant$1(data.factory.sketch(combine(detail,data,partSpec[original()]),partSpec));},function(data){internals[data.pname]=single$2(false,function(detail,partSpec,partValidated){return data.factory.sketch(combine(detail,data,partSpec,partValidated));});},function(data){internals[data.pname]=multiple(true,function(detail,_partSpec,_partValidated){var units=detail[data.name];return map$2(units,function(u){return data.factory.sketch(deepMerge(data.defaults(detail,u,_partValidated),u,data.overrides(detail,u)));});});});});return{internals:constant$1(internals),externals:constant$1(externals)};};var generate$3=function generate$3(owner,parts){var r={};each$1(parts,function(part){asNamedPart(part).each(function(np){var g=doGenerateOne(owner,np.pname);r[np.name]=function(config){var validated=asRawOrDie$1('Part: '+np.name+' in '+owner,objOf(np.schema),config);return _objectSpread({},g,{config:config,validated:validated});};});});return r;};var doGenerateOne=function doGenerateOne(owner,pname){return{uiType:placeholder(),owner:owner,name:pname};};var generateOne$1=function generateOne$1(owner,pname,config){return{uiType:placeholder(),owner:owner,name:pname,config:config,validated:{}};};var schemas=function schemas(parts){return bind$3(parts,function(part){return part.fold(Optional.none,Optional.some,Optional.none,Optional.none).map(function(data){return requiredObjOf(data.name,data.schema.concat([snapshot(original())]));}).toArray();});};var names=function names(parts){return map$2(parts,name$2);};var substitutes=function substitutes(owner,detail,parts){return subs(owner,detail,parts);};var components$1=function components$1(owner,detail,internals){return substitutePlaces(Optional.some(owner),detail,detail.components,internals);};var getPart=function getPart(component,detail,partKey){var uid=detail.partUids[partKey];return component.getSystem().getByUid(uid).toOptional();};var getPartOrDie=function getPartOrDie(component,detail,partKey){return getPart(component,detail,partKey).getOrDie('Could not find part: '+partKey);};var getParts=function getParts(component,detail,partKeys){var r={};var uids=detail.partUids;var system=component.getSystem();each$1(partKeys,function(pk){r[pk]=constant$1(system.getByUid(uids[pk]));});return r;};var getAllParts=function getAllParts(component,detail){var system=component.getSystem();return map$1(detail.partUids,function(pUid,_k){return constant$1(system.getByUid(pUid));});};var getAllPartNames=function getAllPartNames(detail){return keys(detail.partUids);};var getPartsOrDie=function getPartsOrDie(component,detail,partKeys){var r={};var uids=detail.partUids;var system=component.getSystem();each$1(partKeys,function(pk){r[pk]=constant$1(system.getByUid(uids[pk]).getOrDie());});return r;};var defaultUids=function defaultUids(baseUid,partTypes){var partNames=names(partTypes);return wrapAll(map$2(partNames,function(pn){return{key:pn,value:baseUid+'-'+pn};}));};var defaultUidsSchema=function defaultUidsSchema(partTypes){return field$1('partUids','partUids',mergeWithThunk(function(spec){return defaultUids(spec.uid,partTypes);}),anyValue());};var AlloyParts=/*#__PURE__*/Object.freeze({__proto__:null,generate:generate$3,generateOne:generateOne$1,schemas:schemas,names:names,substitutes:substitutes,components:components$1,defaultUids:defaultUids,defaultUidsSchema:defaultUidsSchema,getAllParts:getAllParts,getAllPartNames:getAllPartNames,getPart:getPart,getPartOrDie:getPartOrDie,getParts:getParts,getPartsOrDie:getPartsOrDie});var base=function base(partSchemas,partUidsSchemas){var ps=partSchemas.length>0?[requiredObjOf('parts',partSchemas)]:[];return ps.concat([required$1('uid'),defaulted('dom',{}),defaulted('components',[]),snapshot('originalSpec'),defaulted('debug.sketcher',{})]).concat(partUidsSchemas);};var asRawOrDie=function asRawOrDie(label,schema,spec,partSchemas,partUidsSchemas){var baseS=base(partSchemas,partUidsSchemas);return asRawOrDie$1(label+' [SpecSchema]',objOfOnly(baseS.concat(schema)),spec);};var single$1=function single$1(owner,schema,factory,spec){var specWithUid=supplyUid(spec);var detail=asRawOrDie(owner,schema,specWithUid,[],[]);return factory(detail,specWithUid);};var composite$1=function composite$1(owner,schema,partTypes,factory,spec){var specWithUid=supplyUid(spec);var partSchemas=schemas(partTypes);var partUidsSchema=defaultUidsSchema(partTypes);var detail=asRawOrDie(owner,schema,specWithUid,partSchemas,[partUidsSchema]);var subs=substitutes(owner,detail,partTypes);var components=components$1(owner,detail,subs.internals());return factory(detail,components,specWithUid,subs.externals());};var hasUid=function hasUid(spec){return has$2(spec,'uid');};var supplyUid=function supplyUid(spec){return hasUid(spec)?spec:_objectSpread({},spec,{uid:generate$5('uid')});};var isSketchSpec=function isSketchSpec(spec){return spec.uid!==undefined;};var singleSchema=objOfOnly([required$1('name'),required$1('factory'),required$1('configFields'),defaulted('apis',{}),defaulted('extraApis',{})]);var compositeSchema=objOfOnly([required$1('name'),required$1('factory'),required$1('configFields'),required$1('partFields'),defaulted('apis',{}),defaulted('extraApis',{})]);var single=function single(rawConfig){var config=asRawOrDie$1('Sketcher for '+rawConfig.name,singleSchema,rawConfig);var sketch=function sketch(spec){return single$1(config.name,config.configFields,config.factory,spec);};var apis=map$1(config.apis,makeApi);var extraApis=map$1(config.extraApis,function(f,k){return markAsExtraApi(f,k);});return _objectSpread({name:config.name,configFields:config.configFields,sketch:sketch},apis,{},extraApis);};var composite=function composite(rawConfig){var config=asRawOrDie$1('Sketcher for '+rawConfig.name,compositeSchema,rawConfig);var sketch=function sketch(spec){return composite$1(config.name,config.configFields,config.partFields,config.factory,spec);};var parts=generate$3(config.name,config.partFields);var apis=map$1(config.apis,makeApi);var extraApis=map$1(config.extraApis,function(f,k){return markAsExtraApi(f,k);});return _objectSpread({name:config.name,partFields:config.partFields,configFields:config.configFields,sketch:sketch,parts:parts},apis,{},extraApis);};var inside=function inside(target){return isTag('input')(target)&&get$f(target,'type')!=='radio'||isTag('textarea')(target);};var getCurrent=function getCurrent(component,composeConfig,_composeState){return composeConfig.find(component);};var ComposeApis=/*#__PURE__*/Object.freeze({__proto__:null,getCurrent:getCurrent});var ComposeSchema=[required$1('find')];var Composing=create$3({fields:ComposeSchema,name:'composing',apis:ComposeApis});var nativeDisabled=['input','button','textarea','select'];var onLoad$1=function onLoad$1(component,disableConfig,disableState){var f=disableConfig.disabled()?disable:enable;f(component,disableConfig);};var hasNative=function hasNative(component,config){return config.useNative===true&&contains$2(nativeDisabled,name$3(component.element));};var nativeIsDisabled=function nativeIsDisabled(component){return has$1(component.element,'disabled');};var nativeDisable=function nativeDisable(component){set$9(component.element,'disabled','disabled');};var nativeEnable=function nativeEnable(component){remove$7(component.element,'disabled');};var ariaIsDisabled=function ariaIsDisabled(component){return get$f(component.element,'aria-disabled')==='true';};var ariaDisable=function ariaDisable(component){set$9(component.element,'aria-disabled','true');};var ariaEnable=function ariaEnable(component){set$9(component.element,'aria-disabled','false');};var disable=function disable(component,disableConfig,_disableState){disableConfig.disableClass.each(function(disableClass){add$2(component.element,disableClass);});var f=hasNative(component,disableConfig)?nativeDisable:ariaDisable;f(component);disableConfig.onDisabled(component);};var enable=function enable(component,disableConfig,_disableState){disableConfig.disableClass.each(function(disableClass){remove$2(component.element,disableClass);});var f=hasNative(component,disableConfig)?nativeEnable:ariaEnable;f(component);disableConfig.onEnabled(component);};var isDisabled=function isDisabled(component,disableConfig){return hasNative(component,disableConfig)?nativeIsDisabled(component):ariaIsDisabled(component);};var set$4=function set$4(component,disableConfig,disableState,disabled){var f=disabled?disable:enable;f(component,disableConfig);};var DisableApis=/*#__PURE__*/Object.freeze({__proto__:null,enable:enable,disable:disable,isDisabled:isDisabled,onLoad:onLoad$1,set:set$4});var exhibit$5=function exhibit$5(base,disableConfig){return nu$7({classes:disableConfig.disabled()?disableConfig.disableClass.toArray():[]});};var events$e=function events$e(disableConfig,disableState){return derive$2([abort(execute$5(),function(component,_simulatedEvent){return isDisabled(component,disableConfig);}),loadEvent(disableConfig,disableState,onLoad$1)]);};var ActiveDisable=/*#__PURE__*/Object.freeze({__proto__:null,exhibit:exhibit$5,events:events$e});var DisableSchema=[defaultedFunction('disabled',never),defaulted('useNative',true),option$3('disableClass'),onHandler('onDisabled'),onHandler('onEnabled')];var Disabling=create$3({fields:DisableSchema,name:'disabling',active:ActiveDisable,apis:DisableApis});var dehighlightAllExcept=function dehighlightAllExcept(component,hConfig,hState,skip){var highlighted=descendants(component.element,'.'+hConfig.highlightClass);each$1(highlighted,function(h){if(!exists(skip,function(skipComp){return skipComp.element===h;})){remove$2(h,hConfig.highlightClass);component.getSystem().getByDom(h).each(function(target){hConfig.onDehighlight(component,target);emit(target,dehighlight$1());});}});};var dehighlightAll=function dehighlightAll(component,hConfig,hState){return dehighlightAllExcept(component,hConfig,hState,[]);};var dehighlight=function dehighlight(component,hConfig,hState,target){if(isHighlighted(component,hConfig,hState,target)){remove$2(target.element,hConfig.highlightClass);hConfig.onDehighlight(component,target);emit(target,dehighlight$1());}};var highlight=function highlight(component,hConfig,hState,target){dehighlightAllExcept(component,hConfig,hState,[target]);if(!isHighlighted(component,hConfig,hState,target)){add$2(target.element,hConfig.highlightClass);hConfig.onHighlight(component,target);emit(target,highlight$1());}};var highlightFirst=function highlightFirst(component,hConfig,hState){getFirst(component,hConfig).each(function(firstComp){highlight(component,hConfig,hState,firstComp);});};var highlightLast=function highlightLast(component,hConfig,hState){getLast(component,hConfig).each(function(lastComp){highlight(component,hConfig,hState,lastComp);});};var highlightAt=function highlightAt(component,hConfig,hState,index){getByIndex(component,hConfig,hState,index).fold(function(err){throw err;},function(firstComp){highlight(component,hConfig,hState,firstComp);});};var highlightBy=function highlightBy(component,hConfig,hState,predicate){var candidates=getCandidates(component,hConfig);var targetComp=find$5(candidates,predicate);targetComp.each(function(c){highlight(component,hConfig,hState,c);});};var isHighlighted=function isHighlighted(component,hConfig,hState,queryTarget){return has(queryTarget.element,hConfig.highlightClass);};var getHighlighted=function getHighlighted(component,hConfig,_hState){return descendant(component.element,'.'+hConfig.highlightClass).bind(function(e){return component.getSystem().getByDom(e).toOptional();});};var getByIndex=function getByIndex(component,hConfig,hState,index){var items=descendants(component.element,'.'+hConfig.itemClass);return Optional.from(items[index]).fold(function(){return Result.error(new Error('No element found with index '+index));},component.getSystem().getByDom);};var getFirst=function getFirst(component,hConfig,_hState){return descendant(component.element,'.'+hConfig.itemClass).bind(function(e){return component.getSystem().getByDom(e).toOptional();});};var getLast=function getLast(component,hConfig,_hState){var items=descendants(component.element,'.'+hConfig.itemClass);var last=items.length>0?Optional.some(items[items.length-1]):Optional.none();return last.bind(function(c){return component.getSystem().getByDom(c).toOptional();});};var getDelta$2=function getDelta$2(component,hConfig,hState,delta){var items=descendants(component.element,'.'+hConfig.itemClass);var current=findIndex$1(items,function(item){return has(item,hConfig.highlightClass);});return current.bind(function(selected){var dest=cycleBy(selected,delta,0,items.length-1);return component.getSystem().getByDom(items[dest]).toOptional();});};var getPrevious=function getPrevious(component,hConfig,hState){return getDelta$2(component,hConfig,hState,-1);};var getNext=function getNext(component,hConfig,hState){return getDelta$2(component,hConfig,hState,+1);};var getCandidates=function getCandidates(component,hConfig,_hState){var items=descendants(component.element,'.'+hConfig.itemClass);return cat(map$2(items,function(i){return component.getSystem().getByDom(i).toOptional();}));};var HighlightApis=/*#__PURE__*/Object.freeze({__proto__:null,dehighlightAll:dehighlightAll,dehighlight:dehighlight,highlight:highlight,highlightFirst:highlightFirst,highlightLast:highlightLast,highlightAt:highlightAt,highlightBy:highlightBy,isHighlighted:isHighlighted,getHighlighted:getHighlighted,getFirst:getFirst,getLast:getLast,getPrevious:getPrevious,getNext:getNext,getCandidates:getCandidates});var HighlightSchema=[required$1('highlightClass'),required$1('itemClass'),onHandler('onHighlight'),onHandler('onDehighlight')];var Highlighting=create$3({fields:HighlightSchema,name:'highlighting',apis:HighlightApis});var BACKSPACE=[8];var TAB=[9];var ENTER=[13];var ESCAPE=[27];var SPACE=[32];var LEFT=[37];var UP=[38];var RIGHT=[39];var DOWN=[40];var cyclePrev=function cyclePrev(values,index,predicate){var before=reverse(values.slice(0,index));var after=reverse(values.slice(index+1));return find$5(before.concat(after),predicate);};var tryPrev=function tryPrev(values,index,predicate){var before=reverse(values.slice(0,index));return find$5(before,predicate);};var cycleNext=function cycleNext(values,index,predicate){var before=values.slice(0,index);var after=values.slice(index+1);return find$5(after.concat(before),predicate);};var tryNext=function tryNext(values,index,predicate){var after=values.slice(index+1);return find$5(after,predicate);};var inSet=function inSet(keys){return function(event){var raw=event.raw;return contains$2(keys,raw.which);};};var and=function and(preds){return function(event){return forall(preds,function(pred){return pred(event);});};};var isShift=function isShift(event){var raw=event.raw;return raw.shiftKey===true;};var isControl=function isControl(event){var raw=event.raw;return raw.ctrlKey===true;};var isNotShift=not(isShift);var rule=function rule(matches,action){return{matches:matches,classification:action};};var choose=function choose(transitions,event){var transition=find$5(transitions,function(t){return t.matches(event);});return transition.map(function(t){return t.classification;});};var reportFocusShifting=function reportFocusShifting(component,prevFocus,newFocus){var noChange=prevFocus.exists(function(p){return newFocus.exists(function(n){return eq(n,p);});});if(!noChange){emitWith(component,focusShifted(),{prevFocus:prevFocus,newFocus:newFocus});}};var dom$2=function dom$2(){var get=function get(component){return search(component.element);};var set=function set(component,focusee){var prevFocus=get(component);component.getSystem().triggerFocus(focusee,component.element);var newFocus=get(component);reportFocusShifting(component,prevFocus,newFocus);};return{get:get,set:set};};var highlights=function highlights(){var get=function get(component){return Highlighting.getHighlighted(component).map(function(item){return item.element;});};var set=function set(component,element){var prevFocus=get(component);component.getSystem().getByDom(element).fold(noop,function(item){Highlighting.highlight(component,item);});var newFocus=get(component);reportFocusShifting(component,prevFocus,newFocus);};return{get:get,set:set};};var FocusInsideModes;(function(FocusInsideModes){FocusInsideModes['OnFocusMode']='onFocus';FocusInsideModes['OnEnterOrSpaceMode']='onEnterOrSpace';FocusInsideModes['OnApiMode']='onApi';})(FocusInsideModes||(FocusInsideModes={}));var typical=function typical(infoSchema,stateInit,getKeydownRules,getKeyupRules,optFocusIn){var schema=function schema(){return infoSchema.concat([defaulted('focusManager',dom$2()),defaultedOf('focusInside','onFocus',valueOf(function(val){return contains$2(['onFocus','onEnterOrSpace','onApi'],val)?Result.value(val):Result.error('Invalid value for focusInside');})),output$1('handler',me),output$1('state',stateInit),output$1('sendFocusIn',optFocusIn)]);};var processKey=function processKey(component,simulatedEvent,getRules,keyingConfig,keyingState){var rules=getRules(component,simulatedEvent,keyingConfig,keyingState);return choose(rules,simulatedEvent.event).bind(function(rule){return rule(component,simulatedEvent,keyingConfig,keyingState);});};var toEvents=function toEvents(keyingConfig,keyingState){var onFocusHandler=keyingConfig.focusInside!==FocusInsideModes.OnFocusMode?Optional.none():optFocusIn(keyingConfig).map(function(focusIn){return run$1(focus$4(),function(component,simulatedEvent){focusIn(component,keyingConfig,keyingState);simulatedEvent.stop();});});var tryGoInsideComponent=function tryGoInsideComponent(component,simulatedEvent){var isEnterOrSpace=inSet(SPACE.concat(ENTER))(simulatedEvent.event);if(keyingConfig.focusInside===FocusInsideModes.OnEnterOrSpaceMode&&isEnterOrSpace&&isSource(component,simulatedEvent)){optFocusIn(keyingConfig).each(function(focusIn){focusIn(component,keyingConfig,keyingState);simulatedEvent.stop();});}};var keyboardEvents=[run$1(keydown(),function(component,simulatedEvent){processKey(component,simulatedEvent,getKeydownRules,keyingConfig,keyingState).fold(function(){tryGoInsideComponent(component,simulatedEvent);},function(_){simulatedEvent.stop();});}),run$1(keyup(),function(component,simulatedEvent){processKey(component,simulatedEvent,getKeyupRules,keyingConfig,keyingState).each(function(_){simulatedEvent.stop();});})];return derive$2(onFocusHandler.toArray().concat(keyboardEvents));};var me={schema:schema,processKey:processKey,toEvents:toEvents};return me;};var create$1=function create$1(cyclicField){var schema=[option$3('onEscape'),option$3('onEnter'),defaulted('selector','[data-alloy-tabstop="true"]:not(:disabled)'),defaulted('firstTabstop',0),defaulted('useTabstopAt',always),option$3('visibilitySelector')].concat([cyclicField]);var isVisible=function isVisible(tabbingConfig,element){var target=tabbingConfig.visibilitySelector.bind(function(sel){return closest$1(element,sel);}).getOr(element);return get$d(target)>0;};var findInitial=function findInitial(component,tabbingConfig){var tabstops=descendants(component.element,tabbingConfig.selector);var visibles=filter$2(tabstops,function(elem){return isVisible(tabbingConfig,elem);});return Optional.from(visibles[tabbingConfig.firstTabstop]);};var findCurrent=function findCurrent(component,tabbingConfig){return tabbingConfig.focusManager.get(component).bind(function(elem){return closest$1(elem,tabbingConfig.selector);});};var isTabstop=function isTabstop(tabbingConfig,element){return isVisible(tabbingConfig,element)&&tabbingConfig.useTabstopAt(element);};var focusIn=function focusIn(component,tabbingConfig,_tabbingState){findInitial(component,tabbingConfig).each(function(target){tabbingConfig.focusManager.set(component,target);});};var goFromTabstop=function goFromTabstop(component,tabstops,stopIndex,tabbingConfig,cycle){return cycle(tabstops,stopIndex,function(elem){return isTabstop(tabbingConfig,elem);}).fold(function(){return tabbingConfig.cyclic?Optional.some(true):Optional.none();},function(target){tabbingConfig.focusManager.set(component,target);return Optional.some(true);});};var go=function go(component,_simulatedEvent,tabbingConfig,cycle){var tabstops=descendants(component.element,tabbingConfig.selector);return findCurrent(component,tabbingConfig).bind(function(tabstop){var optStopIndex=findIndex$1(tabstops,curry(eq,tabstop));return optStopIndex.bind(function(stopIndex){return goFromTabstop(component,tabstops,stopIndex,tabbingConfig,cycle);});});};var goBackwards=function goBackwards(component,simulatedEvent,tabbingConfig){var navigate=tabbingConfig.cyclic?cyclePrev:tryPrev;return go(component,simulatedEvent,tabbingConfig,navigate);};var goForwards=function goForwards(component,simulatedEvent,tabbingConfig){var navigate=tabbingConfig.cyclic?cycleNext:tryNext;return go(component,simulatedEvent,tabbingConfig,navigate);};var execute=function execute(component,simulatedEvent,tabbingConfig){return tabbingConfig.onEnter.bind(function(f){return f(component,simulatedEvent);});};var exit=function exit(component,simulatedEvent,tabbingConfig){return tabbingConfig.onEscape.bind(function(f){return f(component,simulatedEvent);});};var getKeydownRules=constant$1([rule(and([isShift,inSet(TAB)]),goBackwards),rule(inSet(TAB),goForwards),rule(and([isNotShift,inSet(ENTER)]),execute)]);var getKeyupRules=constant$1([rule(inSet(ESCAPE),exit)]);return typical(schema,NoState.init,getKeydownRules,getKeyupRules,function(){return Optional.some(focusIn);});};var AcyclicType=create$1(customField('cyclic',never));var CyclicType=create$1(customField('cyclic',always));var doDefaultExecute=function doDefaultExecute(component,_simulatedEvent,focused){dispatch(component,focused,execute$5());return Optional.some(true);};var defaultExecute=function defaultExecute(component,simulatedEvent,focused){var isComplex=inside(focused)&&inSet(SPACE)(simulatedEvent.event);return isComplex?Optional.none():doDefaultExecute(component,simulatedEvent,focused);};var stopEventForFirefox=function stopEventForFirefox(_component,_simulatedEvent){return Optional.some(true);};var schema$v=[defaulted('execute',defaultExecute),defaulted('useSpace',false),defaulted('useEnter',true),defaulted('useControlEnter',false),defaulted('useDown',false)];var execute$4=function execute$4(component,simulatedEvent,executeConfig){return executeConfig.execute(component,simulatedEvent,component.element);};var getKeydownRules$5=function getKeydownRules$5(component,_simulatedEvent,executeConfig,_executeState){var spaceExec=executeConfig.useSpace&&!inside(component.element)?SPACE:[];var enterExec=executeConfig.useEnter?ENTER:[];var downExec=executeConfig.useDown?DOWN:[];var execKeys=spaceExec.concat(enterExec).concat(downExec);return[rule(inSet(execKeys),execute$4)].concat(executeConfig.useControlEnter?[rule(and([isControl,inSet(ENTER)]),execute$4)]:[]);};var getKeyupRules$5=function getKeyupRules$5(component,_simulatedEvent,executeConfig,_executeState){return executeConfig.useSpace&&!inside(component.element)?[rule(inSet(SPACE),stopEventForFirefox)]:[];};var ExecutionType=typical(schema$v,NoState.init,getKeydownRules$5,getKeyupRules$5,function(){return Optional.none();});var flatgrid$1=function flatgrid$1(){var dimensions=value$2();var setGridSize=function setGridSize(numRows,numColumns){dimensions.set({numRows:numRows,numColumns:numColumns});};var getNumRows=function getNumRows(){return dimensions.get().map(function(d){return d.numRows;});};var getNumColumns=function getNumColumns(){return dimensions.get().map(function(d){return d.numColumns;});};return nu$8({readState:function readState(){return dimensions.get().map(function(d){return{numRows:String(d.numRows),numColumns:String(d.numColumns)};}).getOr({numRows:'?',numColumns:'?'});},setGridSize:setGridSize,getNumRows:getNumRows,getNumColumns:getNumColumns});};var init$d=function init$d(spec){return spec.state(spec);};var KeyingState=/*#__PURE__*/Object.freeze({__proto__:null,flatgrid:flatgrid$1,init:init$d});var useH=function useH(movement){return function(component,simulatedEvent,config,state){var move=movement(component.element);return use(move,component,simulatedEvent,config,state);};};var west$1=function west$1(moveLeft,moveRight){var movement=onDirection(moveLeft,moveRight);return useH(movement);};var east$1=function east$1(moveLeft,moveRight){var movement=onDirection(moveRight,moveLeft);return useH(movement);};var useV=function useV(move){return function(component,simulatedEvent,config,state){return use(move,component,simulatedEvent,config,state);};};var use=function use(move,component,simulatedEvent,config,state){var outcome=config.focusManager.get(component).bind(function(focused){return move(component.element,focused,config,state);});return outcome.map(function(newFocus){config.focusManager.set(component,newFocus);return true;});};var north$1=useV;var south$1=useV;var move$1=useV;var isHidden$1=function isHidden$1(dom){return dom.offsetWidth<=0&&dom.offsetHeight<=0;};var isVisible=function isVisible(element){return!isHidden$1(element.dom);};var locate=function locate(candidates,predicate){return findIndex$1(candidates,predicate).map(function(index){return{index:index,candidates:candidates};});};var locateVisible=function locateVisible(container,current,selector){var predicate=function predicate(x){return eq(x,current);};var candidates=descendants(container,selector);var visible=filter$2(candidates,isVisible);return locate(visible,predicate);};var findIndex=function findIndex(elements,target){return findIndex$1(elements,function(elem){return eq(target,elem);});};var withGrid=function withGrid(values,index,numCols,f){var oldRow=Math.floor(index/numCols);var oldColumn=index%numCols;return f(oldRow,oldColumn).bind(function(address){var newIndex=address.row*numCols+address.column;return newIndex>=0&&newIndex<values.length?Optional.some(values[newIndex]):Optional.none();});};var cycleHorizontal$1=function cycleHorizontal$1(values,index,numRows,numCols,delta){return withGrid(values,index,numCols,function(oldRow,oldColumn){var onLastRow=oldRow===numRows-1;var colsInRow=onLastRow?values.length-oldRow*numCols:numCols;var newColumn=cycleBy(oldColumn,delta,0,colsInRow-1);return Optional.some({row:oldRow,column:newColumn});});};var cycleVertical$1=function cycleVertical$1(values,index,numRows,numCols,delta){return withGrid(values,index,numCols,function(oldRow,oldColumn){var newRow=cycleBy(oldRow,delta,0,numRows-1);var onLastRow=newRow===numRows-1;var colsInRow=onLastRow?values.length-newRow*numCols:numCols;var newCol=clamp(oldColumn,0,colsInRow-1);return Optional.some({row:newRow,column:newCol});});};var cycleRight$1=function cycleRight$1(values,index,numRows,numCols){return cycleHorizontal$1(values,index,numRows,numCols,+1);};var cycleLeft$1=function cycleLeft$1(values,index,numRows,numCols){return cycleHorizontal$1(values,index,numRows,numCols,-1);};var cycleUp$1=function cycleUp$1(values,index,numRows,numCols){return cycleVertical$1(values,index,numRows,numCols,-1);};var cycleDown$1=function cycleDown$1(values,index,numRows,numCols){return cycleVertical$1(values,index,numRows,numCols,+1);};var schema$u=[required$1('selector'),defaulted('execute',defaultExecute),onKeyboardHandler('onEscape'),defaulted('captureTab',false),initSize()];var focusIn$3=function focusIn$3(component,gridConfig,_gridState){descendant(component.element,gridConfig.selector).each(function(first){gridConfig.focusManager.set(component,first);});};var findCurrent$1=function findCurrent$1(component,gridConfig){return gridConfig.focusManager.get(component).bind(function(elem){return closest$1(elem,gridConfig.selector);});};var execute$3=function execute$3(component,simulatedEvent,gridConfig,_gridState){return findCurrent$1(component,gridConfig).bind(function(focused){return gridConfig.execute(component,simulatedEvent,focused);});};var doMove$2=function doMove$2(cycle){return function(element,focused,gridConfig,gridState){return locateVisible(element,focused,gridConfig.selector).bind(function(identified){return cycle(identified.candidates,identified.index,gridState.getNumRows().getOr(gridConfig.initSize.numRows),gridState.getNumColumns().getOr(gridConfig.initSize.numColumns));});};};var handleTab=function handleTab(_component,_simulatedEvent,gridConfig){return gridConfig.captureTab?Optional.some(true):Optional.none();};var doEscape$1=function doEscape$1(component,simulatedEvent,gridConfig){return gridConfig.onEscape(component,simulatedEvent);};var moveLeft$3=doMove$2(cycleLeft$1);var moveRight$3=doMove$2(cycleRight$1);var moveNorth$1=doMove$2(cycleUp$1);var moveSouth$1=doMove$2(cycleDown$1);var getKeydownRules$4=constant$1([rule(inSet(LEFT),west$1(moveLeft$3,moveRight$3)),rule(inSet(RIGHT),east$1(moveLeft$3,moveRight$3)),rule(inSet(UP),north$1(moveNorth$1)),rule(inSet(DOWN),south$1(moveSouth$1)),rule(and([isShift,inSet(TAB)]),handleTab),rule(and([isNotShift,inSet(TAB)]),handleTab),rule(inSet(SPACE.concat(ENTER)),execute$3)]);var getKeyupRules$4=constant$1([rule(inSet(ESCAPE),doEscape$1),rule(inSet(SPACE),stopEventForFirefox)]);var FlatgridType=typical(schema$u,flatgrid$1,getKeydownRules$4,getKeyupRules$4,function(){return Optional.some(focusIn$3);});var horizontal=function horizontal(container,selector,current,delta){var isDisabledButton=function isDisabledButton(candidate){return name$3(candidate)==='button'&&get$f(candidate,'disabled')==='disabled';};var tryCycle=function tryCycle(initial,index,candidates){var newIndex=cycleBy(index,delta,0,candidates.length-1);if(newIndex===initial){return Optional.none();}else{return isDisabledButton(candidates[newIndex])?tryCycle(initial,newIndex,candidates):Optional.from(candidates[newIndex]);}};return locateVisible(container,current,selector).bind(function(identified){var index=identified.index;var candidates=identified.candidates;return tryCycle(index,index,candidates);});};var schema$t=[required$1('selector'),defaulted('getInitial',Optional.none),defaulted('execute',defaultExecute),onKeyboardHandler('onEscape'),defaulted('executeOnMove',false),defaulted('allowVertical',true)];var findCurrent=function findCurrent(component,flowConfig){return flowConfig.focusManager.get(component).bind(function(elem){return closest$1(elem,flowConfig.selector);});};var execute$2=function execute$2(component,simulatedEvent,flowConfig){return findCurrent(component,flowConfig).bind(function(focused){return flowConfig.execute(component,simulatedEvent,focused);});};var focusIn$2=function focusIn$2(component,flowConfig,_state){flowConfig.getInitial(component).orThunk(function(){return descendant(component.element,flowConfig.selector);}).each(function(first){flowConfig.focusManager.set(component,first);});};var moveLeft$2=function moveLeft$2(element,focused,info){return horizontal(element,info.selector,focused,-1);};var moveRight$2=function moveRight$2(element,focused,info){return horizontal(element,info.selector,focused,+1);};var doMove$1=function doMove$1(movement){return function(component,simulatedEvent,flowConfig,flowState){return movement(component,simulatedEvent,flowConfig,flowState).bind(function(){return flowConfig.executeOnMove?execute$2(component,simulatedEvent,flowConfig):Optional.some(true);});};};var doEscape=function doEscape(component,simulatedEvent,flowConfig){return flowConfig.onEscape(component,simulatedEvent);};var getKeydownRules$3=function getKeydownRules$3(_component,_se,flowConfig,_flowState){var westMovers=LEFT.concat(flowConfig.allowVertical?UP:[]);var eastMovers=RIGHT.concat(flowConfig.allowVertical?DOWN:[]);return[rule(inSet(westMovers),doMove$1(west$1(moveLeft$2,moveRight$2))),rule(inSet(eastMovers),doMove$1(east$1(moveLeft$2,moveRight$2))),rule(inSet(ENTER),execute$2),rule(inSet(SPACE),execute$2)];};var getKeyupRules$3=constant$1([rule(inSet(SPACE),stopEventForFirefox),rule(inSet(ESCAPE),doEscape)]);var FlowType=typical(schema$t,NoState.init,getKeydownRules$3,getKeyupRules$3,function(){return Optional.some(focusIn$2);});var toCell=function toCell(matrix,rowIndex,columnIndex){return Optional.from(matrix[rowIndex]).bind(function(row){return Optional.from(row[columnIndex]).map(function(cell){return{rowIndex:rowIndex,columnIndex:columnIndex,cell:cell};});});};var cycleHorizontal=function cycleHorizontal(matrix,rowIndex,startCol,deltaCol){var row=matrix[rowIndex];var colsInRow=row.length;var newColIndex=cycleBy(startCol,deltaCol,0,colsInRow-1);return toCell(matrix,rowIndex,newColIndex);};var cycleVertical=function cycleVertical(matrix,colIndex,startRow,deltaRow){var nextRowIndex=cycleBy(startRow,deltaRow,0,matrix.length-1);var colsInNextRow=matrix[nextRowIndex].length;var nextColIndex=clamp(colIndex,0,colsInNextRow-1);return toCell(matrix,nextRowIndex,nextColIndex);};var moveHorizontal=function moveHorizontal(matrix,rowIndex,startCol,deltaCol){var row=matrix[rowIndex];var colsInRow=row.length;var newColIndex=clamp(startCol+deltaCol,0,colsInRow-1);return toCell(matrix,rowIndex,newColIndex);};var moveVertical=function moveVertical(matrix,colIndex,startRow,deltaRow){var nextRowIndex=clamp(startRow+deltaRow,0,matrix.length-1);var colsInNextRow=matrix[nextRowIndex].length;var nextColIndex=clamp(colIndex,0,colsInNextRow-1);return toCell(matrix,nextRowIndex,nextColIndex);};var cycleRight=function cycleRight(matrix,startRow,startCol){return cycleHorizontal(matrix,startRow,startCol,+1);};var cycleLeft=function cycleLeft(matrix,startRow,startCol){return cycleHorizontal(matrix,startRow,startCol,-1);};var cycleUp=function cycleUp(matrix,startRow,startCol){return cycleVertical(matrix,startCol,startRow,-1);};var cycleDown=function cycleDown(matrix,startRow,startCol){return cycleVertical(matrix,startCol,startRow,+1);};var moveLeft$1=function moveLeft$1(matrix,startRow,startCol){return moveHorizontal(matrix,startRow,startCol,-1);};var moveRight$1=function moveRight$1(matrix,startRow,startCol){return moveHorizontal(matrix,startRow,startCol,+1);};var moveUp$1=function moveUp$1(matrix,startRow,startCol){return moveVertical(matrix,startCol,startRow,-1);};var moveDown$1=function moveDown$1(matrix,startRow,startCol){return moveVertical(matrix,startCol,startRow,+1);};var schema$s=[requiredObjOf('selectors',[required$1('row'),required$1('cell')]),defaulted('cycles',true),defaulted('previousSelector',Optional.none),defaulted('execute',defaultExecute)];var focusIn$1=function focusIn$1(component,matrixConfig,_state){var focused=matrixConfig.previousSelector(component).orThunk(function(){var selectors=matrixConfig.selectors;return descendant(component.element,selectors.cell);});focused.each(function(cell){matrixConfig.focusManager.set(component,cell);});};var execute$1=function execute$1(component,simulatedEvent,matrixConfig){return search(component.element).bind(function(focused){return matrixConfig.execute(component,simulatedEvent,focused);});};var toMatrix=function toMatrix(rows,matrixConfig){return map$2(rows,function(row){return descendants(row,matrixConfig.selectors.cell);});};var doMove=function doMove(ifCycle,ifMove){return function(element,focused,matrixConfig){var move=matrixConfig.cycles?ifCycle:ifMove;return closest$1(focused,matrixConfig.selectors.row).bind(function(inRow){var cellsInRow=descendants(inRow,matrixConfig.selectors.cell);return findIndex(cellsInRow,focused).bind(function(colIndex){var allRows=descendants(element,matrixConfig.selectors.row);return findIndex(allRows,inRow).bind(function(rowIndex){var matrix=toMatrix(allRows,matrixConfig);return move(matrix,rowIndex,colIndex).map(function(next){return next.cell;});});});});};};var moveLeft=doMove(cycleLeft,moveLeft$1);var moveRight=doMove(cycleRight,moveRight$1);var moveNorth=doMove(cycleUp,moveUp$1);var moveSouth=doMove(cycleDown,moveDown$1);var getKeydownRules$2=constant$1([rule(inSet(LEFT),west$1(moveLeft,moveRight)),rule(inSet(RIGHT),east$1(moveLeft,moveRight)),rule(inSet(UP),north$1(moveNorth)),rule(inSet(DOWN),south$1(moveSouth)),rule(inSet(SPACE.concat(ENTER)),execute$1)]);var getKeyupRules$2=constant$1([rule(inSet(SPACE),stopEventForFirefox)]);var MatrixType=typical(schema$s,NoState.init,getKeydownRules$2,getKeyupRules$2,function(){return Optional.some(focusIn$1);});var schema$r=[required$1('selector'),defaulted('execute',defaultExecute),defaulted('moveOnTab',false)];var execute=function execute(component,simulatedEvent,menuConfig){return menuConfig.focusManager.get(component).bind(function(focused){return menuConfig.execute(component,simulatedEvent,focused);});};var focusIn=function focusIn(component,menuConfig,_state){descendant(component.element,menuConfig.selector).each(function(first){menuConfig.focusManager.set(component,first);});};var moveUp=function moveUp(element,focused,info){return horizontal(element,info.selector,focused,-1);};var moveDown=function moveDown(element,focused,info){return horizontal(element,info.selector,focused,+1);};var fireShiftTab=function fireShiftTab(component,simulatedEvent,menuConfig,menuState){return menuConfig.moveOnTab?move$1(moveUp)(component,simulatedEvent,menuConfig,menuState):Optional.none();};var fireTab=function fireTab(component,simulatedEvent,menuConfig,menuState){return menuConfig.moveOnTab?move$1(moveDown)(component,simulatedEvent,menuConfig,menuState):Optional.none();};var getKeydownRules$1=constant$1([rule(inSet(UP),move$1(moveUp)),rule(inSet(DOWN),move$1(moveDown)),rule(and([isShift,inSet(TAB)]),fireShiftTab),rule(and([isNotShift,inSet(TAB)]),fireTab),rule(inSet(ENTER),execute),rule(inSet(SPACE),execute)]);var getKeyupRules$1=constant$1([rule(inSet(SPACE),stopEventForFirefox)]);var MenuType=typical(schema$r,NoState.init,getKeydownRules$1,getKeyupRules$1,function(){return Optional.some(focusIn);});var schema$q=[onKeyboardHandler('onSpace'),onKeyboardHandler('onEnter'),onKeyboardHandler('onShiftEnter'),onKeyboardHandler('onLeft'),onKeyboardHandler('onRight'),onKeyboardHandler('onTab'),onKeyboardHandler('onShiftTab'),onKeyboardHandler('onUp'),onKeyboardHandler('onDown'),onKeyboardHandler('onEscape'),defaulted('stopSpaceKeyup',false),option$3('focusIn')];var getKeydownRules=function getKeydownRules(component,simulatedEvent,specialInfo){return[rule(inSet(SPACE),specialInfo.onSpace),rule(and([isNotShift,inSet(ENTER)]),specialInfo.onEnter),rule(and([isShift,inSet(ENTER)]),specialInfo.onShiftEnter),rule(and([isShift,inSet(TAB)]),specialInfo.onShiftTab),rule(and([isNotShift,inSet(TAB)]),specialInfo.onTab),rule(inSet(UP),specialInfo.onUp),rule(inSet(DOWN),specialInfo.onDown),rule(inSet(LEFT),specialInfo.onLeft),rule(inSet(RIGHT),specialInfo.onRight),rule(inSet(SPACE),specialInfo.onSpace)];};var getKeyupRules=function getKeyupRules(component,simulatedEvent,specialInfo){return[].concat(_toConsumableArray(specialInfo.stopSpaceKeyup?[rule(inSet(SPACE),stopEventForFirefox)]:[]),[rule(inSet(ESCAPE),specialInfo.onEscape)]);};var SpecialType=typical(schema$q,NoState.init,getKeydownRules,getKeyupRules,function(specialInfo){return specialInfo.focusIn;});var acyclic=AcyclicType.schema();var cyclic=CyclicType.schema();var flow=FlowType.schema();var flatgrid=FlatgridType.schema();var matrix=MatrixType.schema();var execution=ExecutionType.schema();var menu=MenuType.schema();var special=SpecialType.schema();var KeyboardBranches=/*#__PURE__*/Object.freeze({__proto__:null,acyclic:acyclic,cyclic:cyclic,flow:flow,flatgrid:flatgrid,matrix:matrix,execution:execution,menu:menu,special:special});var isFlatgridState=function isFlatgridState(keyState){return hasNonNullableKey(keyState,'setGridSize');};var Keying=createModes({branchKey:'mode',branches:KeyboardBranches,name:'keying',active:{events:function events(keyingConfig,keyingState){var handler=keyingConfig.handler;return handler.toEvents(keyingConfig,keyingState);}},apis:{focusIn:function focusIn(component,keyConfig,keyState){keyConfig.sendFocusIn(keyConfig).fold(function(){component.getSystem().triggerFocus(component.element,component.element);},function(sendFocusIn){sendFocusIn(component,keyConfig,keyState);});},setGridSize:function setGridSize(component,keyConfig,keyState,numRows,numColumns){if(!isFlatgridState(keyState)){console.error('Layout does not support setGridSize');}else{keyState.setGridSize(numRows,numColumns);}}},state:KeyingState});var withoutReuse=function withoutReuse(parent,data){preserve$1(function(){replaceChildren(parent,data,function(){return map$2(data,parent.getSystem().build);});},parent.element);};var withReuse=function withReuse(parent,data){preserve$1(function(){virtualReplaceChildren(parent,data,function(){return patchSpecChildren(parent.element,data,parent.getSystem().buildOrPatch);});},parent.element);};var virtualReplace=function virtualReplace(component,replacee,replaceeIndex,childSpec){virtualDetach(replacee);var child=patchSpecChild(component.element,replaceeIndex,childSpec,component.getSystem().buildOrPatch);virtualAttach(component,child);component.syncComponents();};var insert=function insert(component,insertion,childSpec){var child=component.getSystem().build(childSpec);attachWith(component,child,insertion);};var replace=function replace(component,replacee,replaceeIndex,childSpec){detach(replacee);insert(component,function(p,c){return appendAt(p,c,replaceeIndex);},childSpec);};var set$3=function set$3(component,replaceConfig,replaceState,data){var replacer=replaceConfig.reuseDom?withReuse:withoutReuse;return replacer(component,data);};var append=function append(component,replaceConfig,replaceState,appendee){insert(component,append$2,appendee);};var prepend=function prepend(component,replaceConfig,replaceState,prependee){insert(component,prepend$1,prependee);};var remove=function remove(component,replaceConfig,replaceState,removee){var children=contents(component);var foundChild=find$5(children,function(child){return eq(removee.element,child.element);});foundChild.each(detach);};var contents=function contents(component,_replaceConfig){return component.components();};var replaceAt=function replaceAt(component,replaceConfig,replaceState,replaceeIndex,replacer){var children=contents(component);return Optional.from(children[replaceeIndex]).map(function(replacee){replacer.fold(function(){return detach(replacee);},function(r){var replacer=replaceConfig.reuseDom?virtualReplace:replace;replacer(component,replacee,replaceeIndex,r);});return replacee;});};var replaceBy=function replaceBy(component,replaceConfig,replaceState,replaceePred,replacer){var children=contents(component);return findIndex$1(children,replaceePred).bind(function(replaceeIndex){return replaceAt(component,replaceConfig,replaceState,replaceeIndex,replacer);});};var ReplaceApis=/*#__PURE__*/Object.freeze({__proto__:null,append:append,prepend:prepend,remove:remove,replaceAt:replaceAt,replaceBy:replaceBy,set:set$3,contents:contents});var Replacing=create$3({fields:[defaultedBoolean('reuseDom',true)],name:'replacing',apis:ReplaceApis});var events$d=function events$d(name,eventHandlers){var events=derive$2(eventHandlers);return create$3({fields:[required$1('enabled')],name:name,active:{events:constant$1(events)}});};var config=function config(name,eventHandlers){var me=events$d(name,eventHandlers);return{key:name,value:{config:{},me:me,configAsRaw:constant$1({}),initialConfig:{},state:NoState}};};var focus$2=function focus$2(component,focusConfig){if(!focusConfig.ignore){focus$3(component.element);focusConfig.onFocus(component);}};var blur=function blur(component,focusConfig){if(!focusConfig.ignore){blur$1(component.element);}};var isFocused=function isFocused(component){return hasFocus(component.element);};var FocusApis=/*#__PURE__*/Object.freeze({__proto__:null,focus:focus$2,blur:blur,isFocused:isFocused});var exhibit$4=function exhibit$4(base,focusConfig){var mod=focusConfig.ignore?{}:{attributes:{tabindex:'-1'}};return nu$7(mod);};var events$c=function events$c(focusConfig){return derive$2([run$1(focus$4(),function(component,simulatedEvent){focus$2(component,focusConfig);simulatedEvent.stop();})].concat(focusConfig.stopMousedown?[run$1(mousedown(),function(_,simulatedEvent){simulatedEvent.event.prevent();})]:[]));};var ActiveFocus=/*#__PURE__*/Object.freeze({__proto__:null,exhibit:exhibit$4,events:events$c});var FocusSchema=[onHandler('onFocus'),defaulted('stopMousedown',false),defaulted('ignore',false)];var Focusing=create$3({fields:FocusSchema,name:'focusing',active:ActiveFocus,apis:FocusApis});var SetupBehaviourCellState=function SetupBehaviourCellState(initialState){var init=function init(){var cell=Cell(initialState);var get=function get(){return cell.get();};var set=function set(newState){return cell.set(newState);};var clear=function clear(){return cell.set(initialState);};var readState=function readState(){return cell.get();};return{get:get,set:set,clear:clear,readState:readState};};return{init:init};};var updateAriaState=function updateAriaState(component,toggleConfig,toggleState){var ariaInfo=toggleConfig.aria;ariaInfo.update(component,ariaInfo,toggleState.get());};var updateClass=function updateClass(component,toggleConfig,toggleState){toggleConfig.toggleClass.each(function(toggleClass){if(toggleState.get()){add$2(component.element,toggleClass);}else{remove$2(component.element,toggleClass);}});};var set$2=function set$2(component,toggleConfig,toggleState,state){var initialState=toggleState.get();toggleState.set(state);updateClass(component,toggleConfig,toggleState);updateAriaState(component,toggleConfig,toggleState);if(initialState!==state){toggleConfig.onToggled(component,state);}};var toggle$2=function toggle$2(component,toggleConfig,toggleState){set$2(component,toggleConfig,toggleState,!toggleState.get());};var on=function on(component,toggleConfig,toggleState){set$2(component,toggleConfig,toggleState,true);};var off=function off(component,toggleConfig,toggleState){set$2(component,toggleConfig,toggleState,false);};var isOn=function isOn(component,toggleConfig,toggleState){return toggleState.get();};var onLoad=function onLoad(component,toggleConfig,toggleState){set$2(component,toggleConfig,toggleState,toggleConfig.selected);};var ToggleApis=/*#__PURE__*/Object.freeze({__proto__:null,onLoad:onLoad,toggle:toggle$2,isOn:isOn,on:on,off:off,set:set$2});var exhibit$3=function exhibit$3(){return nu$7({});};var events$b=function events$b(toggleConfig,toggleState){var execute=executeEvent(toggleConfig,toggleState,toggle$2);var load=loadEvent(toggleConfig,toggleState,onLoad);return derive$2(flatten([toggleConfig.toggleOnExecute?[execute]:[],[load]]));};var ActiveToggle=/*#__PURE__*/Object.freeze({__proto__:null,exhibit:exhibit$3,events:events$b});var updatePressed=function updatePressed(component,ariaInfo,status){set$9(component.element,'aria-pressed',status);if(ariaInfo.syncWithExpanded){updateExpanded(component,ariaInfo,status);}};var updateSelected=function updateSelected(component,ariaInfo,status){set$9(component.element,'aria-selected',status);};var updateChecked=function updateChecked(component,ariaInfo,status){set$9(component.element,'aria-checked',status);};var updateExpanded=function updateExpanded(component,ariaInfo,status){set$9(component.element,'aria-expanded',status);};var ToggleSchema=[defaulted('selected',false),option$3('toggleClass'),defaulted('toggleOnExecute',true),onHandler('onToggled'),defaultedOf('aria',{mode:'none'},choose$1('mode',{pressed:[defaulted('syncWithExpanded',false),output$1('update',updatePressed)],checked:[output$1('update',updateChecked)],expanded:[output$1('update',updateExpanded)],selected:[output$1('update',updateSelected)],none:[output$1('update',noop)]}))];var Toggling=create$3({fields:ToggleSchema,name:'toggling',active:ActiveToggle,apis:ToggleApis,state:SetupBehaviourCellState(false)});var pointerEvents=function pointerEvents(){var onClick=function onClick(component,simulatedEvent){simulatedEvent.stop();emitExecute(component);};return[run$1(click(),onClick),run$1(tap(),onClick),cutter(touchstart()),cutter(mousedown())];};var events$a=function events$a(optAction){var executeHandler=function executeHandler(action){return runOnExecute$1(function(component,simulatedEvent){action(component);simulatedEvent.stop();});};return derive$2(flatten([optAction.map(executeHandler).toArray(),pointerEvents()]));};var hoverEvent='alloy.item-hover';var focusEvent='alloy.item-focus';var toggledEvent='alloy.item-toggled';var onHover=function onHover(item){if(search(item.element).isNone()||Focusing.isFocused(item)){if(!Focusing.isFocused(item)){Focusing.focus(item);}emitWith(item,hoverEvent,{item:item});}};var onFocus$1=function onFocus$1(item){emitWith(item,focusEvent,{item:item});};var _onToggled=function onToggled(item,state){emitWith(item,toggledEvent,{item:item,state:state});};var hover=constant$1(hoverEvent);var focus$1=constant$1(focusEvent);var toggled=constant$1(toggledEvent);var getItemRole=function getItemRole(detail){return detail.toggling.map(function(toggling){return toggling.exclusive?'menuitemradio':'menuitemcheckbox';}).getOr('menuitem');};var getTogglingSpec=function getTogglingSpec(tConfig){return _objectSpread({aria:{mode:'checked'}},filter$1(tConfig,function(_value,name){return name!=='exclusive';}),{onToggled:function onToggled(component,state){if(isFunction(tConfig.onToggled)){tConfig.onToggled(component,state);}_onToggled(component,state);}});};var builder$2=function builder$2(detail){return{dom:detail.dom,domModification:_objectSpread({},detail.domModification,{attributes:_objectSpread({'role':getItemRole(detail)},detail.domModification.attributes,{'aria-haspopup':detail.hasSubmenu},detail.hasSubmenu?{'aria-expanded':false}:{})}),behaviours:SketchBehaviours.augment(detail.itemBehaviours,[detail.toggling.fold(Toggling.revoke,function(tConfig){return Toggling.config(getTogglingSpec(tConfig));}),Focusing.config({ignore:detail.ignoreFocus,stopMousedown:detail.ignoreFocus,onFocus:function onFocus(component){onFocus$1(component);}}),Keying.config({mode:'execution'}),Representing.config({store:{mode:'memory',initialValue:detail.data}}),config('item-type-events',[].concat(_toConsumableArray(pointerEvents()),[run$1(mouseover(),onHover),run$1(focusItem(),Focusing.focus)]))]),components:detail.components,eventOrder:detail.eventOrder};};var schema$p=[required$1('data'),required$1('components'),required$1('dom'),defaulted('hasSubmenu',false),option$3('toggling'),SketchBehaviours.field('itemBehaviours',[Toggling,Focusing,Keying,Representing]),defaulted('ignoreFocus',false),defaulted('domModification',{}),output$1('builder',builder$2),defaulted('eventOrder',{})];var builder$1=function builder$1(detail){return{dom:detail.dom,components:detail.components,events:derive$2([stopper(focusItem())])};};var schema$o=[required$1('dom'),required$1('components'),output$1('builder',builder$1)];var owner$2=constant$1('item-widget');var parts$h=constant$1([required({name:'widget',overrides:function overrides(detail){return{behaviours:derive$1([Representing.config({store:{mode:'manual',getValue:function getValue(_component){return detail.data;},setValue:noop}})])};}})]);var builder=function builder(detail){var subs=substitutes(owner$2(),detail,parts$h());var components=components$1(owner$2(),detail,subs.internals());var focusWidget=function focusWidget(component){return getPart(component,detail,'widget').map(function(widget){Keying.focusIn(widget);return widget;});};var onHorizontalArrow=function onHorizontalArrow(component,simulatedEvent){return inside(simulatedEvent.event.target)?Optional.none():function(){if(detail.autofocus){simulatedEvent.setSource(component.element);return Optional.none();}else{return Optional.none();}}();};return{dom:detail.dom,components:components,domModification:detail.domModification,events:derive$2([runOnExecute$1(function(component,simulatedEvent){focusWidget(component).each(function(_widget){simulatedEvent.stop();});}),run$1(mouseover(),onHover),run$1(focusItem(),function(component,_simulatedEvent){if(detail.autofocus){focusWidget(component);}else{Focusing.focus(component);}})]),behaviours:SketchBehaviours.augment(detail.widgetBehaviours,[Representing.config({store:{mode:'memory',initialValue:detail.data}}),Focusing.config({ignore:detail.ignoreFocus,onFocus:function onFocus(component){onFocus$1(component);}}),Keying.config({mode:'special',focusIn:detail.autofocus?function(component){focusWidget(component);}:revoke(),onLeft:onHorizontalArrow,onRight:onHorizontalArrow,onEscape:function onEscape(component,simulatedEvent){if(!Focusing.isFocused(component)&&!detail.autofocus){Focusing.focus(component);return Optional.some(true);}else if(detail.autofocus){simulatedEvent.setSource(component.element);return Optional.none();}else{return Optional.none();}}})])};};var schema$n=[required$1('uid'),required$1('data'),required$1('components'),required$1('dom'),defaulted('autofocus',false),defaulted('ignoreFocus',false),SketchBehaviours.field('widgetBehaviours',[Representing,Focusing,Keying]),defaulted('domModification',{}),defaultUidsSchema(parts$h()),output$1('builder',builder)];var itemSchema$2=choose$1('type',{widget:schema$n,item:schema$p,separator:schema$o});var configureGrid=function configureGrid(detail,movementInfo){return{mode:'flatgrid',selector:'.'+detail.markers.item,initSize:{numColumns:movementInfo.initSize.numColumns,numRows:movementInfo.initSize.numRows},focusManager:detail.focusManager};};var configureMatrix=function configureMatrix(detail,movementInfo){return{mode:'matrix',selectors:{row:movementInfo.rowSelector,cell:'.'+detail.markers.item},focusManager:detail.focusManager};};var configureMenu=function configureMenu(detail,movementInfo){return{mode:'menu',selector:'.'+detail.markers.item,moveOnTab:movementInfo.moveOnTab,focusManager:detail.focusManager};};var parts$g=constant$1([group({factory:{sketch:function sketch(spec){var itemInfo=asRawOrDie$1('menu.spec item',itemSchema$2,spec);return itemInfo.builder(itemInfo);}},name:'items',unit:'item',defaults:function defaults(detail,u){return has$2(u,'uid')?u:_objectSpread({},u,{uid:generate$5('item')});},overrides:function overrides(detail,u){return{type:u.type,ignoreFocus:detail.fakeFocus,domModification:{classes:[detail.markers.item]}};}})]);var schema$m=constant$1([required$1('value'),required$1('items'),required$1('dom'),required$1('components'),defaulted('eventOrder',{}),field('menuBehaviours',[Highlighting,Representing,Composing,Keying]),defaultedOf('movement',{mode:'menu',moveOnTab:true},choose$1('mode',{grid:[initSize(),output$1('config',configureGrid)],matrix:[output$1('config',configureMatrix),required$1('rowSelector')],menu:[defaulted('moveOnTab',true),output$1('config',configureMenu)]})),itemMarkers(),defaulted('fakeFocus',false),defaulted('focusManager',dom$2()),onHandler('onHighlight')]);var focus=constant$1('alloy.menu-focus');var deselectOtherRadioItems=function deselectOtherRadioItems(menu,item){var checkedRadioItems=descendants(menu.element,'[role="menuitemradio"][aria-checked="true"]');each$1(checkedRadioItems,function(ele){if(!eq(ele,item.element)){menu.getSystem().getByDom(ele).each(function(c){Toggling.off(c);});}});};var make$7=function make$7(detail,components,_spec,_externals){return{uid:detail.uid,dom:detail.dom,markers:detail.markers,behaviours:augment(detail.menuBehaviours,[Highlighting.config({highlightClass:detail.markers.selectedItem,itemClass:detail.markers.item,onHighlight:detail.onHighlight}),Representing.config({store:{mode:'memory',initialValue:detail.value}}),Composing.config({find:Optional.some}),Keying.config(detail.movement.config(detail,detail.movement))]),events:derive$2([run$1(focus$1(),function(menu,simulatedEvent){var event=simulatedEvent.event;menu.getSystem().getByDom(event.target).each(function(item){Highlighting.highlight(menu,item);simulatedEvent.stop();emitWith(menu,focus(),{menu:menu,item:item});});}),run$1(hover(),function(menu,simulatedEvent){var item=simulatedEvent.event.item;Highlighting.highlight(menu,item);}),run$1(toggled(),function(menu,simulatedEvent){var _simulatedEvent$event=simulatedEvent.event,item=_simulatedEvent$event.item,state=_simulatedEvent$event.state;if(state&&get$f(item.element,'role')==='menuitemradio'){deselectOtherRadioItems(menu,item);}})]),components:components,eventOrder:detail.eventOrder,domModification:{attributes:{role:'menu'}}};};var Menu=composite({name:'Menu',configFields:schema$m(),partFields:parts$g(),factory:make$7});var transpose$1=function transpose$1(obj){return tupleMap(obj,function(v,k){return{k:v,v:k};});};var trace=function trace(items,byItem,byMenu,finish){return get$g(byMenu,finish).bind(function(triggerItem){return get$g(items,triggerItem).bind(function(triggerMenu){var rest=trace(items,byItem,byMenu,triggerMenu);return Optional.some([triggerMenu].concat(rest));});}).getOr([]);};var generate$2=function generate$2(menus,expansions){var items={};each(menus,function(menuItems,menu){each$1(menuItems,function(item){items[item]=menu;});});var byItem=expansions;var byMenu=transpose$1(expansions);var menuPaths=map$1(byMenu,function(_triggerItem,submenu){return[submenu].concat(trace(items,byItem,byMenu,submenu));});return map$1(items,function(menu){return get$g(menuPaths,menu).getOr([menu]);});};var init$c=function init$c(){var expansions=Cell({});var menus=Cell({});var paths=Cell({});var primary=value$2();var directory=Cell({});var clear=function clear(){expansions.set({});menus.set({});paths.set({});primary.clear();};var isClear=function isClear(){return primary.get().isNone();};var setMenuBuilt=function setMenuBuilt(menuName,built){menus.set(_objectSpread({},menus.get(),_defineProperty({},menuName,{type:'prepared',menu:built})));};var setContents=function setContents(sPrimary,sMenus,sExpansions,dir){primary.set(sPrimary);expansions.set(sExpansions);menus.set(sMenus);directory.set(dir);var sPaths=generate$2(dir,sExpansions);paths.set(sPaths);};var getTriggeringItem=function getTriggeringItem(menuValue){return find$4(expansions.get(),function(v,_k){return v===menuValue;});};var getTriggerData=function getTriggerData(menuValue,getItemByValue,path){return getPreparedMenu(menuValue).bind(function(menu){return getTriggeringItem(menuValue).bind(function(triggeringItemValue){return getItemByValue(triggeringItemValue).map(function(triggeredItem){return{triggeredMenu:menu,triggeringItem:triggeredItem,triggeringPath:path};});});});};var getTriggeringPath=function getTriggeringPath(itemValue,getItemByValue){var extraPath=filter$2(lookupItem(itemValue).toArray(),function(menuValue){return getPreparedMenu(menuValue).isSome();});return get$g(paths.get(),itemValue).bind(function(path){var revPath=reverse(extraPath.concat(path));var triggers=bind$3(revPath,function(menuValue,menuIndex){return getTriggerData(menuValue,getItemByValue,revPath.slice(0,menuIndex+1)).fold(function(){return is$1(primary.get(),menuValue)?[]:[Optional.none()];},function(data){return[Optional.some(data)];});});return sequence(triggers);});};var expand=function expand(itemValue){return get$g(expansions.get(),itemValue).map(function(menu){var current=get$g(paths.get(),itemValue).getOr([]);return[menu].concat(current);});};var collapse=function collapse(itemValue){return get$g(paths.get(),itemValue).bind(function(path){return path.length>1?Optional.some(path.slice(1)):Optional.none();});};var refresh=function refresh(itemValue){return get$g(paths.get(),itemValue);};var getPreparedMenu=function getPreparedMenu(menuValue){return lookupMenu(menuValue).bind(extractPreparedMenu);};var lookupMenu=function lookupMenu(menuValue){return get$g(menus.get(),menuValue);};var lookupItem=function lookupItem(itemValue){return get$g(expansions.get(),itemValue);};var otherMenus=function otherMenus(path){var menuValues=directory.get();return difference(keys(menuValues),path);};var getPrimary=function getPrimary(){return primary.get().bind(getPreparedMenu);};var getMenus=function getMenus(){return menus.get();};return{setMenuBuilt:setMenuBuilt,setContents:setContents,expand:expand,refresh:refresh,collapse:collapse,lookupMenu:lookupMenu,lookupItem:lookupItem,otherMenus:otherMenus,getPrimary:getPrimary,getMenus:getMenus,clear:clear,isClear:isClear,getTriggeringPath:getTriggeringPath};};var extractPreparedMenu=function extractPreparedMenu(prep){return prep.type==='prepared'?Optional.some(prep.menu):Optional.none();};var LayeredState={init:init$c,extractPreparedMenu:extractPreparedMenu};var make$6=function make$6(detail,_rawUiSpec){var submenuParentItems=value$2();var buildMenus=function buildMenus(container,primaryName,menus){return map$1(menus,function(spec,name){var makeSketch=function makeSketch(){return Menu.sketch(_objectSpread({},spec,{value:name,markers:detail.markers,fakeFocus:detail.fakeFocus,onHighlight:detail.onHighlight,focusManager:detail.fakeFocus?highlights():dom$2()}));};return name===primaryName?{type:'prepared',menu:container.getSystem().build(makeSketch())}:{type:'notbuilt',nbMenu:makeSketch};});};var layeredState=LayeredState.init();var setup=function setup(container){var componentMap=buildMenus(container,detail.data.primary,detail.data.menus);var directory=toDirectory();layeredState.setContents(detail.data.primary,componentMap,detail.data.expansions,directory);return layeredState.getPrimary();};var getItemValue=function getItemValue(item){return Representing.getValue(item).value;};var getItemByValue=function getItemByValue(_container,menus,itemValue){return findMap(menus,function(menu){if(!menu.getSystem().isConnected()){return Optional.none();}var candidates=Highlighting.getCandidates(menu);return find$5(candidates,function(c){return getItemValue(c)===itemValue;});});};var toDirectory=function toDirectory(_container){return map$1(detail.data.menus,function(data,_menuName){return bind$3(data.items,function(item){return item.type==='separator'?[]:[item.data.value];});});};var setActiveMenu=function setActiveMenu(container,menu){Highlighting.highlight(container,menu);Highlighting.getHighlighted(menu).orThunk(function(){return Highlighting.getFirst(menu);}).each(function(item){dispatch(container,item.element,focusItem());});};var getMenus=function getMenus(state,menuValues){return cat(map$2(menuValues,function(mv){return state.lookupMenu(mv).bind(function(prep){return prep.type==='prepared'?Optional.some(prep.menu):Optional.none();});}));};var closeOthers=function closeOthers(container,state,path){var others=getMenus(state,state.otherMenus(path));each$1(others,function(o){remove$1(o.element,[detail.markers.backgroundMenu]);if(!detail.stayInDom){Replacing.remove(container,o);}});};var getSubmenuParents=function getSubmenuParents(container){return submenuParentItems.get().getOrThunk(function(){var r={};var items=descendants(container.element,".".concat(detail.markers.item));var parentItems=filter$2(items,function(i){return get$f(i,'aria-haspopup')==='true';});each$1(parentItems,function(i){container.getSystem().getByDom(i).each(function(itemComp){var key=getItemValue(itemComp);r[key]=itemComp;});});submenuParentItems.set(r);return r;});};var updateAriaExpansions=function updateAriaExpansions(container,path){var parentItems=getSubmenuParents(container);each(parentItems,function(v,k){var expanded=contains$2(path,k);set$9(v.element,'aria-expanded',expanded);});};var updateMenuPath=function updateMenuPath(container,state,path){return Optional.from(path[0]).bind(function(latestMenuName){return state.lookupMenu(latestMenuName).bind(function(menuPrep){if(menuPrep.type==='notbuilt'){return Optional.none();}else{var activeMenu=menuPrep.menu;var rest=getMenus(state,path.slice(1));each$1(rest,function(r){add$2(r.element,detail.markers.backgroundMenu);});if(!inBody(activeMenu.element)){Replacing.append(container,premade(activeMenu));}remove$1(activeMenu.element,[detail.markers.backgroundMenu]);setActiveMenu(container,activeMenu);closeOthers(container,state,path);return Optional.some(activeMenu);}});});};var ExpandHighlightDecision;(function(ExpandHighlightDecision){ExpandHighlightDecision[ExpandHighlightDecision['HighlightSubmenu']=0]='HighlightSubmenu';ExpandHighlightDecision[ExpandHighlightDecision['HighlightParent']=1]='HighlightParent';})(ExpandHighlightDecision||(ExpandHighlightDecision={}));var buildIfRequired=function buildIfRequired(container,menuName,menuPrep){if(menuPrep.type==='notbuilt'){var _menu2=container.getSystem().build(menuPrep.nbMenu());layeredState.setMenuBuilt(menuName,_menu2);return _menu2;}else{return menuPrep.menu;}};var expandRight=function expandRight(container,item){var decision=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ExpandHighlightDecision.HighlightSubmenu;if(item.hasConfigured(Disabling)&&Disabling.isDisabled(item)){return Optional.some(item);}else{var _value2=getItemValue(item);return layeredState.expand(_value2).bind(function(path){updateAriaExpansions(container,path);return Optional.from(path[0]).bind(function(menuName){return layeredState.lookupMenu(menuName).bind(function(activeMenuPrep){var activeMenu=buildIfRequired(container,menuName,activeMenuPrep);if(!inBody(activeMenu.element)){Replacing.append(container,premade(activeMenu));}detail.onOpenSubmenu(container,item,activeMenu,reverse(path));if(decision===ExpandHighlightDecision.HighlightSubmenu){Highlighting.highlightFirst(activeMenu);return updateMenuPath(container,layeredState,path);}else{Highlighting.dehighlightAll(activeMenu);return Optional.some(item);}});});});}};var collapseLeft=function collapseLeft(container,item){var value=getItemValue(item);return layeredState.collapse(value).bind(function(path){updateAriaExpansions(container,path);return updateMenuPath(container,layeredState,path).map(function(activeMenu){detail.onCollapseMenu(container,item,activeMenu);return activeMenu;});});};var updateView=function updateView(container,item){var value=getItemValue(item);return layeredState.refresh(value).bind(function(path){updateAriaExpansions(container,path);return updateMenuPath(container,layeredState,path);});};var onRight=function onRight(container,item){return inside(item.element)?Optional.none():expandRight(container,item,ExpandHighlightDecision.HighlightSubmenu);};var onLeft=function onLeft(container,item){return inside(item.element)?Optional.none():collapseLeft(container,item);};var onEscape=function onEscape(container,item){return collapseLeft(container,item).orThunk(function(){return detail.onEscape(container,item).map(function(){return container;});});};var keyOnItem=function keyOnItem(f){return function(container,simulatedEvent){return closest$1(simulatedEvent.getSource(),'.'+detail.markers.item).bind(function(target){return container.getSystem().getByDom(target).toOptional().bind(function(item){return f(container,item).map(always);});});};};var events=derive$2([run$1(focus(),function(sandbox,simulatedEvent){var item=simulatedEvent.event.item;layeredState.lookupItem(getItemValue(item)).each(function(){var menu=simulatedEvent.event.menu;Highlighting.highlight(sandbox,menu);var value=getItemValue(simulatedEvent.event.item);layeredState.refresh(value).each(function(path){return closeOthers(sandbox,layeredState,path);});});}),runOnExecute$1(function(component,simulatedEvent){var target=simulatedEvent.event.target;component.getSystem().getByDom(target).each(function(item){var itemValue=getItemValue(item);if(itemValue.indexOf('collapse-item')===0){collapseLeft(component,item);}expandRight(component,item,ExpandHighlightDecision.HighlightSubmenu).fold(function(){detail.onExecute(component,item);},noop);});}),runOnAttached(function(container,_simulatedEvent){setup(container).each(function(primary){Replacing.append(container,premade(primary));detail.onOpenMenu(container,primary);if(detail.highlightImmediately){setActiveMenu(container,primary);}});})].concat(detail.navigateOnHover?[run$1(hover(),function(sandbox,simulatedEvent){var item=simulatedEvent.event.item;updateView(sandbox,item);expandRight(sandbox,item,ExpandHighlightDecision.HighlightParent);detail.onHover(sandbox,item);})]:[]));var getActiveItem=function getActiveItem(container){return Highlighting.getHighlighted(container).bind(Highlighting.getHighlighted);};var collapseMenuApi=function collapseMenuApi(container){getActiveItem(container).each(function(currentItem){collapseLeft(container,currentItem);});};var highlightPrimary=function highlightPrimary(container){layeredState.getPrimary().each(function(primary){setActiveMenu(container,primary);});};var extractMenuFromContainer=function extractMenuFromContainer(container){return Optional.from(container.components()[0]).filter(function(comp){return get$f(comp.element,'role')==='menu';});};var repositionMenus=function repositionMenus(container){var maybeActivePrimary=layeredState.getPrimary().bind(function(primary){return getActiveItem(container).bind(function(currentItem){var itemValue=getItemValue(currentItem);var allMenus=values(layeredState.getMenus());var preparedMenus=cat(map$2(allMenus,LayeredState.extractPreparedMenu));return layeredState.getTriggeringPath(itemValue,function(v){return getItemByValue(container,preparedMenus,v);});}).map(function(triggeringPath){return{primary:primary,triggeringPath:triggeringPath};});});maybeActivePrimary.fold(function(){extractMenuFromContainer(container).each(function(primaryMenu){detail.onRepositionMenu(container,primaryMenu,[]);});},function(_ref4){var primary=_ref4.primary,triggeringPath=_ref4.triggeringPath;detail.onRepositionMenu(container,primary,triggeringPath);});};var apis={collapseMenu:collapseMenuApi,highlightPrimary:highlightPrimary,repositionMenus:repositionMenus};return{uid:detail.uid,dom:detail.dom,markers:detail.markers,behaviours:augment(detail.tmenuBehaviours,[Keying.config({mode:'special',onRight:keyOnItem(onRight),onLeft:keyOnItem(onLeft),onEscape:keyOnItem(onEscape),focusIn:function focusIn(container,_keyInfo){layeredState.getPrimary().each(function(primary){dispatch(container,primary.element,focusItem());});}}),Highlighting.config({highlightClass:detail.markers.selectedMenu,itemClass:detail.markers.menu}),Composing.config({find:function find(container){return Highlighting.getHighlighted(container);}}),Replacing.config({})]),eventOrder:detail.eventOrder,apis:apis,events:events};};var collapseItem$1=constant$1('collapse-item');var tieredData=function tieredData(primary,menus,expansions){return{primary:primary,menus:menus,expansions:expansions};};var singleData=function singleData(name,menu){return{primary:name,menus:wrap$1(name,menu),expansions:{}};};var collapseItem=function collapseItem(text){return{value:generate$6(collapseItem$1()),meta:{text:text}};};var tieredMenu=single({name:'TieredMenu',configFields:[onStrictKeyboardHandler('onExecute'),onStrictKeyboardHandler('onEscape'),onStrictHandler('onOpenMenu'),onStrictHandler('onOpenSubmenu'),onHandler('onRepositionMenu'),onHandler('onCollapseMenu'),defaulted('highlightImmediately',true),requiredObjOf('data',[required$1('primary'),required$1('menus'),required$1('expansions')]),defaulted('fakeFocus',false),onHandler('onHighlight'),onHandler('onHover'),tieredMenuMarkers(),required$1('dom'),defaulted('navigateOnHover',true),defaulted('stayInDom',false),field('tmenuBehaviours',[Keying,Highlighting,Composing,Replacing]),defaulted('eventOrder',{})],apis:{collapseMenu:function collapseMenu(apis,tmenu){apis.collapseMenu(tmenu);},highlightPrimary:function highlightPrimary(apis,tmenu){apis.highlightPrimary(tmenu);},repositionMenus:function repositionMenus(apis,tmenu){apis.repositionMenus(tmenu);}},factory:make$6,extraApis:{tieredData:tieredData,singleData:singleData,collapseItem:collapseItem}});var makeMenu=function makeMenu(detail,menuSandbox,placementSpec,menuSpec,getBounds){var lazySink=function lazySink(){return detail.lazySink(menuSandbox);};var layouts=menuSpec.type==='horizontal'?{layouts:{onLtr:function onLtr(){return belowOrAbove();},onRtl:function onRtl(){return belowOrAboveRtl();}}}:{};var isFirstTierSubmenu=function isFirstTierSubmenu(triggeringPaths){return triggeringPaths.length===2;};var getSubmenuLayouts=function getSubmenuLayouts(triggeringPaths){return isFirstTierSubmenu(triggeringPaths)?layouts:{};};return tieredMenu.sketch({dom:{tag:'div'},data:menuSpec.data,markers:menuSpec.menu.markers,highlightImmediately:menuSpec.menu.highlightImmediately,fakeFocus:menuSpec.menu.fakeFocus,onEscape:function onEscape(){Sandboxing.close(menuSandbox);detail.onEscape.map(function(handler){return handler(menuSandbox);});return Optional.some(true);},onExecute:function onExecute(){return Optional.some(true);},onOpenMenu:function onOpenMenu(tmenu,menu){Positioning.positionWithinBounds(lazySink().getOrDie(),menu,placementSpec,getBounds());},onOpenSubmenu:function onOpenSubmenu(tmenu,item,submenu,triggeringPaths){var sink=lazySink().getOrDie();Positioning.position(sink,submenu,{anchor:_objectSpread({type:'submenu',item:item},getSubmenuLayouts(triggeringPaths))});},onRepositionMenu:function onRepositionMenu(tmenu,primaryMenu,submenuTriggers){var sink=lazySink().getOrDie();Positioning.positionWithinBounds(sink,primaryMenu,placementSpec,getBounds());each$1(submenuTriggers,function(st){var submenuLayouts=getSubmenuLayouts(st.triggeringPath);Positioning.position(sink,st.triggeredMenu,{anchor:_objectSpread({type:'submenu',item:st.triggeringItem},submenuLayouts)});});}});};var factory$m=function factory$m(detail,spec){var isPartOfRelated=function isPartOfRelated(sandbox,queryElem){var related=detail.getRelated(sandbox);return related.exists(function(rel){return isPartOf$1(rel,queryElem);});};var setContent=function setContent(sandbox,thing){Sandboxing.setContent(sandbox,thing);};var showAt=function showAt(sandbox,thing,placementSpec){showWithin(sandbox,thing,placementSpec,Optional.none());};var showWithin=function showWithin(sandbox,thing,placementSpec,boxElement){showWithinBounds(sandbox,thing,placementSpec,function(){return boxElement.map(function(elem){return box$1(elem);});});};var showWithinBounds=function showWithinBounds(sandbox,thing,placementSpec,getBounds){var sink=detail.lazySink(sandbox).getOrDie();Sandboxing.openWhileCloaked(sandbox,thing,function(){return Positioning.positionWithinBounds(sink,sandbox,placementSpec,getBounds());});Representing.setValue(sandbox,Optional.some({mode:'position',config:placementSpec,getBounds:getBounds}));};var showMenuAt=function showMenuAt(sandbox,placementSpec,menuSpec){showMenuWithinBounds(sandbox,placementSpec,menuSpec,Optional.none);};var showMenuWithinBounds=function showMenuWithinBounds(sandbox,placementSpec,menuSpec,getBounds){var menu=makeMenu(detail,sandbox,placementSpec,menuSpec,getBounds);Sandboxing.open(sandbox,menu);Representing.setValue(sandbox,Optional.some({mode:'menu',menu:menu}));};var hide=function hide(sandbox){if(Sandboxing.isOpen(sandbox)){Representing.setValue(sandbox,Optional.none());Sandboxing.close(sandbox);}};var getContent=function getContent(sandbox){return Sandboxing.getState(sandbox);};var reposition=function reposition(sandbox){if(Sandboxing.isOpen(sandbox)){Representing.getValue(sandbox).each(function(state){switch(state.mode){case'menu':Sandboxing.getState(sandbox).each(tieredMenu.repositionMenus);break;case'position':var sink=detail.lazySink(sandbox).getOrDie();Positioning.positionWithinBounds(sink,sandbox,state.config,state.getBounds());break;}});}};var apis={setContent:setContent,showAt:showAt,showWithin:showWithin,showWithinBounds:showWithinBounds,showMenuAt:showMenuAt,showMenuWithinBounds:showMenuWithinBounds,hide:hide,getContent:getContent,reposition:reposition,isOpen:Sandboxing.isOpen};return{uid:detail.uid,dom:detail.dom,behaviours:augment(detail.inlineBehaviours,[Sandboxing.config({isPartOf:function isPartOf(sandbox,data,queryElem){return isPartOf$1(data,queryElem)||isPartOfRelated(sandbox,queryElem);},getAttachPoint:function getAttachPoint(sandbox){return detail.lazySink(sandbox).getOrDie();},onOpen:function onOpen(sandbox){detail.onShow(sandbox);},onClose:function onClose(sandbox){detail.onHide(sandbox);}}),Representing.config({store:{mode:'memory',initialValue:Optional.none()}}),Receiving.config({channels:_objectSpread({},receivingChannel$1(_objectSpread({isExtraPart:spec.isExtraPart},detail.fireDismissalEventInstead.map(function(fe){return{fireEventInstead:{event:fe.event}};}).getOr({}))),{},receivingChannel(_objectSpread({},detail.fireRepositionEventInstead.map(function(fe){return{fireEventInstead:{event:fe.event}};}).getOr({}),{doReposition:reposition})))})]),eventOrder:detail.eventOrder,apis:apis};};var InlineView=single({name:'InlineView',configFields:[required$1('lazySink'),onHandler('onShow'),onHandler('onHide'),optionFunction('onEscape'),field('inlineBehaviours',[Sandboxing,Representing,Receiving]),optionObjOf('fireDismissalEventInstead',[defaulted('event',dismissRequested())]),optionObjOf('fireRepositionEventInstead',[defaulted('event',repositionRequested())]),defaulted('getRelated',Optional.none),defaulted('isExtraPart',never),defaulted('eventOrder',Optional.none)],factory:factory$m,apis:{showAt:function showAt(apis,component,anchor,thing){apis.showAt(component,anchor,thing);},showWithin:function showWithin(apis,component,anchor,thing,boxElement){apis.showWithin(component,anchor,thing,boxElement);},showWithinBounds:function showWithinBounds(apis,component,anchor,thing,bounds){apis.showWithinBounds(component,anchor,thing,bounds);},showMenuAt:function showMenuAt(apis,component,anchor,menuSpec){apis.showMenuAt(component,anchor,menuSpec);},showMenuWithinBounds:function showMenuWithinBounds(apis,component,anchor,menuSpec,bounds){apis.showMenuWithinBounds(component,anchor,menuSpec,bounds);},hide:function hide(apis,component){apis.hide(component);},isOpen:function isOpen(apis,component){return apis.isOpen(component);},getContent:function getContent(apis,component){return apis.getContent(component);},setContent:function setContent(apis,component,thing){apis.setContent(component,thing);},reposition:function reposition(apis,component){apis.reposition(component);}}});var global$9=tinymce.util.Tools.resolve('tinymce.util.Delay');var factory$l=function factory$l(detail){var events=events$a(detail.action);var tag=detail.dom.tag;var lookupAttr=function lookupAttr(attr){return get$g(detail.dom,'attributes').bind(function(attrs){return get$g(attrs,attr);});};var getModAttributes=function getModAttributes(){if(tag==='button'){var _type2=lookupAttr('type').getOr('button');var roleAttrs=lookupAttr('role').map(function(role){return{role:role};}).getOr({});return _objectSpread({type:_type2},roleAttrs);}else{var role=lookupAttr('role').getOr('button');return{role:role};}};return{uid:detail.uid,dom:detail.dom,components:detail.components,events:events,behaviours:SketchBehaviours.augment(detail.buttonBehaviours,[Focusing.config({}),Keying.config({mode:'execution',useSpace:true,useEnter:true})]),domModification:{attributes:getModAttributes()},eventOrder:detail.eventOrder};};var Button=single({name:'Button',factory:factory$l,configFields:[defaulted('uid',undefined),required$1('dom'),defaulted('components',[]),SketchBehaviours.field('buttonBehaviours',[Focusing,Keying]),option$3('action'),option$3('role'),defaulted('eventOrder',{})]});var record=function record(spec){var uid=isSketchSpec(spec)&&hasNonNullableKey(spec,'uid')?spec.uid:generate$5('memento');var get=function get(anyInSystem){return anyInSystem.getSystem().getByUid(uid).getOrDie();};var getOpt=function getOpt(anyInSystem){return anyInSystem.getSystem().getByUid(uid).toOptional();};var asSpec=function asSpec(){return _objectSpread({},spec,{uid:uid});};return{get:get,getOpt:getOpt,asSpec:asSpec};};var global$8=tinymce.util.Tools.resolve('tinymce.util.I18n');var rtlTransform={'indent':true,'outdent':true,'table-insert-column-after':true,'table-insert-column-before':true,'paste-column-after':true,'paste-column-before':true,'unordered-list':true,'list-bull-circle':true,'list-bull-default':true,'list-bull-square':true};var defaultIconName='temporary-placeholder';var defaultIcon=function defaultIcon(icons){return function(){return get$g(icons,defaultIconName).getOr('!not found!');};};var getIconName=function getIconName(name,icons){var lcName=name.toLowerCase();if(global$8.isRtl()){var rtlName=ensureTrailing(lcName,'-rtl');return has$2(icons,rtlName)?rtlName:lcName;}else{return lcName;}};var lookupIcon=function lookupIcon(name,icons){return get$g(icons,getIconName(name,icons));};var get$2=function get$2(name,iconProvider){var icons=iconProvider();return lookupIcon(name,icons).getOrThunk(defaultIcon(icons));};var getOr=function getOr(name,iconProvider,fallbackIcon){var icons=iconProvider();return lookupIcon(name,icons).or(fallbackIcon).getOrThunk(defaultIcon(icons));};var needsRtlTransform=function needsRtlTransform(iconName){return global$8.isRtl()?has$2(rtlTransform,iconName):false;};var addFocusableBehaviour=function addFocusableBehaviour(){return config('add-focusable',[runOnAttached(function(comp){child(comp.element,'svg').each(function(svg){return set$9(svg,'focusable','false');});})]);};var renderIcon$2=function renderIcon$2(spec,iconName,icons,fallbackIcon){var _a,_b;var rtlIconClasses=needsRtlTransform(iconName)?['tox-icon--flip']:[];var iconHtml=get$g(icons,getIconName(iconName,icons)).or(fallbackIcon).getOrThunk(defaultIcon(icons));return{dom:{tag:spec.tag,attributes:(_a=spec.attributes)!==null&&_a!==void 0?_a:{},classes:spec.classes.concat(rtlIconClasses),innerHtml:iconHtml},behaviours:derive$1([].concat(_toConsumableArray((_b=spec.behaviours)!==null&&_b!==void 0?_b:[]),[addFocusableBehaviour()]))};};var render$3=function render$3(iconName,spec,iconProvider){var fallbackIcon=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Optional.none();return renderIcon$2(spec,iconName,iconProvider(),fallbackIcon);};var renderFirst=function renderFirst(iconNames,spec,iconProvider){var icons=iconProvider();var iconName=find$5(iconNames,function(name){return has$2(icons,getIconName(name,icons));});return renderIcon$2(spec,iconName.getOr(defaultIconName),icons,Optional.none());};var notificationIconMap={success:'checkmark',error:'warning',err:'error',warning:'warning',warn:'warning',info:'info'};var factory$k=function factory$k(detail){var memBannerText=record({dom:{tag:'p',innerHtml:detail.translationProvider(detail.text)},behaviours:derive$1([Replacing.config({})])});var renderPercentBar=function renderPercentBar(percent){return{dom:{tag:'div',classes:['tox-bar'],styles:{width:"".concat(percent,"%")}}};};var renderPercentText=function renderPercentText(percent){return{dom:{tag:'div',classes:['tox-text'],innerHtml:"".concat(percent,"%")}};};var memBannerProgress=record({dom:{tag:'div',classes:detail.progress?['tox-progress-bar','tox-progress-indicator']:['tox-progress-bar']},components:[{dom:{tag:'div',classes:['tox-bar-container']},components:[renderPercentBar(0)]},renderPercentText(0)],behaviours:derive$1([Replacing.config({})])});var updateProgress=function updateProgress(comp,percent){if(comp.getSystem().isConnected()){memBannerProgress.getOpt(comp).each(function(progress){Replacing.set(progress,[{dom:{tag:'div',classes:['tox-bar-container']},components:[renderPercentBar(percent)]},renderPercentText(percent)]);});}};var updateText=function updateText(comp,text){if(comp.getSystem().isConnected()){var banner=memBannerText.get(comp);Replacing.set(banner,[text$1(text)]);}};var apis={updateProgress:updateProgress,updateText:updateText};var iconChoices=flatten([detail.icon.toArray(),detail.level.toArray(),detail.level.bind(function(level){return Optional.from(notificationIconMap[level]);}).toArray()]);var memButton=record(Button.sketch({dom:{tag:'button',classes:['tox-notification__dismiss','tox-button','tox-button--naked','tox-button--icon']},components:[render$3('close',{tag:'div',classes:['tox-icon'],attributes:{'aria-label':detail.translationProvider('Close')}},detail.iconProvider)],action:function action(comp){detail.onAction(comp);}}));var notificationIconSpec=renderFirst(iconChoices,{tag:'div',classes:['tox-notification__icon']},detail.iconProvider);var notificationBodySpec={dom:{tag:'div',classes:['tox-notification__body']},components:[memBannerText.asSpec()],behaviours:derive$1([Replacing.config({})])};var components=[notificationIconSpec,notificationBodySpec];return{uid:detail.uid,dom:{tag:'div',attributes:{role:'alert'},classes:detail.level.map(function(level){return['tox-notification','tox-notification--in',"tox-notification--".concat(level)];}).getOr(['tox-notification','tox-notification--in'])},behaviours:derive$1([Focusing.config({}),config('notification-events',[run$1(focusin(),function(comp){memButton.getOpt(comp).each(Focusing.focus);})])]),components:components.concat(detail.progress?[memBannerProgress.asSpec()]:[]).concat(!detail.closeButton?[]:[memButton.asSpec()]),apis:apis};};var Notification=single({name:'Notification',factory:factory$k,configFields:[option$3('level'),required$1('progress'),required$1('icon'),required$1('onAction'),required$1('text'),required$1('iconProvider'),required$1('translationProvider'),defaultedBoolean('closeButton',true)],apis:{updateProgress:function updateProgress(apis,comp,percent){apis.updateProgress(comp,percent);},updateText:function updateText(apis,comp,text){apis.updateText(comp,text);}}});var NotificationManagerImpl=function NotificationManagerImpl(editor,extras,uiMothership){var sharedBackstage=extras.backstage.shared;var getBounds=function getBounds(){var contentArea=box$1(SugarElement.fromDom(editor.getContentAreaContainer()));var win$1=win();var x=clamp(win$1.x,contentArea.x,contentArea.right);var y=clamp(win$1.y,contentArea.y,contentArea.bottom);var right=Math.max(contentArea.right,win$1.right);var bottom=Math.max(contentArea.bottom,win$1.bottom);return Optional.some(bounds(x,y,right-x,bottom-y));};var open=function open(settings,closeCallback){var close=function close(){closeCallback();InlineView.hide(notificationWrapper);};var notification=build$1(Notification.sketch({text:settings.text,level:contains$2(['success','error','warning','warn','info'],settings.type)?settings.type:undefined,progress:settings.progressBar===true,icon:Optional.from(settings.icon),closeButton:settings.closeButton,onAction:close,iconProvider:sharedBackstage.providers.icons,translationProvider:sharedBackstage.providers.translate}));var notificationWrapper=build$1(InlineView.sketch(_objectSpread({dom:{tag:'div',classes:['tox-notifications-container']},lazySink:sharedBackstage.getSink,fireDismissalEventInstead:{}},sharedBackstage.header.isPositionedAtTop()?{}:{fireRepositionEventInstead:{}})));uiMothership.add(notificationWrapper);if(settings.timeout>0){global$9.setEditorTimeout(editor,function(){close();},settings.timeout);}var reposition=function reposition(){var notificationSpec=premade(notification);var anchorOverrides={maxHeightFunction:expandable$1()};var allNotifications=editor.notificationManager.getNotifications();if(allNotifications[0]===thisNotification){var _anchor2=_objectSpread({},sharedBackstage.anchors.banner(),{overrides:anchorOverrides});InlineView.showWithinBounds(notificationWrapper,notificationSpec,{anchor:_anchor2},getBounds);}else{indexOf(allNotifications,thisNotification).each(function(idx){var previousNotification=allNotifications[idx-1].getEl();var nodeAnchor={type:'node',root:body(),node:Optional.some(SugarElement.fromDom(previousNotification)),overrides:anchorOverrides,layouts:{onRtl:function onRtl(){return[south$2];},onLtr:function onLtr(){return[south$2];}}};InlineView.showWithinBounds(notificationWrapper,notificationSpec,{anchor:nodeAnchor},getBounds);});}};var thisNotification={close:close,reposition:reposition,text:function text(nuText){Notification.updateText(notification,nuText);},settings:settings,getEl:function getEl(){return notification.element.dom;},progressBar:{value:function value(percent){Notification.updateProgress(notification,percent);}}};return thisNotification;};var close=function close(notification){notification.close();};var getArgs=function getArgs(notification){return notification.settings;};return{open:open,close:close,getArgs:getArgs};};var global$7=tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');var global$6=tinymce.util.Tools.resolve('tinymce.EditorManager');var global$5=tinymce.util.Tools.resolve('tinymce.Env');var ToolbarMode$1;(function(ToolbarMode){ToolbarMode['default']='wrap';ToolbarMode['floating']='floating';ToolbarMode['sliding']='sliding';ToolbarMode['scrolling']='scrolling';})(ToolbarMode$1||(ToolbarMode$1={}));var ToolbarLocation$1;(function(ToolbarLocation){ToolbarLocation['auto']='auto';ToolbarLocation['top']='top';ToolbarLocation['bottom']='bottom';})(ToolbarLocation$1||(ToolbarLocation$1={}));var option$2=function option$2(name){return function(editor){return editor.options.get(name);};};var wrapOptional=function wrapOptional(fn){return function(editor){return Optional.from(fn(editor));};};var register$e=function register$e(editor){var isPhone=global$5.deviceType.isPhone();var isMobile=global$5.deviceType.isTablet()||isPhone;var registerOption=editor.options.register;var stringOrFalseProcessor=function stringOrFalseProcessor(value){return isString(value)||value===false;};var stringOrNumberProcessor=function stringOrNumberProcessor(value){return isString(value)||isNumber(value);};registerOption('skin',{processor:function processor(value){return isString(value)||value===false;},"default":'oxide'});registerOption('skin_url',{processor:'string'});registerOption('height',{processor:stringOrNumberProcessor,"default":Math.max(editor.getElement().offsetHeight,400)});registerOption('width',{processor:stringOrNumberProcessor,"default":global$7.DOM.getStyle(editor.getElement(),'width')});registerOption('min_height',{processor:'number',"default":100});registerOption('min_width',{processor:'number'});registerOption('max_height',{processor:'number'});registerOption('max_width',{processor:'number'});registerOption('style_formats',{processor:'object[]'});registerOption('style_formats_merge',{processor:'boolean',"default":false});registerOption('style_formats_autohide',{processor:'boolean',"default":false});registerOption('line_height_formats',{processor:'string',"default":'1 1.1 1.2 1.3 1.4 1.5 2'});registerOption('font_family_formats',{processor:'string',"default":'Andale Mono=andale mono,monospace;'+'Arial=arial,helvetica,sans-serif;'+'Arial Black=arial black,sans-serif;'+'Book Antiqua=book antiqua,palatino,serif;'+'Comic Sans MS=comic sans ms,sans-serif;'+'Courier New=courier new,courier,monospace;'+'Georgia=georgia,palatino,serif;'+'Helvetica=helvetica,arial,sans-serif;'+'Impact=impact,sans-serif;'+'Symbol=symbol;'+'Tahoma=tahoma,arial,helvetica,sans-serif;'+'Terminal=terminal,monaco,monospace;'+'Times New Roman=times new roman,times,serif;'+'Trebuchet MS=trebuchet ms,geneva,sans-serif;'+'Verdana=verdana,geneva,sans-serif;'+'Webdings=webdings;'+'Wingdings=wingdings,zapf dingbats'});registerOption('font_size_formats',{processor:'string',"default":'8pt 10pt 12pt 14pt 18pt 24pt 36pt'});registerOption('block_formats',{processor:'string',"default":'Paragraph=p;'+'Heading 1=h1;'+'Heading 2=h2;'+'Heading 3=h3;'+'Heading 4=h4;'+'Heading 5=h5;'+'Heading 6=h6;'+'Preformatted=pre'});registerOption('content_langs',{processor:'object[]'});registerOption('removed_menuitems',{processor:'string',"default":''});registerOption('menubar',{processor:function processor(value){return isString(value)||isBoolean(value);},"default":!isPhone});registerOption('menu',{processor:'object',"default":{}});registerOption('toolbar',{processor:function processor(value){if(isBoolean(value)||isString(value)||isArray(value)){return{value:value,valid:true};}else{return{valid:false,message:'Must be a boolean, string or array.'};}},"default":true});range$2(9,function(num){registerOption('toolbar'+(num+1),{processor:'string'});});registerOption('toolbar_mode',{processor:'string',"default":isMobile?'scrolling':'floating'});registerOption('toolbar_groups',{processor:'object',"default":{}});registerOption('toolbar_location',{processor:'string',"default":ToolbarLocation$1.auto});registerOption('toolbar_persist',{processor:'boolean',"default":false});registerOption('toolbar_sticky',{processor:'boolean',"default":editor.inline});registerOption('toolbar_sticky_offset',{processor:'number',"default":0});registerOption('fixed_toolbar_container',{processor:'string',"default":''});registerOption('fixed_toolbar_container_target',{processor:'object'});registerOption('file_picker_callback',{processor:'function'});registerOption('file_picker_validator_handler',{processor:'function'});registerOption('file_picker_types',{processor:'string'});registerOption('typeahead_urls',{processor:'boolean',"default":true});registerOption('anchor_top',{processor:stringOrFalseProcessor,"default":'#top'});registerOption('anchor_bottom',{processor:stringOrFalseProcessor,"default":'#bottom'});registerOption('draggable_modal',{processor:'boolean',"default":false});registerOption('statusbar',{processor:'boolean',"default":true});registerOption('elementpath',{processor:'boolean',"default":true});registerOption('branding',{processor:'boolean',"default":true});registerOption('resize',{processor:function processor(value){return value==='both'||isBoolean(value);},"default":!global$5.deviceType.isTouch()});registerOption('sidebar_show',{processor:'string'});};var isReadOnly=option$2('readonly');var getHeightOption=option$2('height');var getWidthOption=option$2('width');var getMinWidthOption=wrapOptional(option$2('min_width'));var getMinHeightOption=wrapOptional(option$2('min_height'));var getMaxWidthOption=wrapOptional(option$2('max_width'));var getMaxHeightOption=wrapOptional(option$2('max_height'));var getUserStyleFormats=wrapOptional(option$2('style_formats'));var shouldMergeStyleFormats=option$2('style_formats_merge');var shouldAutoHideStyleFormats=option$2('style_formats_autohide');var getContentLanguages=option$2('content_langs');var getRemovedMenuItems=option$2('removed_menuitems');var getToolbarMode=option$2('toolbar_mode');var getToolbarGroups=option$2('toolbar_groups');var getToolbarLocation=option$2('toolbar_location');var fixedContainerSelector=option$2('fixed_toolbar_container');var fixedToolbarContainerTarget=option$2('fixed_toolbar_container_target');var isToolbarPersist=option$2('toolbar_persist');var getStickyToolbarOffset=option$2('toolbar_sticky_offset');var getMenubar=option$2('menubar');var getToolbar=option$2('toolbar');var getFilePickerCallback=option$2('file_picker_callback');var getFilePickerValidatorHandler=option$2('file_picker_validator_handler');var getFilePickerTypes=option$2('file_picker_types');var useTypeaheadUrls=option$2('typeahead_urls');var getAnchorTop=option$2('anchor_top');var getAnchorBottom=option$2('anchor_bottom');var isDraggableModal$1=option$2('draggable_modal');var useStatusBar=option$2('statusbar');var useElementPath=option$2('elementpath');var useBranding=option$2('branding');var getResize=option$2('resize');var getPasteAsText=option$2('paste_as_text');var getSidebarShow=option$2('sidebar_show');var isSkinDisabled=function isSkinDisabled(editor){return editor.options.get('skin')===false;};var isMenubarEnabled=function isMenubarEnabled(editor){return editor.options.get('menubar')!==false;};var getSkinUrl=function getSkinUrl(editor){var skinUrl=editor.options.get('skin_url');if(isSkinDisabled(editor)){return skinUrl;}else{if(skinUrl){return editor.documentBaseURI.toAbsolute(skinUrl);}else{var skin=editor.options.get('skin');return global$6.baseURL+'/skins/ui/'+skin;}}};var getLineHeightFormats=function getLineHeightFormats(editor){return editor.options.get('line_height_formats').split(' ');};var isToolbarEnabled=function isToolbarEnabled(editor){var toolbar=getToolbar(editor);var isToolbarString=isString(toolbar);var isToolbarObjectArray=isArray(toolbar)&&toolbar.length>0;return!isMultipleToolbars(editor)&&(isToolbarObjectArray||isToolbarString||toolbar===true);};var getMultipleToolbarsOption=function getMultipleToolbarsOption(editor){var toolbars=range$2(9,function(num){return editor.options.get('toolbar'+(num+1));});var toolbarArray=filter$2(toolbars,isString);return someIf(toolbarArray.length>0,toolbarArray);};var isMultipleToolbars=function isMultipleToolbars(editor){return getMultipleToolbarsOption(editor).fold(function(){var toolbar=getToolbar(editor);return isArrayOf(toolbar,isString)&&toolbar.length>0;},always);};var isToolbarLocationBottom=function isToolbarLocationBottom(editor){return getToolbarLocation(editor)===ToolbarLocation$1.bottom;};var fixedContainerTarget=function fixedContainerTarget(editor){if(!editor.inline){return Optional.none();}var selector=fixedContainerSelector(editor);if(selector.length>0){return descendant(body(),selector);}var element=fixedToolbarContainerTarget(editor);if(isNonNullable(element)){return Optional.some(SugarElement.fromDom(element));}return Optional.none();};var useFixedContainer=function useFixedContainer(editor){return editor.inline&&fixedContainerTarget(editor).isSome();};var getUiContainer=function getUiContainer(editor){var fixedContainer=fixedContainerTarget(editor);return fixedContainer.getOrThunk(function(){return getContentContainer(getRootNode(SugarElement.fromDom(editor.getElement())));});};var isDistractionFree=function isDistractionFree(editor){return editor.inline&&!isMenubarEnabled(editor)&&!isToolbarEnabled(editor)&&!isMultipleToolbars(editor);};var isStickyToolbar=function isStickyToolbar(editor){var isStickyToolbar=editor.options.get('toolbar_sticky');return(isStickyToolbar||editor.inline)&&!useFixedContainer(editor)&&!isDistractionFree(editor);};var getMenus=function getMenus(editor){var menu=editor.options.get('menu');return map$1(menu,function(menu){return _objectSpread({},menu,{items:menu.items});});};var Options=/*#__PURE__*/Object.freeze({__proto__:null,get ToolbarMode(){return ToolbarMode$1;},get ToolbarLocation(){return ToolbarLocation$1;},register:register$e,getSkinUrl:getSkinUrl,isReadOnly:isReadOnly,isSkinDisabled:isSkinDisabled,getHeightOption:getHeightOption,getWidthOption:getWidthOption,getMinWidthOption:getMinWidthOption,getMinHeightOption:getMinHeightOption,getMaxWidthOption:getMaxWidthOption,getMaxHeightOption:getMaxHeightOption,getUserStyleFormats:getUserStyleFormats,shouldMergeStyleFormats:shouldMergeStyleFormats,shouldAutoHideStyleFormats:shouldAutoHideStyleFormats,getLineHeightFormats:getLineHeightFormats,getContentLanguages:getContentLanguages,getRemovedMenuItems:getRemovedMenuItems,isMenubarEnabled:isMenubarEnabled,isMultipleToolbars:isMultipleToolbars,isToolbarEnabled:isToolbarEnabled,isToolbarPersist:isToolbarPersist,getMultipleToolbarsOption:getMultipleToolbarsOption,getUiContainer:getUiContainer,useFixedContainer:useFixedContainer,getToolbarMode:getToolbarMode,isDraggableModal:isDraggableModal$1,isDistractionFree:isDistractionFree,isStickyToolbar:isStickyToolbar,getStickyToolbarOffset:getStickyToolbarOffset,getToolbarLocation:getToolbarLocation,isToolbarLocationBottom:isToolbarLocationBottom,getToolbarGroups:getToolbarGroups,getMenus:getMenus,getMenubar:getMenubar,getToolbar:getToolbar,getFilePickerCallback:getFilePickerCallback,getFilePickerTypes:getFilePickerTypes,useTypeaheadUrls:useTypeaheadUrls,getAnchorTop:getAnchorTop,getAnchorBottom:getAnchorBottom,getFilePickerValidatorHandler:getFilePickerValidatorHandler,useStatusBar:useStatusBar,useElementPath:useElementPath,useBranding:useBranding,getResize:getResize,getPasteAsText:getPasteAsText,getSidebarShow:getSidebarShow});var autocompleteSelector='[data-mce-autocompleter]';var detect=function detect(elm){return closest$1(elm,autocompleteSelector);};var findIn=function findIn(elm){return descendant(elm,autocompleteSelector);};var setup$e=function setup$e(api,editor){var redirectKeyToItem=function redirectKeyToItem(item,e){emitWith(item,keydown(),{raw:e});};var getItem=function getItem(){return api.getMenu().bind(Highlighting.getHighlighted);};editor.on('keydown',function(e){var keyCode=e.which;if(!api.isActive()){return;}if(api.isMenuOpen()){if(keyCode===13){getItem().each(emitExecute);e.preventDefault();}else if(keyCode===40){getItem().fold(function(){api.getMenu().each(Highlighting.highlightFirst);},function(item){redirectKeyToItem(item,e);});e.preventDefault();e.stopImmediatePropagation();}else if(keyCode===37||keyCode===38||keyCode===39){getItem().each(function(item){redirectKeyToItem(item,e);e.preventDefault();e.stopImmediatePropagation();});}}else{if(keyCode===13||keyCode===38||keyCode===40){api.cancelIfNecessary();}}});editor.on('NodeChange',function(e){if(api.isActive()&&!api.isProcessingAction()&&detect(SugarElement.fromDom(e.element)).isNone()){api.cancelIfNecessary();}});};var AutocompleterEditorEvents={setup:setup$e};var ItemResponse;(function(ItemResponse){ItemResponse[ItemResponse['CLOSE_ON_EXECUTE']=0]='CLOSE_ON_EXECUTE';ItemResponse[ItemResponse['BUBBLE_TO_SANDBOX']=1]='BUBBLE_TO_SANDBOX';})(ItemResponse||(ItemResponse={}));var ItemResponse$1=ItemResponse;var navClass='tox-menu-nav__js';var selectableClass='tox-collection__item';var colorClass='tox-swatch';var presetClasses={normal:navClass,color:colorClass};var tickedClass='tox-collection__item--enabled';var groupHeadingClass='tox-collection__group-heading';var iconClass='tox-collection__item-icon';var textClass='tox-collection__item-label';var accessoryClass='tox-collection__item-accessory';var caretClass='tox-collection__item-caret';var checkmarkClass='tox-collection__item-checkmark';var activeClass='tox-collection__item--active';var containerClass='tox-collection__item-container';var containerColumnClass='tox-collection__item-container--column';var containerRowClass='tox-collection__item-container--row';var containerAlignRightClass='tox-collection__item-container--align-right';var containerAlignLeftClass='tox-collection__item-container--align-left';var containerValignTopClass='tox-collection__item-container--valign-top';var containerValignMiddleClass='tox-collection__item-container--valign-middle';var containerValignBottomClass='tox-collection__item-container--valign-bottom';var classForPreset=function classForPreset(presets){return get$g(presetClasses,presets).getOr(navClass);};var forMenu=function forMenu(presets){if(presets==='color'){return'tox-swatches';}else{return'tox-menu';}};var classes=function classes(presets){return{backgroundMenu:'tox-background-menu',selectedMenu:'tox-selected-menu',selectedItem:'tox-collection__item--active',hasIcons:'tox-menu--has-icons',menu:forMenu(presets),tieredMenu:'tox-tiered-menu'};};var markers=function markers(presets){var menuClasses=classes(presets);return{backgroundMenu:menuClasses.backgroundMenu,selectedMenu:menuClasses.selectedMenu,menu:menuClasses.menu,selectedItem:menuClasses.selectedItem,item:classForPreset(presets)};};var dom$1=function dom$1(hasIcons,columns,presets){var menuClasses=classes(presets);return{tag:'div',classes:flatten([[menuClasses.menu,"tox-menu-".concat(columns,"-column")],hasIcons?[menuClasses.hasIcons]:[]])};};var components=[Menu.parts.items({})];var part=function part(hasIcons,columns,presets){var menuClasses=classes(presets);var d={tag:'div',classes:flatten([[menuClasses.tieredMenu]])};return{dom:d,markers:markers(presets)};};var chunk=function chunk(rowDom,numColumns){return function(items){var chunks=chunk$1(items,numColumns);return map$2(chunks,function(c){return{dom:rowDom,components:c};});};};var forSwatch=function forSwatch(columns){return{dom:{tag:'div',classes:['tox-menu','tox-swatches-menu']},components:[{dom:{tag:'div',classes:['tox-swatches']},components:[Menu.parts.items({preprocess:columns!=='auto'?chunk({tag:'div',classes:['tox-swatches__row']},columns):identity})]}]};};var forToolbar=function forToolbar(columns){return{dom:{tag:'div',classes:['tox-menu','tox-collection','tox-collection--toolbar','tox-collection--toolbar-lg']},components:[Menu.parts.items({preprocess:chunk({tag:'div',classes:['tox-collection__group']},columns)})]};};var preprocessCollection=function preprocessCollection(items,isSeparator){var allSplits=[];var currentSplit=[];each$1(items,function(item,i){if(isSeparator(item,i)){if(currentSplit.length>0){allSplits.push(currentSplit);}currentSplit=[];if(has$2(item.dom,'innerHtml')||item.components.length>0){currentSplit.push(item);}}else{currentSplit.push(item);}});if(currentSplit.length>0){allSplits.push(currentSplit);}return map$2(allSplits,function(s){return{dom:{tag:'div',classes:['tox-collection__group']},components:s};});};var forCollection=function forCollection(columns,initItems){var _hasIcons=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;return{dom:{tag:'div',classes:['tox-menu','tox-collection'].concat(columns===1?['tox-collection--list']:['tox-collection--grid'])},components:[Menu.parts.items({preprocess:function preprocess(items){if(columns!=='auto'&&columns>1){return chunk({tag:'div',classes:['tox-collection__group']},columns)(items);}else{return preprocessCollection(items,function(_item,i){return initItems[i].type==='separator';});}}})]};};var forHorizontalCollection=function forHorizontalCollection(initItems){var _hasIcons=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return{dom:{tag:'div',classes:['tox-collection','tox-collection--horizontal']},components:[Menu.parts.items({preprocess:function preprocess(items){return preprocessCollection(items,function(_item,i){return initItems[i].type==='separator';});}})]};};var menuHasIcons=function menuHasIcons(xs){return exists(xs,function(item){return'icon'in item&&item.icon!==undefined;});};var handleError=function handleError(error){console.error(formatError(error));console.log(error);return Optional.none();};var createHorizontalPartialMenuWithAlloyItems=function createHorizontalPartialMenuWithAlloyItems(value,_hasIcons,items,_columns,_presets){var structure=forHorizontalCollection(items);return{value:value,dom:structure.dom,components:structure.components,items:items};};var createPartialMenuWithAlloyItems=function createPartialMenuWithAlloyItems(value,hasIcons,items,columns,presets){if(presets==='color'){var structure=forSwatch(columns);return{value:value,dom:structure.dom,components:structure.components,items:items};}if(presets==='normal'&&columns==='auto'){var _structure=forCollection(columns,items);return{value:value,dom:_structure.dom,components:_structure.components,items:items};}if(presets==='normal'&&columns===1){var _structure2=forCollection(1,items);return{value:value,dom:_structure2.dom,components:_structure2.components,items:items};}if(presets==='normal'){var _structure3=forCollection(columns,items);return{value:value,dom:_structure3.dom,components:_structure3.components,items:items};}if(presets==='listpreview'&&columns!=='auto'){var _structure4=forToolbar(columns);return{value:value,dom:_structure4.dom,components:_structure4.components,items:items};}return{value:value,dom:dom$1(hasIcons,columns,presets),components:components,items:items};};var type=requiredString('type');var name$1=requiredString('name');var label=requiredString('label');var text=requiredString('text');var title=requiredString('title');var icon=requiredString('icon');var value$1=requiredString('value');var fetch$1=requiredFunction('fetch');var getSubmenuItems=requiredFunction('getSubmenuItems');var onAction=requiredFunction('onAction');var onItemAction=requiredFunction('onItemAction');var onSetup=defaultedFunction('onSetup',function(){return noop;});var optionalName=optionString('name');var optionalText=optionString('text');var optionalIcon=optionString('icon');var optionalTooltip=optionString('tooltip');var optionalLabel=optionString('label');var optionalShortcut=optionString('shortcut');var optionalSelect=optionFunction('select');var active=defaultedBoolean('active',false);var borderless=defaultedBoolean('borderless',false);var enabled=defaultedBoolean('enabled',true);var primary=defaultedBoolean('primary',false);var defaultedColumns=function defaultedColumns(num){return defaulted('columns',num);};var defaultedMeta=defaulted('meta',{});var defaultedOnAction=defaultedFunction('onAction',noop);var defaultedType=function defaultedType(type){return defaultedString('type',type);};var generatedName=function generatedName(namePrefix){return field$1('name','name',defaultedThunk(function(){return generate$6("".concat(namePrefix,"-name"));}),string);};var generatedValue=function generatedValue(valuePrefix){return field$1('value','value',defaultedThunk(function(){return generate$6("".concat(valuePrefix,"-value"));}),anyValue());};var separatorMenuItemSchema=objOf([type,optionalText]);var createSeparatorMenuItem=function createSeparatorMenuItem(spec){return asRaw('separatormenuitem',separatorMenuItemSchema,spec);};var autocompleterItemSchema=objOf([defaultedType('autocompleteitem'),active,enabled,defaultedMeta,value$1,optionalText,optionalIcon]);var createSeparatorItem=function createSeparatorItem(spec){return asRaw('Autocompleter.Separator',separatorMenuItemSchema,spec);};var createAutocompleterItem=function createAutocompleterItem(spec){return asRaw('Autocompleter.Item',autocompleterItemSchema,spec);};var baseToolbarButtonFields=[enabled,optionalTooltip,optionalIcon,optionalText,onSetup];var toolbarButtonSchema=objOf([type,onAction].concat(baseToolbarButtonFields));var createToolbarButton=function createToolbarButton(spec){return asRaw('toolbarbutton',toolbarButtonSchema,spec);};var baseToolbarToggleButtonFields=[active].concat(baseToolbarButtonFields);var toggleButtonSchema=objOf(baseToolbarToggleButtonFields.concat([type,onAction]));var createToggleButton=function createToggleButton(spec){return asRaw('ToggleButton',toggleButtonSchema,spec);};var contextBarFields=[defaultedFunction('predicate',never),defaultedStringEnum('scope','node',['node','editor']),defaultedStringEnum('position','selection',['node','selection','line'])];var contextButtonFields=baseToolbarButtonFields.concat([defaultedType('contextformbutton'),primary,onAction,customField('original',identity)]);var contextToggleButtonFields=baseToolbarToggleButtonFields.concat([defaultedType('contextformbutton'),primary,onAction,customField('original',identity)]);var launchButtonFields=baseToolbarButtonFields.concat([defaultedType('contextformbutton')]);var launchToggleButtonFields=baseToolbarToggleButtonFields.concat([defaultedType('contextformtogglebutton')]);var toggleOrNormal=choose$1('type',{contextformbutton:contextButtonFields,contextformtogglebutton:contextToggleButtonFields});var contextFormSchema=objOf([defaultedType('contextform'),defaultedFunction('initValue',constant$1('')),optionalLabel,requiredArrayOf('commands',toggleOrNormal),optionOf('launch',choose$1('type',{contextformbutton:launchButtonFields,contextformtogglebutton:launchToggleButtonFields}))].concat(contextBarFields));var createContextForm=function createContextForm(spec){return asRaw('ContextForm',contextFormSchema,spec);};var contextToolbarSchema=objOf([defaultedType('contexttoolbar'),requiredString('items')].concat(contextBarFields));var createContextToolbar=function createContextToolbar(spec){return asRaw('ContextToolbar',contextToolbarSchema,spec);};var cardImageFields=[type,requiredString('src'),optionString('alt'),defaultedArrayOf('classes',[],string)];var cardImageSchema=objOf(cardImageFields);var cardTextFields=[type,text,optionalName,defaultedArrayOf('classes',['tox-collection__item-label'],string)];var cardTextSchema=objOf(cardTextFields);var itemSchema$1=valueThunk(function(){return choose$2('type',{cardimage:cardImageSchema,cardtext:cardTextSchema,cardcontainer:cardContainerSchema});});var cardContainerSchema=objOf([type,defaultedString('direction','horizontal'),defaultedString('align','left'),defaultedString('valign','middle'),requiredArrayOf('items',itemSchema$1)]);var commonMenuItemFields=[enabled,optionalText,optionalShortcut,generatedValue('menuitem'),defaultedMeta];var cardMenuItemSchema=objOf([type,optionalLabel,requiredArrayOf('items',itemSchema$1),onSetup,defaultedOnAction].concat(commonMenuItemFields));var createCardMenuItem=function createCardMenuItem(spec){return asRaw('cardmenuitem',cardMenuItemSchema,spec);};var choiceMenuItemSchema=objOf([type,active,optionalIcon].concat(commonMenuItemFields));var createChoiceMenuItem=function createChoiceMenuItem(spec){return asRaw('choicemenuitem',choiceMenuItemSchema,spec);};var baseFields=[type,requiredString('fancytype'),defaultedOnAction];var insertTableFields=[defaulted('initData',{})].concat(baseFields);var colorSwatchFields=[defaultedObjOf('initData',{},[defaultedBoolean('allowCustomColors',true),optionArrayOf('colors',anyValue())])].concat(baseFields);var fancyMenuItemSchema=choose$1('fancytype',{inserttable:insertTableFields,colorswatch:colorSwatchFields});var createFancyMenuItem=function createFancyMenuItem(spec){return asRaw('fancymenuitem',fancyMenuItemSchema,spec);};var menuItemSchema=objOf([type,onSetup,defaultedOnAction,optionalIcon].concat(commonMenuItemFields));var createMenuItem=function createMenuItem(spec){return asRaw('menuitem',menuItemSchema,spec);};var nestedMenuItemSchema=objOf([type,getSubmenuItems,onSetup,optionalIcon].concat(commonMenuItemFields));var createNestedMenuItem=function createNestedMenuItem(spec){return asRaw('nestedmenuitem',nestedMenuItemSchema,spec);};var toggleMenuItemSchema=objOf([type,optionalIcon,active,onSetup,onAction].concat(commonMenuItemFields));var createToggleMenuItem=function createToggleMenuItem(spec){return asRaw('togglemenuitem',toggleMenuItemSchema,spec);};var detectSize=function detectSize(comp,margin,selectorClass){var descendants$1=descendants(comp.element,'.'+selectorClass);if(descendants$1.length>0){var columnLength=findIndex$1(descendants$1,function(c){var thisTop=c.dom.getBoundingClientRect().top;var cTop=descendants$1[0].dom.getBoundingClientRect().top;return Math.abs(thisTop-cTop)>margin;}).getOr(descendants$1.length);return Optional.some({numColumns:columnLength,numRows:Math.ceil(descendants$1.length/columnLength)});}else{return Optional.none();}};var namedEvents=function namedEvents(name,handlers){return derive$1([config(name,handlers)]);};var unnamedEvents=function unnamedEvents(handlers){return namedEvents(generate$6('unnamed-events'),handlers);};var SimpleBehaviours={namedEvents:namedEvents,unnamedEvents:unnamedEvents};var ExclusivityChannel=generate$6('tooltip.exclusive');var ShowTooltipEvent=generate$6('tooltip.show');var HideTooltipEvent=generate$6('tooltip.hide');var hideAllExclusive=function hideAllExclusive(component,_tConfig,_tState){component.getSystem().broadcastOn([ExclusivityChannel],{});};var setComponents=function setComponents(component,tConfig,tState,specs){tState.getTooltip().each(function(tooltip){if(tooltip.getSystem().isConnected()){Replacing.set(tooltip,specs);}});};var TooltippingApis=/*#__PURE__*/Object.freeze({__proto__:null,hideAllExclusive:hideAllExclusive,setComponents:setComponents});var events$9=function events$9(tooltipConfig,state){var hide=function hide(comp){state.getTooltip().each(function(p){detach(p);tooltipConfig.onHide(comp,p);state.clearTooltip();});state.clearTimer();};var show=function show(comp){if(!state.isShowing()){hideAllExclusive(comp);var sink=tooltipConfig.lazySink(comp).getOrDie();var popup=comp.getSystem().build({dom:tooltipConfig.tooltipDom,components:tooltipConfig.tooltipComponents,events:derive$2(tooltipConfig.mode==='normal'?[run$1(mouseover(),function(_){emit(comp,ShowTooltipEvent);}),run$1(mouseout(),function(_){emit(comp,HideTooltipEvent);})]:[]),behaviours:derive$1([Replacing.config({})])});state.setTooltip(popup);attach(sink,popup);tooltipConfig.onShow(comp,popup);Positioning.position(sink,popup,{anchor:tooltipConfig.anchor(comp)});}};return derive$2(flatten([[run$1(ShowTooltipEvent,function(comp){state.resetTimer(function(){show(comp);},tooltipConfig.delay);}),run$1(HideTooltipEvent,function(comp){state.resetTimer(function(){hide(comp);},tooltipConfig.delay);}),run$1(receive(),function(comp,message){var receivingData=message;if(!receivingData.universal){if(contains$2(receivingData.channels,ExclusivityChannel)){hide(comp);}}}),runOnDetached(function(comp){hide(comp);})],tooltipConfig.mode==='normal'?[run$1(focusin(),function(comp){emit(comp,ShowTooltipEvent);}),run$1(postBlur(),function(comp){emit(comp,HideTooltipEvent);}),run$1(mouseover(),function(comp){emit(comp,ShowTooltipEvent);}),run$1(mouseout(),function(comp){emit(comp,HideTooltipEvent);})]:[run$1(highlight$1(),function(comp,_se){emit(comp,ShowTooltipEvent);}),run$1(dehighlight$1(),function(comp){emit(comp,HideTooltipEvent);})]]));};var ActiveTooltipping=/*#__PURE__*/Object.freeze({__proto__:null,events:events$9});var TooltippingSchema=[required$1('lazySink'),required$1('tooltipDom'),defaulted('exclusive',true),defaulted('tooltipComponents',[]),defaulted('delay',300),defaultedStringEnum('mode','normal',['normal','follow-highlight']),defaulted('anchor',function(comp){return{type:'hotspot',hotspot:comp,layouts:{onLtr:constant$1([south$2,north$2,southeast$2,northeast$2,southwest$2,northwest$2]),onRtl:constant$1([south$2,north$2,southeast$2,northeast$2,southwest$2,northwest$2])}};}),onHandler('onHide'),onHandler('onShow')];var init$b=function init$b(){var timer=value$2();var popup=value$2();var clearTimer=function clearTimer(){timer.on(clearTimeout);};var resetTimer=function resetTimer(f,delay){clearTimer();timer.set(setTimeout(f,delay));};var readState=constant$1('not-implemented');return nu$8({getTooltip:popup.get,isShowing:popup.isSet,setTooltip:popup.set,clearTooltip:popup.clear,clearTimer:clearTimer,resetTimer:resetTimer,readState:readState});};var TooltippingState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$b});var Tooltipping=create$3({fields:TooltippingSchema,name:'tooltipping',active:ActiveTooltipping,state:TooltippingState,apis:TooltippingApis});var escape=function escape(text){return text.replace(/[.*+?^${}()|[\]\\]/g,'\\$&');};var ReadOnlyChannel='silver.readonly';var ReadOnlyDataSchema=objOf([requiredBoolean('readonly')]);var broadcastReadonly=function broadcastReadonly(uiComponents,readonly){var outerContainer=uiComponents.outerContainer;var target=outerContainer.element;if(readonly){uiComponents.mothership.broadcastOn([dismissPopups()],{target:target});uiComponents.uiMothership.broadcastOn([dismissPopups()],{target:target});}uiComponents.mothership.broadcastOn([ReadOnlyChannel],{readonly:readonly});uiComponents.uiMothership.broadcastOn([ReadOnlyChannel],{readonly:readonly});};var setupReadonlyModeSwitch=function setupReadonlyModeSwitch(editor,uiComponents){editor.on('init',function(){if(editor.mode.isReadOnly()){broadcastReadonly(uiComponents,true);}});editor.on('SwitchMode',function(){return broadcastReadonly(uiComponents,editor.mode.isReadOnly());});if(isReadOnly(editor)){editor.mode.set('readonly');}};var receivingConfig=function receivingConfig(){return Receiving.config({channels:_defineProperty({},ReadOnlyChannel,{schema:ReadOnlyDataSchema,onReceive:function onReceive(comp,data){Disabling.set(comp,data.readonly);}})});};var item=function item(disabled){return Disabling.config({disabled:disabled,disableClass:'tox-collection__item--state-disabled'});};var button=function button(disabled){return Disabling.config({disabled:disabled});};var splitButton=function splitButton(disabled){return Disabling.config({disabled:disabled,disableClass:'tox-tbtn--disabled'});};var toolbarButton=function toolbarButton(disabled){return Disabling.config({disabled:disabled,disableClass:'tox-tbtn--disabled',useNative:false});};var DisablingConfigs={item:item,button:button,splitButton:splitButton,toolbarButton:toolbarButton};var runWithApi=function runWithApi(info,comp){var api=info.getApi(comp);return function(f){f(api);};};var onControlAttached=function onControlAttached(info,editorOffCell){return runOnAttached(function(comp){var run=runWithApi(info,comp);run(function(api){var onDestroy=info.onSetup(api);if(isFunction(onDestroy)){editorOffCell.set(onDestroy);}});});};var onControlDetached=function onControlDetached(getApi,editorOffCell){return runOnDetached(function(comp){return runWithApi(getApi,comp)(editorOffCell.get());});};var onMenuItemExecute=function onMenuItemExecute(info,itemResponse){return runOnExecute$1(function(comp,simulatedEvent){runWithApi(info,comp)(info.onAction);if(!info.triggersSubmenu&&itemResponse===ItemResponse$1.CLOSE_ON_EXECUTE){if(comp.getSystem().isConnected()){emit(comp,sandboxClose());}simulatedEvent.stop();}});};var menuItemEventOrder=_defineProperty({},execute$5(),['disabling','alloy.base.behaviour','toggling','item-events']);var componentRenderPipeline=cat;var renderCommonItem=function renderCommonItem(spec,structure,itemResponse,providersbackstage){var editorOffCell=Cell(noop);return{type:'item',dom:structure.dom,components:componentRenderPipeline(structure.optComponents),data:spec.data,eventOrder:menuItemEventOrder,hasSubmenu:spec.triggersSubmenu,itemBehaviours:derive$1([config('item-events',[onMenuItemExecute(spec,itemResponse),onControlAttached(spec,editorOffCell),onControlDetached(spec,editorOffCell)]),DisablingConfigs.item(function(){return!spec.enabled||providersbackstage.isDisabled();}),receivingConfig(),Replacing.config({})].concat(spec.itemBehaviours))};};var buildData=function buildData(source){return{value:source.value,meta:_objectSpread({text:source.text.getOr('')},source.meta)};};var convertText=function convertText(source){var isMac=global$5.os.isMacOS()||global$5.os.isiOS();var mac={alt:"\u2325",ctrl:"\u2303",shift:"\u21E7",meta:"\u2318",access:"\u2303\u2325"};var other={meta:'Ctrl',access:'Shift+Alt'};var replace=isMac?mac:other;var shortcut=source.split('+');var updated=map$2(shortcut,function(segment){var search=segment.toLowerCase().trim();return has$2(replace,search)?replace[search]:segment;});return isMac?updated.join(''):updated.join('+');};var renderIcon$1=function renderIcon$1(name,icons){var classes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[iconClass];return render$3(name,{tag:'div',classes:classes},icons);};var renderText=function renderText(text){return{dom:{tag:'div',classes:[textClass]},components:[text$1(global$8.translate(text))]};};var renderHtml=function renderHtml(html,classes){return{dom:{tag:'div',classes:classes,innerHtml:html}};};var renderStyledText=function renderStyledText(style,text){return{dom:{tag:'div',classes:[textClass]},components:[{dom:{tag:style.tag,styles:style.styles},components:[text$1(global$8.translate(text))]}]};};var renderShortcut=function renderShortcut(shortcut){return{dom:{tag:'div',classes:[accessoryClass]},components:[text$1(convertText(shortcut))]};};var renderCheckmark=function renderCheckmark(icons){return renderIcon$1('checkmark',icons,[checkmarkClass]);};var renderSubmenuCaret=function renderSubmenuCaret(icons){return renderIcon$1('chevron-right',icons,[caretClass]);};var renderDownwardsCaret=function renderDownwardsCaret(icons){return renderIcon$1('chevron-down',icons,[caretClass]);};var renderContainer=function renderContainer(container,components){var directionClass=container.direction==='vertical'?containerColumnClass:containerRowClass;var alignClass=container.align==='left'?containerAlignLeftClass:containerAlignRightClass;var getValignClass=function getValignClass(){switch(container.valign){case'top':return containerValignTopClass;case'middle':return containerValignMiddleClass;case'bottom':return containerValignBottomClass;}};return{dom:{tag:'div',classes:[containerClass,directionClass,alignClass,getValignClass()]},components:components};};var renderImage=function renderImage(src,classes,alt){return{dom:{tag:'img',classes:classes,attributes:{src:src,alt:alt.getOr('')}}};};var renderColorStructure=function renderColorStructure(item,providerBackstage,fallbackIcon){var colorPickerCommand='custom';var removeColorCommand='remove';var itemText=item.ariaLabel;var itemValue=item.value;var iconSvg=item.iconContent.map(function(name){return getOr(name,providerBackstage.icons,fallbackIcon);});var getDom=function getDom(){var common=colorClass;var icon=iconSvg.getOr('');var attributes=itemText.map(function(text){return{title:providerBackstage.translate(text)};}).getOr({});var baseDom={tag:'div',attributes:attributes,classes:[common]};if(itemValue===colorPickerCommand){return _objectSpread({},baseDom,{tag:'button',classes:[].concat(_toConsumableArray(baseDom.classes),['tox-swatches__picker-btn']),innerHtml:icon});}else if(itemValue===removeColorCommand){return _objectSpread({},baseDom,{classes:[].concat(_toConsumableArray(baseDom.classes),['tox-swatch--remove']),innerHtml:icon});}else{return _objectSpread({},baseDom,{attributes:_objectSpread({},baseDom.attributes,{'data-mce-color':itemValue}),styles:{'background-color':itemValue}});}};return{dom:getDom(),optComponents:[]};};var renderItemDomStructure=function renderItemDomStructure(ariaLabel){var domTitle=ariaLabel.map(function(label){return{attributes:{title:global$8.translate(label)}};}).getOr({});return _objectSpread({tag:'div',classes:[navClass,selectableClass]},domTitle);};var renderNormalItemStructure=function renderNormalItemStructure(info,providersBackstage,renderIcons,fallbackIcon){var iconSpec={tag:'div',classes:[iconClass]};var renderIcon=function renderIcon(iconName){return render$3(iconName,iconSpec,providersBackstage.icons,fallbackIcon);};var renderEmptyIcon=function renderEmptyIcon(){return Optional.some({dom:iconSpec});};var leftIcon=renderIcons?info.iconContent.map(renderIcon).orThunk(renderEmptyIcon):Optional.none();var checkmark=info.checkMark;var textRender=Optional.from(info.meta).fold(function(){return renderText;},function(meta){return has$2(meta,'style')?curry(renderStyledText,meta.style):renderText;});var content=info.htmlContent.fold(function(){return info.textContent.map(textRender);},function(html){return Optional.some(renderHtml(html,[textClass]));});var menuItem={dom:renderItemDomStructure(info.ariaLabel),optComponents:[leftIcon,content,info.shortcutContent.map(renderShortcut),checkmark,info.caret]};return menuItem;};var renderItemStructure=function renderItemStructure(info,providersBackstage,renderIcons){var fallbackIcon=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Optional.none();if(info.presets==='color'){return renderColorStructure(info,providersBackstage,fallbackIcon);}else{return renderNormalItemStructure(info,providersBackstage,renderIcons,fallbackIcon);}};var tooltipBehaviour=function tooltipBehaviour(meta,sharedBackstage){return get$g(meta,'tooltipWorker').map(function(tooltipWorker){return[Tooltipping.config({lazySink:sharedBackstage.getSink,tooltipDom:{tag:'div',classes:['tox-tooltip-worker-container']},tooltipComponents:[],anchor:function anchor(comp){return{type:'submenu',item:comp,overrides:{maxHeightFunction:expandable$1}};},mode:'follow-highlight',onShow:function onShow(component,_tooltip){tooltipWorker(function(elm){Tooltipping.setComponents(component,[external$1({element:SugarElement.fromDom(elm)})]);});}})];}).getOr([]);};var encodeText=function encodeText(text){return global$7.DOM.encode(text);};var replaceText=function replaceText(text,matchText){var translated=global$8.translate(text);var encoded=encodeText(translated);if(matchText.length>0){var escapedMatchRegex=new RegExp(escape(matchText),'gi');return encoded.replace(escapedMatchRegex,function(match){return"<span class=\"tox-autocompleter-highlight\">".concat(match,"</span>");});}else{return encoded;}};var renderAutocompleteItem=function renderAutocompleteItem(spec,matchText,useText,presets,onItemValueHandler,itemResponse,sharedBackstage){var renderIcons=arguments.length>7&&arguments[7]!==undefined?arguments[7]:true;var structure=renderItemStructure({presets:presets,textContent:Optional.none(),htmlContent:useText?spec.text.map(function(text){return replaceText(text,matchText);}):Optional.none(),ariaLabel:spec.text,iconContent:spec.icon,shortcutContent:Optional.none(),checkMark:Optional.none(),caret:Optional.none(),value:spec.value},sharedBackstage.providers,renderIcons,spec.icon);return renderCommonItem({data:buildData(spec),enabled:spec.enabled,getApi:constant$1({}),onAction:function onAction(_api){return onItemValueHandler(spec.value,spec.meta);},onSetup:constant$1(noop),triggersSubmenu:false,itemBehaviours:tooltipBehaviour(spec.meta,sharedBackstage)},structure,itemResponse,sharedBackstage.providers);};var render$2=function render$2(items,extras){return map$2(items,function(item){switch(item.type){case'cardcontainer':return renderContainer(item,render$2(item.items,extras));case'cardimage':return renderImage(item.src,item.classes,item.alt);case'cardtext':var shouldHighlight=item.name.exists(function(name){return contains$2(extras.cardText.highlightOn,name);});var matchText=shouldHighlight?Optional.from(extras.cardText.matchText).getOr(''):'';return renderHtml(replaceText(item.text,matchText),item.classes);}});};var renderCardMenuItem=function renderCardMenuItem(spec,itemResponse,sharedBackstage,extras){var getApi=function getApi(component){return{isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){Disabling.set(component,!state);each$1(descendants(component.element,'*'),function(elm){component.getSystem().getByDom(elm).each(function(comp){if(comp.hasConfigured(Disabling)){Disabling.set(comp,!state);}});});}};};var structure={dom:renderItemDomStructure(spec.label),optComponents:[Optional.some({dom:{tag:'div',classes:[containerClass,containerRowClass]},components:render$2(spec.items,extras)})]};return renderCommonItem({data:buildData(_objectSpread({text:Optional.none()},spec)),enabled:spec.enabled,getApi:getApi,onAction:spec.onAction,onSetup:spec.onSetup,triggersSubmenu:false,itemBehaviours:Optional.from(extras.itemBehaviours).getOr([])},structure,itemResponse,sharedBackstage.providers);};var renderChoiceItem=function renderChoiceItem(spec,useText,presets,onItemValueHandler,isSelected,itemResponse,providersBackstage){var renderIcons=arguments.length>7&&arguments[7]!==undefined?arguments[7]:true;var getApi=function getApi(component){return{setActive:function setActive(state){Toggling.set(component,state);},isActive:function isActive(){return Toggling.isOn(component);},isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);}};};var structure=renderItemStructure({presets:presets,textContent:useText?spec.text:Optional.none(),htmlContent:Optional.none(),ariaLabel:spec.text,iconContent:spec.icon,shortcutContent:useText?spec.shortcut:Optional.none(),checkMark:useText?Optional.some(renderCheckmark(providersBackstage.icons)):Optional.none(),caret:Optional.none(),value:spec.value},providersBackstage,renderIcons);return deepMerge(renderCommonItem({data:buildData(spec),enabled:spec.enabled,getApi:getApi,onAction:function onAction(_api){return onItemValueHandler(spec.value);},onSetup:function onSetup(api){api.setActive(isSelected);return noop;},triggersSubmenu:false,itemBehaviours:[]},structure,itemResponse,providersBackstage),{toggling:{toggleClass:tickedClass,toggleOnExecute:false,selected:spec.active,exclusive:true}});};var parts$f=generate$3(owner$2(),parts$h());var hexColour=function hexColour(value){return{value:value};};var shorthandRegex=/^#?([a-f\d])([a-f\d])([a-f\d])$/i;var longformRegex=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;var isHexString=function isHexString(hex){return shorthandRegex.test(hex)||longformRegex.test(hex);};var normalizeHex=function normalizeHex(hex){return removeLeading(hex,'#').toUpperCase();};var fromString$1=function fromString$1(hex){return isHexString(hex)?Optional.some({value:normalizeHex(hex)}):Optional.none();};var getLongForm=function getLongForm(hex){var hexString=hex.value.replace(shorthandRegex,function(m,r,g,b){return r+r+g+g+b+b;});return{value:hexString};};var extractValues=function extractValues(hex){var longForm=getLongForm(hex);var splitForm=longformRegex.exec(longForm.value);return splitForm===null?['FFFFFF','FF','FF','FF']:splitForm;};var toHex=function toHex(component){var hex=component.toString(16);return(hex.length===1?'0'+hex:hex).toUpperCase();};var fromRgba=function fromRgba(rgbaColour){var value=toHex(rgbaColour.red)+toHex(rgbaColour.green)+toHex(rgbaColour.blue);return hexColour(value);};var min=Math.min;var max=Math.max;var round$1=Math.round;var rgbRegex=/^\s*rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)\s*$/i;var rgbaRegex=/^\s*rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d?(?:\.\d+)?)\s*\)\s*$/i;var rgbaColour=function rgbaColour(red,green,blue,alpha){return{red:red,green:green,blue:blue,alpha:alpha};};var isRgbaComponent=function isRgbaComponent(value){var num=parseInt(value,10);return num.toString()===value&&num>=0&&num<=255;};var fromHsv=function fromHsv(hsv){var r;var g;var b;var hue=(hsv.hue||0)%360;var saturation=hsv.saturation/100;var brightness=hsv.value/100;saturation=max(0,min(saturation,1));brightness=max(0,min(brightness,1));if(saturation===0){r=g=b=round$1(255*brightness);return rgbaColour(r,g,b,1);}var side=hue/60;var chroma=brightness*saturation;var x=chroma*(1-Math.abs(side%2-1));var match=brightness-chroma;switch(Math.floor(side)){case 0:r=chroma;g=x;b=0;break;case 1:r=x;g=chroma;b=0;break;case 2:r=0;g=chroma;b=x;break;case 3:r=0;g=x;b=chroma;break;case 4:r=x;g=0;b=chroma;break;case 5:r=chroma;g=0;b=x;break;default:r=g=b=0;}r=round$1(255*(r+match));g=round$1(255*(g+match));b=round$1(255*(b+match));return rgbaColour(r,g,b,1);};var fromHex=function fromHex(hexColour){var result=extractValues(hexColour);var red=parseInt(result[1],16);var green=parseInt(result[2],16);var blue=parseInt(result[3],16);return rgbaColour(red,green,blue,1);};var fromStringValues=function fromStringValues(red,green,blue,alpha){var r=parseInt(red,10);var g=parseInt(green,10);var b=parseInt(blue,10);var a=parseFloat(alpha);return rgbaColour(r,g,b,a);};var fromString=function fromString(rgbaString){if(rgbaString==='transparent'){return Optional.some(rgbaColour(0,0,0,0));}var rgbMatch=rgbRegex.exec(rgbaString);if(rgbMatch!==null){return Optional.some(fromStringValues(rgbMatch[1],rgbMatch[2],rgbMatch[3],'1'));}var rgbaMatch=rgbaRegex.exec(rgbaString);if(rgbaMatch!==null){return Optional.some(fromStringValues(rgbaMatch[1],rgbaMatch[2],rgbaMatch[3],rgbaMatch[4]));}return Optional.none();};var toString=function toString(rgba){return"rgba(".concat(rgba.red,",").concat(rgba.green,",").concat(rgba.blue,",").concat(rgba.alpha,")");};var red=rgbaColour(255,0,0,1);var fireSkinLoaded$1=function fireSkinLoaded$1(editor){return editor.dispatch('SkinLoaded');};var fireSkinLoadError$1=function fireSkinLoadError$1(editor,error){return editor.dispatch('SkinLoadError',error);};var fireResizeEditor=function fireResizeEditor(editor){return editor.dispatch('ResizeEditor');};var fireResizeContent=function fireResizeContent(editor,e){return editor.dispatch('ResizeContent',e);};var fireScrollContent=function fireScrollContent(editor,e){return editor.dispatch('ScrollContent',e);};var fireTextColorChange=function fireTextColorChange(editor,data){return editor.dispatch('TextColorChange',data);};var hsvColour=function hsvColour(hue,saturation,value){return{hue:hue,saturation:saturation,value:value};};var fromRgb=function fromRgb(rgbaColour){var h=0;var s=0;var v=0;var r=rgbaColour.red/255;var g=rgbaColour.green/255;var b=rgbaColour.blue/255;var minRGB=Math.min(r,Math.min(g,b));var maxRGB=Math.max(r,Math.max(g,b));if(minRGB===maxRGB){v=minRGB;return hsvColour(0,0,v*100);}var d=r===minRGB?g-b:b===minRGB?r-g:b-r;h=r===minRGB?3:b===minRGB?1:5;h=60*(h-d/(maxRGB-minRGB));s=(maxRGB-minRGB)/maxRGB;v=maxRGB;return hsvColour(Math.round(h),Math.round(s*100),Math.round(v*100));};var hexToHsv=function hexToHsv(hex){return fromRgb(fromHex(hex));};var hsvToHex=function hsvToHex(hsv){return fromRgba(fromHsv(hsv));};var anyToHex=function anyToHex(color){return fromString$1(color).orThunk(function(){return fromString(color).map(fromRgba);}).getOrThunk(function(){var canvas=document.createElement('canvas');canvas.height=1;canvas.width=1;var canvasContext=canvas.getContext('2d');canvasContext.clearRect(0,0,canvas.width,canvas.height);canvasContext.fillStyle='#FFFFFF';canvasContext.fillStyle=color;canvasContext.fillRect(0,0,1,1);var rgba=canvasContext.getImageData(0,0,1,1).data;var r=rgba[0];var g=rgba[1];var b=rgba[2];var a=rgba[3];return fromRgba(rgbaColour(r,g,b,a));});};var global$4=tinymce.util.Tools.resolve('tinymce.util.LocalStorage');var storageName='tinymce-custom-colors';var ColorCache=function ColorCache(){var max=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var storageString=global$4.getItem(storageName);var localstorage=isString(storageString)?JSON.parse(storageString):[];var prune=function prune(list){var diff=max-list.length;return diff<0?list.slice(0,max):list;};var cache=prune(localstorage);var add=function add(key){indexOf(cache,key).each(remove);cache.unshift(key);if(cache.length>max){cache.pop();}global$4.setItem(storageName,JSON.stringify(cache));};var remove=function remove(idx){cache.splice(idx,1);};var state=function state(){return cache.slice(0);};return{add:add,state:state};};var colorCache=ColorCache(10);var calcCols=function calcCols(colors){return Math.max(5,Math.ceil(Math.sqrt(colors)));};var mapColors=function mapColors(colorMap){var colors=[];for(var i=0;i<colorMap.length;i+=2){colors.push({text:colorMap[i+1],value:'#'+anyToHex(colorMap[i]).value,type:'choiceitem'});}return colors;};var option$1=function option$1(name){return function(editor){return editor.options.get(name);};};var register$d=function register$d(editor){var registerOption=editor.options.register;registerOption('color_map',{processor:function processor(value){if(isArrayOf(value,isString)){return{value:mapColors(value),valid:true};}else{return{valid:false,message:'Must be an array of strings.'};}},"default":['#BFEDD2','Light Green','#FBEEB8','Light Yellow','#F8CAC6','Light Red','#ECCAFA','Light Purple','#C2E0F4','Light Blue','#2DC26B','Green','#F1C40F','Yellow','#E03E2D','Red','#B96AD9','Purple','#3598DB','Blue','#169179','Dark Turquoise','#E67E23','Orange','#BA372A','Dark Red','#843FA1','Dark Purple','#236FA1','Dark Blue','#ECF0F1','Light Gray','#CED4D9','Medium Gray','#95A5A6','Gray','#7E8C8D','Dark Gray','#34495E','Navy Blue','#000000','Black','#ffffff','White']});registerOption('color_cols',{processor:'number',"default":calcCols(getColors$2(editor).length)});registerOption('custom_colors',{processor:'boolean',"default":true});};var getColorCols$1=option$1('color_cols');var hasCustomColors$1=option$1('custom_colors');var getColors$2=option$1('color_map');var getCurrentColors=function getCurrentColors(){return map$2(colorCache.state(),function(color){return{type:'choiceitem',text:color,value:color};});};var addColor=function addColor(color){colorCache.add(color);};var fallbackColor='#000000';var getCurrentColor=function getCurrentColor(editor,format){var color;editor.dom.getParents(editor.selection.getStart(),function(elm){var value;if(value=elm.style[format==='forecolor'?'color':'background-color']){color=color?color:value;}});return Optional.from(color);};var applyFormat=function applyFormat(editor,format,value){editor.undoManager.transact(function(){editor.focus();editor.formatter.apply(format,{value:value});editor.nodeChanged();});};var removeFormat=function removeFormat(editor,format){editor.undoManager.transact(function(){editor.focus();editor.formatter.remove(format,{value:null},null,true);editor.nodeChanged();});};var registerCommands=function registerCommands(editor){editor.addCommand('mceApplyTextcolor',function(format,value){applyFormat(editor,format,value);});editor.addCommand('mceRemoveTextcolor',function(format){removeFormat(editor,format);});};var getAdditionalColors=function getAdditionalColors(hasCustom){var type='choiceitem';var remove={type:type,text:'Remove color',icon:'color-swatch-remove-color',value:'remove'};var custom={type:type,text:'Custom color',icon:'color-picker',value:'custom'};return hasCustom?[remove,custom]:[remove];};var applyColor=function applyColor(editor,format,value,onChoice){if(value==='custom'){var dialog=colorPickerDialog(editor);dialog(function(colorOpt){colorOpt.each(function(color){addColor(color);editor.execCommand('mceApplyTextcolor',format,color);onChoice(color);});},fallbackColor);}else if(value==='remove'){onChoice('');editor.execCommand('mceRemoveTextcolor',format);}else{onChoice(value);editor.execCommand('mceApplyTextcolor',format,value);}};var getColors$1=function getColors$1(colors,hasCustom){return colors.concat(getCurrentColors().concat(getAdditionalColors(hasCustom)));};var getFetch$1=function getFetch$1(colors,hasCustom){return function(callback){callback(getColors$1(colors,hasCustom));};};var setIconColor=function setIconColor(splitButtonApi,name,newColor){var id=name==='forecolor'?'tox-icon-text-color__color':'tox-icon-highlight-bg-color__color';splitButtonApi.setIconFill(id,newColor);};var registerTextColorButton=function registerTextColorButton(editor,name,format,tooltip,lastColor){editor.ui.registry.addSplitButton(name,{tooltip:tooltip,presets:'color',icon:name==='forecolor'?'text-color':'highlight-bg-color',select:function select(value){var optCurrentRgb=getCurrentColor(editor,format);return optCurrentRgb.bind(function(currentRgb){return fromString(currentRgb).map(function(rgba){var currentHex=fromRgba(rgba).value;return contains$1(value.toLowerCase(),currentHex);});}).getOr(false);},columns:getColorCols$1(editor),fetch:getFetch$1(getColors$2(editor),hasCustomColors$1(editor)),onAction:function onAction(_splitButtonApi){applyColor(editor,format,lastColor.get(),noop);},onItemAction:function onItemAction(_splitButtonApi,value){applyColor(editor,format,value,function(newColor){lastColor.set(newColor);fireTextColorChange(editor,{name:name,color:newColor});});},onSetup:function onSetup(splitButtonApi){setIconColor(splitButtonApi,name,lastColor.get());var handler=function handler(e){if(e.name===name){setIconColor(splitButtonApi,e.name,e.color);}};editor.on('TextColorChange',handler);return function(){editor.off('TextColorChange',handler);};}});};var registerTextColorMenuItem=function registerTextColorMenuItem(editor,name,format,text){editor.ui.registry.addNestedMenuItem(name,{text:text,icon:name==='forecolor'?'text-color':'highlight-bg-color',getSubmenuItems:function getSubmenuItems(){return[{type:'fancymenuitem',fancytype:'colorswatch',onAction:function onAction(data){applyColor(editor,format,data.value,noop);}}];}});};var colorPickerDialog=function colorPickerDialog(editor){return function(callback,value){var isValid=false;var onSubmit=function onSubmit(api){var data=api.getData();var hex=data.colorpicker;if(isValid){callback(Optional.from(hex));api.close();}else{editor.windowManager.alert(editor.translate(['Invalid hex color code: {0}',hex]));}};var onAction=function onAction(_api,details){if(details.name==='hex-valid'){isValid=details.value;}};var initialData={colorpicker:value};editor.windowManager.open({title:'Color Picker',size:'normal',body:{type:'panel',items:[{type:'colorpicker',name:'colorpicker',label:'Color'}]},buttons:[{type:'cancel',name:'cancel',text:'Cancel'},{type:'submit',name:'save',text:'Save',primary:true}],initialData:initialData,onAction:onAction,onSubmit:onSubmit,onClose:noop,onCancel:function onCancel(){callback(Optional.none());}});};};var register$c=function register$c(editor){registerCommands(editor);var lastForeColor=Cell(fallbackColor);var lastBackColor=Cell(fallbackColor);registerTextColorButton(editor,'forecolor','forecolor','Text color',lastForeColor);registerTextColorButton(editor,'backcolor','hilitecolor','Background color',lastBackColor);registerTextColorMenuItem(editor,'forecolor','forecolor','Text color');registerTextColorMenuItem(editor,'backcolor','hilitecolor','Background color');};var createPartialChoiceMenu=function createPartialChoiceMenu(value,items,onItemValueHandler,columns,presets,itemResponse,select,providersBackstage){var hasIcons=menuHasIcons(items);var presetItemTypes=presets!=='color'?'normal':'color';var alloyItems=createChoiceItems(items,onItemValueHandler,columns,presetItemTypes,itemResponse,select,providersBackstage);return createPartialMenuWithAlloyItems(value,hasIcons,alloyItems,columns,presets);};var createChoiceItems=function createChoiceItems(items,onItemValueHandler,columns,itemPresets,itemResponse,select,providersBackstage){return cat(map$2(items,function(item){if(item.type==='choiceitem'){return createChoiceMenuItem(item).fold(handleError,function(d){return Optional.some(renderChoiceItem(d,columns===1,itemPresets,onItemValueHandler,select(item.value),itemResponse,providersBackstage,menuHasIcons(items)));});}else{return Optional.none();}}));};var deriveMenuMovement=function deriveMenuMovement(columns,presets){var menuMarkers=markers(presets);if(columns===1){return{mode:'menu',moveOnTab:true};}else if(columns==='auto'){return{mode:'grid',selector:'.'+menuMarkers.item,initSize:{numColumns:1,numRows:1}};}else{var rowClass=presets==='color'?'tox-swatches__row':'tox-collection__group';return{mode:'matrix',rowSelector:'.'+rowClass};}};var deriveCollectionMovement=function deriveCollectionMovement(columns,presets){if(columns===1){return{mode:'menu',moveOnTab:false,selector:'.tox-collection__item'};}else if(columns==='auto'){return{mode:'flatgrid',selector:'.'+'tox-collection__item',initSize:{numColumns:1,numRows:1}};}else{return{mode:'matrix',selectors:{row:presets==='color'?'.tox-swatches__row':'.tox-collection__group',cell:presets==='color'?".".concat(colorClass):".".concat(selectableClass)}};}};var renderColorSwatchItem=function renderColorSwatchItem(spec,backstage){var items=getColorItems(spec,backstage);var columns=backstage.colorinput.getColorCols();var presets='color';var menuSpec=createPartialChoiceMenu(generate$6('menu-value'),items,function(value){spec.onAction({value:value});},columns,presets,ItemResponse$1.CLOSE_ON_EXECUTE,never,backstage.shared.providers);var widgetSpec=_objectSpread({},menuSpec,{markers:markers(presets),movement:deriveMenuMovement(columns,presets)});return{type:'widget',data:{value:generate$6('widget-id')},dom:{tag:'div',classes:['tox-fancymenuitem']},autofocus:true,components:[parts$f.widget(Menu.sketch(widgetSpec))]};};var getColorItems=function getColorItems(spec,backstage){var useCustomColors=spec.initData.allowCustomColors&&backstage.colorinput.hasCustomColors();return spec.initData.colors.fold(function(){return getColors$1(backstage.colorinput.getColors(),useCustomColors);},function(colors){return colors.concat(getAdditionalColors(useCustomColors));});};var cellOverEvent=generate$6('cell-over');var cellExecuteEvent=generate$6('cell-execute');var makeCell=function makeCell(row,col,labelId){var emitCellOver=function emitCellOver(c){return emitWith(c,cellOverEvent,{row:row,col:col});};var emitExecute=function emitExecute(c){return emitWith(c,cellExecuteEvent,{row:row,col:col});};var onClick=function onClick(c,se){se.stop();emitExecute(c);};return build$1({dom:{tag:'div',attributes:_defineProperty({role:'button'},'aria-labelledby',labelId)},behaviours:derive$1([config('insert-table-picker-cell',[run$1(mouseover(),Focusing.focus),run$1(execute$5(),emitExecute),run$1(click(),onClick),run$1(tap(),onClick)]),Toggling.config({toggleClass:'tox-insert-table-picker__selected',toggleOnExecute:false}),Focusing.config({onFocus:emitCellOver})])});};var makeCells=function makeCells(labelId,numRows,numCols){var cells=[];for(var i=0;i<numRows;i++){var row=[];for(var j=0;j<numCols;j++){row.push(makeCell(i,j,labelId));}cells.push(row);}return cells;};var selectCells=function selectCells(cells,selectedRow,selectedColumn,numRows,numColumns){for(var i=0;i<numRows;i++){for(var j=0;j<numColumns;j++){Toggling.set(cells[i][j],i<=selectedRow&&j<=selectedColumn);}}};var makeComponents=function makeComponents(cells){return bind$3(cells,function(cellRow){return map$2(cellRow,premade);});};var makeLabelText=function makeLabelText(row,col){return text$1("".concat(col,"x").concat(row));};var renderInsertTableMenuItem=function renderInsertTableMenuItem(spec){var numRows=10;var numColumns=10;var sizeLabelId=generate$6('size-label');var cells=makeCells(sizeLabelId,numRows,numColumns);var emptyLabelText=makeLabelText(0,0);var memLabel=record({dom:{tag:'span',classes:['tox-insert-table-picker__label'],attributes:{id:sizeLabelId}},components:[emptyLabelText],behaviours:derive$1([Replacing.config({})])});return{type:'widget',data:{value:generate$6('widget-id')},dom:{tag:'div',classes:['tox-fancymenuitem']},autofocus:true,components:[parts$f.widget({dom:{tag:'div',classes:['tox-insert-table-picker']},components:makeComponents(cells).concat(memLabel.asSpec()),behaviours:derive$1([config('insert-table-picker',[runOnAttached(function(c){Replacing.set(memLabel.get(c),[emptyLabelText]);}),runWithTarget(cellOverEvent,function(c,t,e){var _e$event=e.event,row=_e$event.row,col=_e$event.col;selectCells(cells,row,col,numRows,numColumns);Replacing.set(memLabel.get(c),[makeLabelText(row+1,col+1)]);}),runWithTarget(cellExecuteEvent,function(c,_,e){var _e$event2=e.event,row=_e$event2.row,col=_e$event2.col;spec.onAction({numRows:row+1,numColumns:col+1});emit(c,sandboxClose());})]),Keying.config({initSize:{numRows:numRows,numColumns:numColumns},mode:'flatgrid',selector:'[role="button"]'})])})]};};var fancyMenuItems={inserttable:renderInsertTableMenuItem,colorswatch:renderColorSwatchItem};var renderFancyMenuItem=function renderFancyMenuItem(spec,backstage){return get$g(fancyMenuItems,spec.fancytype).map(function(render){return render(spec,backstage);});};var renderNestedItem=function renderNestedItem(spec,itemResponse,providersBackstage){var renderIcons=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var downwardsCaret=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var caret=downwardsCaret?renderDownwardsCaret(providersBackstage.icons):renderSubmenuCaret(providersBackstage.icons);var getApi=function getApi(component){return{isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);}};};var structure=renderItemStructure({presets:'normal',iconContent:spec.icon,textContent:spec.text,htmlContent:Optional.none(),ariaLabel:spec.text,caret:Optional.some(caret),checkMark:Optional.none(),shortcutContent:spec.shortcut},providersBackstage,renderIcons);return renderCommonItem({data:buildData(spec),getApi:getApi,enabled:spec.enabled,onAction:noop,onSetup:spec.onSetup,triggersSubmenu:true,itemBehaviours:[]},structure,itemResponse,providersBackstage);};var renderNormalItem=function renderNormalItem(spec,itemResponse,providersBackstage){var renderIcons=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var getApi=function getApi(component){return{isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);}};};var structure=renderItemStructure({presets:'normal',iconContent:spec.icon,textContent:spec.text,htmlContent:Optional.none(),ariaLabel:spec.text,caret:Optional.none(),checkMark:Optional.none(),shortcutContent:spec.shortcut},providersBackstage,renderIcons);return renderCommonItem({data:buildData(spec),getApi:getApi,enabled:spec.enabled,onAction:spec.onAction,onSetup:spec.onSetup,triggersSubmenu:false,itemBehaviours:[]},structure,itemResponse,providersBackstage);};var renderSeparatorItem=function renderSeparatorItem(spec){return{type:'separator',dom:{tag:'div',classes:[selectableClass,groupHeadingClass]},components:spec.text.map(text$1).toArray()};};var renderToggleMenuItem=function renderToggleMenuItem(spec,itemResponse,providersBackstage){var renderIcons=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var getApi=function getApi(component){return{setActive:function setActive(state){Toggling.set(component,state);},isActive:function isActive(){return Toggling.isOn(component);},isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);}};};var structure=renderItemStructure({iconContent:spec.icon,textContent:spec.text,htmlContent:Optional.none(),ariaLabel:spec.text,checkMark:Optional.some(renderCheckmark(providersBackstage.icons)),caret:Optional.none(),shortcutContent:spec.shortcut,presets:'normal',meta:spec.meta},providersBackstage,renderIcons);return deepMerge(renderCommonItem({data:buildData(spec),enabled:spec.enabled,getApi:getApi,onAction:spec.onAction,onSetup:spec.onSetup,triggersSubmenu:false,itemBehaviours:[]},structure,itemResponse,providersBackstage),{toggling:{toggleClass:tickedClass,toggleOnExecute:false,selected:spec.active}});};var autocomplete=renderAutocompleteItem;var separator$3=renderSeparatorItem;var normal=renderNormalItem;var nested=renderNestedItem;var toggle$1=renderToggleMenuItem;var fancy=renderFancyMenuItem;var card=renderCardMenuItem;var FocusMode;(function(FocusMode){FocusMode[FocusMode['ContentFocus']=0]='ContentFocus';FocusMode[FocusMode['UiFocus']=1]='UiFocus';})(FocusMode||(FocusMode={}));var createMenuItemFromBridge=function createMenuItemFromBridge(item,itemResponse,backstage,menuHasIcons,isHorizontalMenu){var providersBackstage=backstage.shared.providers;var parseForHorizontalMenu=function parseForHorizontalMenu(menuitem){return!isHorizontalMenu?menuitem:_objectSpread({},menuitem,{shortcut:Optional.none(),icon:menuitem.text.isSome()?Optional.none():menuitem.icon});};switch(item.type){case'menuitem':return createMenuItem(item).fold(handleError,function(d){return Optional.some(normal(parseForHorizontalMenu(d),itemResponse,providersBackstage,menuHasIcons));});case'nestedmenuitem':return createNestedMenuItem(item).fold(handleError,function(d){return Optional.some(nested(parseForHorizontalMenu(d),itemResponse,providersBackstage,menuHasIcons,isHorizontalMenu));});case'togglemenuitem':return createToggleMenuItem(item).fold(handleError,function(d){return Optional.some(toggle$1(parseForHorizontalMenu(d),itemResponse,providersBackstage,menuHasIcons));});case'separator':return createSeparatorMenuItem(item).fold(handleError,function(d){return Optional.some(separator$3(d));});case'fancymenuitem':return createFancyMenuItem(item).fold(handleError,function(d){return fancy(parseForHorizontalMenu(d),backstage);});default:{console.error('Unknown item in general menu',item);return Optional.none();}}};var createAutocompleteItems=function createAutocompleteItems(items,matchText,onItemValueHandler,columns,itemResponse,sharedBackstage,highlightOn){var renderText=columns===1;var renderIcons=!renderText||menuHasIcons(items);return cat(map$2(items,function(item){switch(item.type){case'separator':return createSeparatorItem(item).fold(handleError,function(d){return Optional.some(separator$3(d));});case'cardmenuitem':return createCardMenuItem(item).fold(handleError,function(d){return Optional.some(card(_objectSpread({},d,{onAction:function onAction(api){d.onAction(api);onItemValueHandler(d.value,d.meta);}}),itemResponse,sharedBackstage,{itemBehaviours:tooltipBehaviour(d.meta,sharedBackstage),cardText:{matchText:matchText,highlightOn:highlightOn}}));});case'autocompleteitem':default:return createAutocompleterItem(item).fold(handleError,function(d){return Optional.some(autocomplete(d,matchText,renderText,'normal',onItemValueHandler,itemResponse,sharedBackstage,renderIcons));});}}));};var createPartialMenu=function createPartialMenu(value,items,itemResponse,backstage,isHorizontalMenu){var hasIcons=menuHasIcons(items);var alloyItems=cat(map$2(items,function(item){var itemHasIcon=function itemHasIcon(i){return isHorizontalMenu?!has$2(i,'text'):hasIcons;};var createItem=function createItem(i){return createMenuItemFromBridge(i,itemResponse,backstage,itemHasIcon(i),isHorizontalMenu);};if(item.type==='nestedmenuitem'&&item.getSubmenuItems().length<=0){return createItem(_objectSpread({},item,{enabled:false}));}else{return createItem(item);}}));var createPartial=isHorizontalMenu?createHorizontalPartialMenuWithAlloyItems:createPartialMenuWithAlloyItems;return createPartial(value,hasIcons,alloyItems,1,'normal');};var createTieredDataFrom=function createTieredDataFrom(partialMenu){return tieredMenu.singleData(partialMenu.value,partialMenu);};var createInlineMenuFrom=function createInlineMenuFrom(partialMenu,columns,focusMode,presets){var movement=deriveMenuMovement(columns,presets);var menuMarkers=markers(presets);return{data:createTieredDataFrom(_objectSpread({},partialMenu,{movement:movement,menuBehaviours:SimpleBehaviours.unnamedEvents(columns!=='auto'?[]:[runOnAttached(function(comp,_se){detectSize(comp,4,menuMarkers.item).each(function(_ref5){var numColumns=_ref5.numColumns,numRows=_ref5.numRows;Keying.setGridSize(comp,numRows,numColumns);});})])})),menu:{markers:markers(presets),fakeFocus:focusMode===FocusMode.ContentFocus}};};var getAutocompleterRange=function getAutocompleterRange(dom,initRange){return detect(SugarElement.fromDom(initRange.startContainer)).map(function(elm){var range=dom.createRng();range.selectNode(elm.dom);return range;});};var register$b=function register$b(editor,sharedBackstage){var processingAction=Cell(false);var activeState=Cell(false);var autocompleter=build$1(InlineView.sketch({dom:{tag:'div',classes:['tox-autocompleter']},components:[],fireDismissalEventInstead:{},inlineBehaviours:derive$1([config('dismissAutocompleter',[run$1(dismissRequested(),function(){return cancelIfNecessary();})])]),lazySink:sharedBackstage.getSink}));var isMenuOpen=function isMenuOpen(){return InlineView.isOpen(autocompleter);};var isActive=activeState.get;var hideIfNecessary=function hideIfNecessary(){if(isMenuOpen()){InlineView.hide(autocompleter);}};var getMenu=function getMenu(){return InlineView.getContent(autocompleter).bind(function(tmenu){return get$h(tmenu.components(),0);});};var cancelIfNecessary=function cancelIfNecessary(){return editor.execCommand('mceAutocompleterClose');};var getCombinedItems=function getCombinedItems(matches){var columns=findMap(matches,function(m){return Optional.from(m.columns);}).getOr(1);return bind$3(matches,function(match){var choices=match.items;return createAutocompleteItems(choices,match.matchText,function(itemValue,itemMeta){var nr=editor.selection.getRng();getAutocompleterRange(editor.dom,nr).each(function(range){var autocompleterApi={hide:function hide(){return cancelIfNecessary();},reload:function reload(fetchOptions){hideIfNecessary();editor.execCommand('mceAutocompleterReload',false,{fetchOptions:fetchOptions});}};processingAction.set(true);match.onAction(autocompleterApi,range,itemValue,itemMeta);processingAction.set(false);});},columns,ItemResponse$1.BUBBLE_TO_SANDBOX,sharedBackstage,match.highlightOn);});};var display=function display(lookupData,items){findIn(SugarElement.fromDom(editor.getBody())).each(function(element){var columns=findMap(lookupData,function(ld){return Optional.from(ld.columns);}).getOr(1);InlineView.showMenuAt(autocompleter,{anchor:{type:'node',root:SugarElement.fromDom(editor.getBody()),node:Optional.from(element)}},createInlineMenuFrom(createPartialMenuWithAlloyItems('autocompleter-value',true,items,columns,'normal'),columns,FocusMode.ContentFocus,'normal'));});getMenu().each(Highlighting.highlightFirst);};var updateDisplay=function updateDisplay(lookupData){var combinedItems=getCombinedItems(lookupData);if(combinedItems.length>0){display(lookupData,combinedItems);}else{hideIfNecessary();}};editor.on('AutocompleterStart',function(_ref6){var lookupData=_ref6.lookupData;activeState.set(true);processingAction.set(false);updateDisplay(lookupData);});editor.on('AutocompleterUpdate',function(_ref7){var lookupData=_ref7.lookupData;return updateDisplay(lookupData);});editor.on('AutocompleterEnd',function(){hideIfNecessary();activeState.set(false);processingAction.set(false);});var autocompleterUiApi={cancelIfNecessary:cancelIfNecessary,isMenuOpen:isMenuOpen,isActive:isActive,isProcessingAction:processingAction.get,getMenu:getMenu};AutocompleterEditorEvents.setup(autocompleterUiApi,editor);};var Autocompleter={register:register$b};var closest=function closest(scope,selector,isRoot){return closest$1(scope,selector,isRoot).isSome();};var DelayedFunction=function DelayedFunction(fun,delay){var ref=null;var schedule=function schedule(){for(var _len14=arguments.length,args=new Array(_len14),_key15=0;_key15<_len14;_key15++){args[_key15]=arguments[_key15];}ref=setTimeout(function(){fun.apply(null,args);ref=null;},delay);};var cancel=function cancel(){if(ref!==null){clearTimeout(ref);ref=null;}};return{cancel:cancel,schedule:schedule};};var SIGNIFICANT_MOVE=5;var LONGPRESS_DELAY=400;var getTouch=function getTouch(event){var raw=event.raw;if(raw.touches===undefined||raw.touches.length!==1){return Optional.none();}return Optional.some(raw.touches[0]);};var isFarEnough=function isFarEnough(touch,data){var distX=Math.abs(touch.clientX-data.x);var distY=Math.abs(touch.clientY-data.y);return distX>SIGNIFICANT_MOVE||distY>SIGNIFICANT_MOVE;};var monitor=function monitor(settings){var startData=value$2();var longpressFired=Cell(false);var longpress$1=DelayedFunction(function(event){settings.triggerEvent(longpress(),event);longpressFired.set(true);},LONGPRESS_DELAY);var handleTouchstart=function handleTouchstart(event){getTouch(event).each(function(touch){longpress$1.cancel();var data={x:touch.clientX,y:touch.clientY,target:event.target};longpress$1.schedule(event);longpressFired.set(false);startData.set(data);});return Optional.none();};var handleTouchmove=function handleTouchmove(event){longpress$1.cancel();getTouch(event).each(function(touch){startData.on(function(data){if(isFarEnough(touch,data)){startData.clear();}});});return Optional.none();};var handleTouchend=function handleTouchend(event){longpress$1.cancel();var isSame=function isSame(data){return eq(data.target,event.target);};return startData.get().filter(isSame).map(function(_data){if(longpressFired.get()){event.prevent();return false;}else{return settings.triggerEvent(tap(),event);}});};var handlers=wrapAll([{key:touchstart(),value:handleTouchstart},{key:touchmove(),value:handleTouchmove},{key:touchend(),value:handleTouchend}]);var fireIfReady=function fireIfReady(event,type){return get$g(handlers,type).bind(function(handler){return handler(event);});};return{fireIfReady:fireIfReady};};var isDangerous=function isDangerous(event){var keyEv=event.raw;return keyEv.which===BACKSPACE[0]&&!contains$2(['input','textarea'],name$3(event.target))&&!closest(event.target,'[contenteditable="true"]');};var setup$d=function setup$d(container,rawSettings){var settings=_objectSpread({stopBackspace:true},rawSettings);var pointerEvents=['touchstart','touchmove','touchend','touchcancel','gesturestart','mousedown','mouseup','mouseover','mousemove','mouseout','click'];var tapEvent=monitor(settings);var simpleEvents=map$2(pointerEvents.concat(['selectstart','input','contextmenu','change','transitionend','transitioncancel','drag','dragstart','dragend','dragenter','dragleave','dragover','drop','keyup']),function(type){return bind(container,type,function(event){tapEvent.fireIfReady(event,type).each(function(tapStopped){if(tapStopped){event.kill();}});var stopped=settings.triggerEvent(type,event);if(stopped){event.kill();}});});var pasteTimeout=value$2();var onPaste=bind(container,'paste',function(event){tapEvent.fireIfReady(event,'paste').each(function(tapStopped){if(tapStopped){event.kill();}});var stopped=settings.triggerEvent('paste',event);if(stopped){event.kill();}pasteTimeout.set(setTimeout(function(){settings.triggerEvent(postPaste(),event);},0));});var onKeydown=bind(container,'keydown',function(event){var stopped=settings.triggerEvent('keydown',event);if(stopped){event.kill();}else if(settings.stopBackspace&&isDangerous(event)){event.prevent();}});var onFocusIn=bind(container,'focusin',function(event){var stopped=settings.triggerEvent('focusin',event);if(stopped){event.kill();}});var focusoutTimeout=value$2();var onFocusOut=bind(container,'focusout',function(event){var stopped=settings.triggerEvent('focusout',event);if(stopped){event.kill();}focusoutTimeout.set(setTimeout(function(){settings.triggerEvent(postBlur(),event);},0));});var unbind=function unbind(){each$1(simpleEvents,function(e){e.unbind();});onKeydown.unbind();onFocusIn.unbind();onFocusOut.unbind();onPaste.unbind();pasteTimeout.on(clearTimeout);focusoutTimeout.on(clearTimeout);};return{unbind:unbind};};var derive=function derive(rawEvent,rawTarget){var source=get$g(rawEvent,'target').getOr(rawTarget);return Cell(source);};var fromSource=function fromSource(event,source){var stopper=Cell(false);var cutter=Cell(false);var stop=function stop(){stopper.set(true);};var cut=function cut(){cutter.set(true);};return{stop:stop,cut:cut,isStopped:stopper.get,isCut:cutter.get,event:event,setSource:source.set,getSource:source.get};};var fromExternal=function fromExternal(event){var stopper=Cell(false);var stop=function stop(){stopper.set(true);};return{stop:stop,cut:noop,isStopped:stopper.get,isCut:never,event:event,setSource:die('Cannot set source of a broadcasted event'),getSource:die('Cannot get source of a broadcasted event')};};var adt$1=Adt.generate([{stopped:[]},{resume:['element']},{complete:[]}]);var doTriggerHandler=function doTriggerHandler(lookup,eventType,rawEvent,target,source,logger){var handler=lookup(eventType,target);var simulatedEvent=fromSource(rawEvent,source);return handler.fold(function(){logger.logEventNoHandlers(eventType,target);return adt$1.complete();},function(handlerInfo){var descHandler=handlerInfo.descHandler;var eventHandler=getCurried(descHandler);eventHandler(simulatedEvent);if(simulatedEvent.isStopped()){logger.logEventStopped(eventType,handlerInfo.element,descHandler.purpose);return adt$1.stopped();}else if(simulatedEvent.isCut()){logger.logEventCut(eventType,handlerInfo.element,descHandler.purpose);return adt$1.complete();}else{return parent(handlerInfo.element).fold(function(){logger.logNoParent(eventType,handlerInfo.element,descHandler.purpose);return adt$1.complete();},function(parent){logger.logEventResponse(eventType,handlerInfo.element,descHandler.purpose);return adt$1.resume(parent);});}});};var doTriggerOnUntilStopped=function doTriggerOnUntilStopped(lookup,eventType,rawEvent,rawTarget,source,logger){return doTriggerHandler(lookup,eventType,rawEvent,rawTarget,source,logger).fold(always,function(parent){return doTriggerOnUntilStopped(lookup,eventType,rawEvent,parent,source,logger);},never);};var triggerHandler=function triggerHandler(lookup,eventType,rawEvent,target,logger){var source=derive(rawEvent,target);return doTriggerHandler(lookup,eventType,rawEvent,target,source,logger);};var broadcast=function broadcast(listeners,rawEvent,_logger){var simulatedEvent=fromExternal(rawEvent);each$1(listeners,function(listener){var descHandler=listener.descHandler;var handler=getCurried(descHandler);handler(simulatedEvent);});return simulatedEvent.isStopped();};var triggerUntilStopped=function triggerUntilStopped(lookup,eventType,rawEvent,logger){return triggerOnUntilStopped(lookup,eventType,rawEvent,rawEvent.target,logger);};var triggerOnUntilStopped=function triggerOnUntilStopped(lookup,eventType,rawEvent,rawTarget,logger){var source=derive(rawEvent,rawTarget);return doTriggerOnUntilStopped(lookup,eventType,rawEvent,rawTarget,source,logger);};var eventHandler=function eventHandler(element,descHandler){return{element:element,descHandler:descHandler};};var broadcastHandler=function broadcastHandler(id,handler){return{id:id,descHandler:handler};};var EventRegistry=function EventRegistry(){var registry={};var registerId=function registerId(extraArgs,id,events){each(events,function(v,k){var handlers=registry[k]!==undefined?registry[k]:{};handlers[id]=curryArgs(v,extraArgs);registry[k]=handlers;});};var findHandler=function findHandler(handlers,elem){return read$1(elem).bind(function(id){return get$g(handlers,id);}).map(function(descHandler){return eventHandler(elem,descHandler);});};var filterByType=function filterByType(type){return get$g(registry,type).map(function(handlers){return mapToArray(handlers,function(f,id){return broadcastHandler(id,f);});}).getOr([]);};var find=function find(isAboveRoot,type,target){return get$g(registry,type).bind(function(handlers){return closest$4(target,function(elem){return findHandler(handlers,elem);},isAboveRoot);});};var unregisterId=function unregisterId(id){each(registry,function(handlersById,_eventName){if(has$2(handlersById,id)){delete handlersById[id];}});};return{registerId:registerId,unregisterId:unregisterId,filterByType:filterByType,find:find};};var Registry=function Registry(){var events=EventRegistry();var components={};var readOrTag=function readOrTag(component){var elem=component.element;return read$1(elem).getOrThunk(function(){return write('uid-',component.element);});};var failOnDuplicate=function failOnDuplicate(component,tagId){var conflict=components[tagId];if(conflict===component){unregister(component);}else{throw new Error('The tagId "'+tagId+'" is already used by: '+element(conflict.element)+'\nCannot use it for: '+element(component.element)+'\n'+'The conflicting element is'+(inBody(conflict.element)?' ':' not ')+'already in the DOM');}};var register=function register(component){var tagId=readOrTag(component);if(hasNonNullableKey(components,tagId)){failOnDuplicate(component,tagId);}var extraArgs=[component];events.registerId(extraArgs,tagId,component.events);components[tagId]=component;};var unregister=function unregister(component){read$1(component.element).each(function(tagId){delete components[tagId];events.unregisterId(tagId);});};var filter=function filter(type){return events.filterByType(type);};var find=function find(isAboveRoot,type,target){return events.find(isAboveRoot,type,target);};var getById=function getById(id){return get$g(components,id);};return{find:find,filter:filter,register:register,unregister:unregister,getById:getById};};var factory$j=function factory$j(detail){var _detail$dom=detail.dom,attributes=_detail$dom.attributes,domWithoutAttributes=_objectWithoutProperties(_detail$dom,["attributes"]);return{uid:detail.uid,dom:_objectSpread({tag:'div',attributes:_objectSpread({role:'presentation'},attributes)},domWithoutAttributes),components:detail.components,behaviours:get$3(detail.containerBehaviours),events:detail.events,domModification:detail.domModification,eventOrder:detail.eventOrder};};var Container=single({name:'Container',factory:factory$j,configFields:[defaulted('components',[]),field('containerBehaviours',[]),defaulted('events',{}),defaulted('domModification',{}),defaulted('eventOrder',{})]});var takeover=function takeover(root){var isAboveRoot=function isAboveRoot(el){return parent(root.element).fold(always,function(parent){return eq(el,parent);});};var registry=Registry();var lookup=function lookup(eventName,target){return registry.find(isAboveRoot,eventName,target);};var domEvents=setup$d(root.element,{triggerEvent:function triggerEvent(eventName,event){return monitorEvent(eventName,event.target,function(logger){return triggerUntilStopped(lookup,eventName,event,logger);});}});var systemApi={debugInfo:constant$1('real'),triggerEvent:function triggerEvent(eventName,target,data){monitorEvent(eventName,target,function(logger){return triggerOnUntilStopped(lookup,eventName,data,target,logger);});},triggerFocus:function triggerFocus(target,originator){read$1(target).fold(function(){focus$3(target);},function(_alloyId){monitorEvent(focus$4(),target,function(logger){triggerHandler(lookup,focus$4(),{originator:originator,kill:noop,prevent:noop,target:target},target,logger);return false;});});},triggerEscape:function triggerEscape(comp,simulatedEvent){systemApi.triggerEvent('keydown',comp.element,simulatedEvent.event);},getByUid:function getByUid(uid){return _getByUid(uid);},getByDom:function getByDom(elem){return _getByDom(elem);},build:build$1,buildOrPatch:buildOrPatch,addToGui:function addToGui(c){add(c);},removeFromGui:function removeFromGui(c){remove(c);},addToWorld:function addToWorld(c){_addToWorld(c);},removeFromWorld:function removeFromWorld(c){_removeFromWorld(c);},broadcast:function broadcast(message){broadcast$1(message);},broadcastOn:function broadcastOn(channels,message){_broadcastOn(channels,message);},broadcastEvent:function broadcastEvent(eventName,event){_broadcastEvent(eventName,event);},isConnected:always};var _addToWorld=function _addToWorld(component){component.connect(systemApi);if(!isText(component.element)){registry.register(component);each$1(component.components(),_addToWorld);systemApi.triggerEvent(systemInit(),component.element,{target:component.element});}};var _removeFromWorld=function _removeFromWorld(component){if(!isText(component.element)){each$1(component.components(),_removeFromWorld);registry.unregister(component);}component.disconnect();};var add=function add(component){attach(root,component);};var remove=function remove(component){detach(component);};var destroy=function destroy(){domEvents.unbind();remove$5(root.element);};var broadcastData=function broadcastData(data){var receivers=registry.filter(receive());each$1(receivers,function(receiver){var descHandler=receiver.descHandler;var handler=getCurried(descHandler);handler(data);});};var broadcast$1=function broadcast$1(message){broadcastData({universal:true,data:message});};var _broadcastOn=function _broadcastOn(channels,message){broadcastData({universal:false,channels:channels,data:message});};var _broadcastEvent=function _broadcastEvent(eventName,event){var listeners=registry.filter(eventName);return broadcast(listeners,event);};var _getByUid=function _getByUid(uid){return registry.getById(uid).fold(function(){return Result.error(new Error('Could not find component with uid: "'+uid+'" in system.'));},Result.value);};var _getByDom=function _getByDom(elem){var uid=read$1(elem).getOr('not found');return _getByUid(uid);};_addToWorld(root);return{root:root,element:root.element,destroy:destroy,add:add,remove:remove,getByUid:_getByUid,getByDom:_getByDom,addToWorld:_addToWorld,removeFromWorld:_removeFromWorld,broadcast:broadcast$1,broadcastOn:_broadcastOn,broadcastEvent:_broadcastEvent};};var renderBar=function renderBar(spec,backstage){return{dom:{tag:'div',classes:['tox-bar','tox-form__controls-h-stack']},components:map$2(spec.items,backstage.interpreter)};};var schema$l=constant$1([defaulted('prefix','form-field'),field('fieldBehaviours',[Composing,Representing])]);var parts$e=constant$1([optional({schema:[required$1('dom')],name:'label'}),optional({factory:{sketch:function sketch(spec){return{uid:spec.uid,dom:{tag:'span',styles:{display:'none'},attributes:{'aria-hidden':'true'},innerHtml:spec.text}};}},schema:[required$1('text')],name:'aria-descriptor'}),required({factory:{sketch:function sketch(spec){var excludeFactory=exclude(spec,['factory']);return spec.factory.sketch(excludeFactory);}},schema:[required$1('factory')],name:'field'})]);var factory$i=function factory$i(detail,components,_spec,_externals){var behaviours=augment(detail.fieldBehaviours,[Composing.config({find:function find(container){return getPart(container,detail,'field');}}),Representing.config({store:{mode:'manual',getValue:function getValue(field){return Composing.getCurrent(field).bind(Representing.getValue);},setValue:function setValue(field,value){Composing.getCurrent(field).each(function(current){Representing.setValue(current,value);});}}})]);var events=derive$2([runOnAttached(function(component,_simulatedEvent){var ps=getParts(component,detail,['label','field','aria-descriptor']);ps.field().each(function(field){var id=generate$6(detail.prefix);ps.label().each(function(label){set$9(label.element,'for',id);set$9(field.element,'id',id);});ps['aria-descriptor']().each(function(descriptor){var descriptorId=generate$6(detail.prefix);set$9(descriptor.element,'id',descriptorId);set$9(field.element,'aria-describedby',descriptorId);});});})]);var apis={getField:function getField(container){return getPart(container,detail,'field');},getLabel:function getLabel(container){return getPart(container,detail,'label');}};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:behaviours,events:events,apis:apis};};var FormField=composite({name:'FormField',configFields:schema$l(),partFields:parts$e(),factory:factory$i,apis:{getField:function getField(apis,comp){return apis.getField(comp);},getLabel:function getLabel(apis,comp){return apis.getLabel(comp);}}});var exhibit$2=function exhibit$2(base,tabConfig){return nu$7({attributes:wrapAll([{key:tabConfig.tabAttr,value:'true'}])});};var ActiveTabstopping=/*#__PURE__*/Object.freeze({__proto__:null,exhibit:exhibit$2});var TabstopSchema=[defaulted('tabAttr','data-alloy-tabstop')];var Tabstopping=create$3({fields:TabstopSchema,name:'tabstopping',active:ActiveTabstopping});var global$3=tinymce.util.Tools.resolve('tinymce.html.Entities');var renderFormFieldWith=function renderFormFieldWith(pLabel,pField,extraClasses,extraBehaviours){var spec=renderFormFieldSpecWith(pLabel,pField,extraClasses,extraBehaviours);return FormField.sketch(spec);};var renderFormField=function renderFormField(pLabel,pField){return renderFormFieldWith(pLabel,pField,[],[]);};var renderFormFieldSpecWith=function renderFormFieldSpecWith(pLabel,pField,extraClasses,extraBehaviours){return{dom:renderFormFieldDomWith(extraClasses),components:pLabel.toArray().concat([pField]),fieldBehaviours:derive$1(extraBehaviours)};};var renderFormFieldDom=function renderFormFieldDom(){return renderFormFieldDomWith([]);};var renderFormFieldDomWith=function renderFormFieldDomWith(extraClasses){return{tag:'div',classes:['tox-form__group'].concat(extraClasses)};};var renderLabel$2=function renderLabel$2(label,providersBackstage){return FormField.parts.label({dom:{tag:'label',classes:['tox-label']},components:[text$1(providersBackstage.translate(label))]});};var formChangeEvent=generate$6('form-component-change');var formCloseEvent=generate$6('form-close');var formCancelEvent=generate$6('form-cancel');var formActionEvent=generate$6('form-action');var formSubmitEvent=generate$6('form-submit');var formBlockEvent=generate$6('form-block');var formUnblockEvent=generate$6('form-unblock');var formTabChangeEvent=generate$6('form-tabchange');var formResizeEvent=generate$6('form-resize');var renderCollection=function renderCollection(spec,providersBackstage,initialData){var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var runOnItem=function runOnItem(f){return function(comp,se){closest$1(se.event.target,'[data-collection-item-value]').each(function(target){f(comp,se,target,get$f(target,'data-collection-item-value'));});};};var setContents=function setContents(comp,items){var htmlLines=map$2(items,function(item){var itemText=global$8.translate(item.text);var textContent=spec.columns===1?"<div class=\"tox-collection__item-label\">".concat(itemText,"</div>"):'';var iconContent="<div class=\"tox-collection__item-icon\">".concat(item.icon,"</div>");var mapItemName={'_':' ',' - ':' ','-':' '};var ariaLabel=itemText.replace(/\_| \- |\-/g,function(match){return mapItemName[match];});var disabledClass=providersBackstage.isDisabled()?' tox-collection__item--state-disabled':'';return"<div class=\"tox-collection__item".concat(disabledClass,"\" tabindex=\"-1\" data-collection-item-value=\"").concat(global$3.encodeAllRaw(item.value),"\" title=\"").concat(ariaLabel,"\" aria-label=\"").concat(ariaLabel,"\">").concat(iconContent).concat(textContent,"</div>");});var chunks=spec.columns!=='auto'&&spec.columns>1?chunk$1(htmlLines,spec.columns):[htmlLines];var html=map$2(chunks,function(ch){return"<div class=\"tox-collection__group\">".concat(ch.join(''),"</div>");});set$6(comp.element,html.join(''));};var onClick=runOnItem(function(comp,se,tgt,itemValue){se.stop();if(!providersBackstage.isDisabled()){emitWith(comp,formActionEvent,{name:spec.name,value:itemValue});}});var collectionEvents=[run$1(mouseover(),runOnItem(function(comp,se,tgt){focus$3(tgt);})),run$1(click(),onClick),run$1(tap(),onClick),run$1(focusin(),runOnItem(function(comp,se,tgt){descendant(comp.element,'.'+activeClass).each(function(currentActive){remove$2(currentActive,activeClass);});add$2(tgt,activeClass);})),run$1(focusout(),runOnItem(function(comp){descendant(comp.element,'.'+activeClass).each(function(currentActive){remove$2(currentActive,activeClass);});})),runOnExecute$1(runOnItem(function(comp,se,tgt,itemValue){emitWith(comp,formActionEvent,{name:spec.name,value:itemValue});}))];var iterCollectionItems=function iterCollectionItems(comp,applyAttributes){return map$2(descendants(comp.element,'.tox-collection__item'),applyAttributes);};var pField=FormField.parts.field({dom:{tag:'div',classes:['tox-collection'].concat(spec.columns!==1?['tox-collection--grid']:['tox-collection--list'])},components:[],factory:{sketch:identity},behaviours:derive$1([Disabling.config({disabled:providersBackstage.isDisabled,onDisabled:function onDisabled(comp){iterCollectionItems(comp,function(childElm){add$2(childElm,'tox-collection__item--state-disabled');set$9(childElm,'aria-disabled',true);});},onEnabled:function onEnabled(comp){iterCollectionItems(comp,function(childElm){remove$2(childElm,'tox-collection__item--state-disabled');remove$7(childElm,'aria-disabled');});}}),receivingConfig(),Replacing.config({}),Representing.config({store:{mode:'memory',initialValue:initialData.getOr([])},onSetValue:function onSetValue(comp,items){setContents(comp,items);if(spec.columns==='auto'){detectSize(comp,5,'tox-collection__item').each(function(_ref8){var numRows=_ref8.numRows,numColumns=_ref8.numColumns;Keying.setGridSize(comp,numRows,numColumns);});}emit(comp,formResizeEvent);}}),Tabstopping.config({}),Keying.config(deriveCollectionMovement(spec.columns,'normal')),config('collection-events',collectionEvents)]),eventOrder:_defineProperty({},execute$5(),['disabling','alloy.base.behaviour','collection-events'])});var extraClasses=['tox-form__group--collection'];return renderFormFieldWith(pLabel,pField,extraClasses,[]);};var schema$k=constant$1([option$3('data'),defaulted('inputAttributes',{}),defaulted('inputStyles',{}),defaulted('tag','input'),defaulted('inputClasses',[]),onHandler('onSetValue'),defaulted('styles',{}),defaulted('eventOrder',{}),field('inputBehaviours',[Representing,Focusing]),defaulted('selectOnFocus',true)]);var focusBehaviours=function focusBehaviours(detail){return derive$1([Focusing.config({onFocus:!detail.selectOnFocus?noop:function(component){var input=component.element;var value=get$6(input);input.dom.setSelectionRange(0,value.length);}})]);};var behaviours=function behaviours(detail){return _objectSpread({},focusBehaviours(detail),{},augment(detail.inputBehaviours,[Representing.config({store:_objectSpread({mode:'manual'},detail.data.map(function(data){return{initialValue:data};}).getOr({}),{getValue:function getValue(input){return get$6(input.element);},setValue:function setValue(input,data){var current=get$6(input.element);if(current!==data){set$5(input.element,data);}}}),onSetValue:detail.onSetValue})]));};var dom=function dom(detail){return{tag:detail.tag,attributes:_objectSpread({type:'text'},detail.inputAttributes),styles:detail.inputStyles,classes:detail.inputClasses};};var factory$h=function factory$h(detail,_spec){return{uid:detail.uid,dom:dom(detail),components:[],behaviours:behaviours(detail),eventOrder:detail.eventOrder};};var Input=single({name:'Input',configFields:schema$k(),factory:factory$h});var nu$3=function nu$3(baseFn){var data=Optional.none();var callbacks=[];var map=function map(f){return nu$3(function(nCallback){get(function(data){nCallback(f(data));});});};var get=function get(nCallback){if(isReady()){call(nCallback);}else{callbacks.push(nCallback);}};var set=function set(x){if(!isReady()){data=Optional.some(x);run(callbacks);callbacks=[];}};var isReady=function isReady(){return data.isSome();};var run=function run(cbs){each$1(cbs,call);};var call=function call(cb){data.each(function(x){setTimeout(function(){cb(x);},0);});};baseFn(set);return{get:get,map:map,isReady:isReady};};var pure$1=function pure$1(a){return nu$3(function(callback){callback(a);});};var LazyValue={nu:nu$3,pure:pure$1};var errorReporter=function errorReporter(err){setTimeout(function(){throw err;},0);};var make$5=function make$5(run){var get=function get(callback){run().then(callback,errorReporter);};var map=function map(fab){return make$5(function(){return run().then(fab);});};var bind=function bind(aFutureB){return make$5(function(){return run().then(function(v){return aFutureB(v).toPromise();});});};var anonBind=function anonBind(futureB){return make$5(function(){return run().then(function(){return futureB.toPromise();});});};var toLazy=function toLazy(){return LazyValue.nu(get);};var toCached=function toCached(){var cache=null;return make$5(function(){if(cache===null){cache=run();}return cache;});};var toPromise=run;return{map:map,bind:bind,anonBind:anonBind,toLazy:toLazy,toCached:toCached,toPromise:toPromise,get:get};};var nu$2=function nu$2(baseFn){return make$5(function(){return new Promise(baseFn);});};var pure=function pure(a){return make$5(function(){return Promise.resolve(a);});};var Future={nu:nu$2,pure:pure};var ariaElements=['input','textarea'];var isAriaElement=function isAriaElement(elem){var name=name$3(elem);return contains$2(ariaElements,name);};var markValid=function markValid(component,invalidConfig){var elem=invalidConfig.getRoot(component).getOr(component.element);remove$2(elem,invalidConfig.invalidClass);invalidConfig.notify.each(function(notifyInfo){if(isAriaElement(component.element)){set$9(component.element,'aria-invalid',false);}notifyInfo.getContainer(component).each(function(container){set$6(container,notifyInfo.validHtml);});notifyInfo.onValid(component);});};var markInvalid=function markInvalid(component,invalidConfig,invalidState,text){var elem=invalidConfig.getRoot(component).getOr(component.element);add$2(elem,invalidConfig.invalidClass);invalidConfig.notify.each(function(notifyInfo){if(isAriaElement(component.element)){set$9(component.element,'aria-invalid',true);}notifyInfo.getContainer(component).each(function(container){set$6(container,text);});notifyInfo.onInvalid(component,text);});};var query=function query(component,invalidConfig,_invalidState){return invalidConfig.validator.fold(function(){return Future.pure(Result.value(true));},function(validatorInfo){return validatorInfo.validate(component);});};var run=function run(component,invalidConfig,invalidState){invalidConfig.notify.each(function(notifyInfo){notifyInfo.onValidate(component);});return query(component,invalidConfig).map(function(valid){if(component.getSystem().isConnected()){return valid.fold(function(err){markInvalid(component,invalidConfig,invalidState,err);return Result.error(err);},function(v){markValid(component,invalidConfig);return Result.value(v);});}else{return Result.error('No longer in system');}});};var isInvalid=function isInvalid(component,invalidConfig){var elem=invalidConfig.getRoot(component).getOr(component.element);return has(elem,invalidConfig.invalidClass);};var InvalidateApis=/*#__PURE__*/Object.freeze({__proto__:null,markValid:markValid,markInvalid:markInvalid,query:query,run:run,isInvalid:isInvalid});var events$8=function events$8(invalidConfig,invalidState){return invalidConfig.validator.map(function(validatorInfo){return derive$2([run$1(validatorInfo.onEvent,function(component){run(component,invalidConfig,invalidState).get(identity);})].concat(validatorInfo.validateOnLoad?[runOnAttached(function(component){run(component,invalidConfig,invalidState).get(noop);})]:[]));}).getOr({});};var ActiveInvalidate=/*#__PURE__*/Object.freeze({__proto__:null,events:events$8});var InvalidateSchema=[required$1('invalidClass'),defaulted('getRoot',Optional.none),optionObjOf('notify',[defaulted('aria','alert'),defaulted('getContainer',Optional.none),defaulted('validHtml',''),onHandler('onValid'),onHandler('onInvalid'),onHandler('onValidate')]),optionObjOf('validator',[required$1('validate'),defaulted('onEvent','input'),defaulted('validateOnLoad',true)])];var Invalidating=create$3({fields:InvalidateSchema,name:'invalidating',active:ActiveInvalidate,apis:InvalidateApis,extra:{validation:function validation(validator){return function(component){var v=Representing.getValue(component);return Future.pure(validator(v));};}}});var getCoupled=function getCoupled(component,coupleConfig,coupleState,name){return coupleState.getOrCreate(component,coupleConfig,name);};var CouplingApis=/*#__PURE__*/Object.freeze({__proto__:null,getCoupled:getCoupled});var CouplingSchema=[requiredOf('others',setOf(Result.value,anyValue()))];var init$a=function init$a(){var coupled={};var getOrCreate=function getOrCreate(component,coupleConfig,name){var available=keys(coupleConfig.others);if(!available){throw new Error('Cannot find coupled component: '+name+'. Known coupled components: '+JSON.stringify(available,null,2));}else{return get$g(coupled,name).getOrThunk(function(){var builder=get$g(coupleConfig.others,name).getOrDie('No information found for coupled component: '+name);var spec=builder(component);var built=component.getSystem().build(spec);coupled[name]=built;return built;});}};var readState=constant$1({});return nu$8({readState:readState,getOrCreate:getOrCreate});};var CouplingState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$a});var Coupling=create$3({fields:CouplingSchema,name:'coupling',apis:CouplingApis,state:CouplingState});var suffix=constant$1('sink');var partType$1=constant$1(optional({name:suffix(),overrides:constant$1({dom:{tag:'div'},behaviours:derive$1([Positioning.config({useFixed:always})]),events:derive$2([cutter(keydown()),cutter(mousedown()),cutter(click())])})}));var HighlightOnOpen;(function(HighlightOnOpen){HighlightOnOpen[HighlightOnOpen['HighlightFirst']=0]='HighlightFirst';HighlightOnOpen[HighlightOnOpen['HighlightNone']=1]='HighlightNone';})(HighlightOnOpen||(HighlightOnOpen={}));var getAnchor=function getAnchor(detail,component){var hotspot=detail.getHotspot(component).getOr(component);var type='hotspot';var overrides=detail.getAnchorOverrides();return detail.layouts.fold(function(){return{type:type,hotspot:hotspot,overrides:overrides};},function(layouts){return{type:type,hotspot:hotspot,overrides:overrides,layouts:layouts};});};var fetch=function fetch(detail,mapFetch,component){var fetcher=detail.fetch;return fetcher(component).map(mapFetch);};var openF=function openF(detail,mapFetch,anchor,component,sandbox,externals,highlightOnOpen){var futureData=fetch(detail,mapFetch,component);var getLazySink=getSink(component,detail);return futureData.map(function(tdata){return tdata.bind(function(data){return Optional.from(tieredMenu.sketch(_objectSpread({},externals.menu(),{uid:generate$5(''),data:data,highlightImmediately:highlightOnOpen===HighlightOnOpen.HighlightFirst,onOpenMenu:function onOpenMenu(tmenu,menu){var sink=getLazySink().getOrDie();Positioning.position(sink,menu,{anchor:anchor});Sandboxing.decloak(sandbox);},onOpenSubmenu:function onOpenSubmenu(tmenu,item,submenu){var sink=getLazySink().getOrDie();Positioning.position(sink,submenu,{anchor:{type:'submenu',item:item}});Sandboxing.decloak(sandbox);},onRepositionMenu:function onRepositionMenu(tmenu,primaryMenu,submenuTriggers){var sink=getLazySink().getOrDie();Positioning.position(sink,primaryMenu,{anchor:anchor});each$1(submenuTriggers,function(st){Positioning.position(sink,st.triggeredMenu,{anchor:{type:'submenu',item:st.triggeringItem}});});},onEscape:function onEscape(){Focusing.focus(component);Sandboxing.close(sandbox);return Optional.some(true);}})));});});};var open=function open(detail,mapFetch,hotspot,sandbox,externals,onOpenSync,highlightOnOpen){var anchor=getAnchor(detail,hotspot);var processed=openF(detail,mapFetch,anchor,hotspot,sandbox,externals,highlightOnOpen);return processed.map(function(tdata){tdata.fold(function(){if(Sandboxing.isOpen(sandbox)){Sandboxing.close(sandbox);}},function(data){Sandboxing.cloak(sandbox);Sandboxing.open(sandbox,data);onOpenSync(sandbox);});return sandbox;});};var close=function close(detail,mapFetch,component,sandbox,_externals,_onOpenSync,_highlightOnOpen){Sandboxing.close(sandbox);return Future.pure(sandbox);};var togglePopup=function togglePopup(detail,mapFetch,hotspot,externals,onOpenSync,highlightOnOpen){var sandbox=Coupling.getCoupled(hotspot,'sandbox');var showing=Sandboxing.isOpen(sandbox);var action=showing?close:open;return action(detail,mapFetch,hotspot,sandbox,externals,onOpenSync,highlightOnOpen);};var matchWidth=function matchWidth(hotspot,container,useMinWidth){var menu=Composing.getCurrent(container).getOr(container);var buttonWidth=get$c(hotspot.element);if(useMinWidth){set$8(menu.element,'min-width',buttonWidth+'px');}else{set$7(menu.element,buttonWidth);}};var getSink=function getSink(anyInSystem,sinkDetail){return anyInSystem.getSystem().getByUid(sinkDetail.uid+'-'+suffix()).map(function(internalSink){return function(){return Result.value(internalSink);};}).getOrThunk(function(){return sinkDetail.lazySink.fold(function(){return function(){return Result.error(new Error('No internal sink is specified, nor could an external sink be found'));};},function(lazySinkFn){return function(){return lazySinkFn(anyInSystem);};});});};var doRepositionMenus=function doRepositionMenus(sandbox){Sandboxing.getState(sandbox).each(function(tmenu){tieredMenu.repositionMenus(tmenu);});};var makeSandbox$1=function makeSandbox$1(detail,hotspot,extras){var ariaControls=manager();var onOpen=function onOpen(component,menu){var anchor=getAnchor(detail,hotspot);ariaControls.link(hotspot.element);if(detail.matchWidth){matchWidth(anchor.hotspot,menu,detail.useMinWidth);}detail.onOpen(anchor,component,menu);if(extras!==undefined&&extras.onOpen!==undefined){extras.onOpen(component,menu);}};var onClose=function onClose(component,menu){ariaControls.unlink(hotspot.element);if(extras!==undefined&&extras.onClose!==undefined){extras.onClose(component,menu);}};var lazySink=getSink(hotspot,detail);return{dom:{tag:'div',classes:detail.sandboxClasses,attributes:{id:ariaControls.id,role:'listbox'}},behaviours:SketchBehaviours.augment(detail.sandboxBehaviours,[Representing.config({store:{mode:'memory',initialValue:hotspot}}),Sandboxing.config({onOpen:onOpen,onClose:onClose,isPartOf:function isPartOf(container,data,queryElem){return isPartOf$1(data,queryElem)||isPartOf$1(hotspot,queryElem);},getAttachPoint:function getAttachPoint(){return lazySink().getOrDie();}}),Composing.config({find:function find(sandbox){return Sandboxing.getState(sandbox).bind(function(menu){return Composing.getCurrent(menu);});}}),Receiving.config({channels:_objectSpread({},receivingChannel$1({isExtraPart:never}),{},receivingChannel({doReposition:doRepositionMenus}))})])};};var _repositionMenus=function repositionMenus(comp){var sandbox=Coupling.getCoupled(comp,'sandbox');doRepositionMenus(sandbox);};var sandboxFields=function sandboxFields(){return[defaulted('sandboxClasses',[]),SketchBehaviours.field('sandboxBehaviours',[Composing,Receiving,Sandboxing,Representing])];};var schema$j=constant$1([required$1('dom'),required$1('fetch'),onHandler('onOpen'),onKeyboardHandler('onExecute'),defaulted('getHotspot',Optional.some),defaulted('getAnchorOverrides',constant$1({})),schema$y(),field('dropdownBehaviours',[Toggling,Coupling,Keying,Focusing]),required$1('toggleClass'),defaulted('eventOrder',{}),option$3('lazySink'),defaulted('matchWidth',false),defaulted('useMinWidth',false),option$3('role')].concat(sandboxFields()));var parts$d=constant$1([external({schema:[tieredMenuMarkers()],name:'menu',defaults:function defaults(detail){return{onExecute:detail.onExecute};}}),partType$1()]);var factory$g=function factory$g(detail,components,_spec,externals){var lookupAttr=function lookupAttr(attr){return get$g(detail.dom,'attributes').bind(function(attrs){return get$g(attrs,attr);});};var switchToMenu=function switchToMenu(sandbox){Sandboxing.getState(sandbox).each(function(tmenu){tieredMenu.highlightPrimary(tmenu);});};var action=function action(component){var onOpenSync=switchToMenu;togglePopup(detail,identity,component,externals,onOpenSync,HighlightOnOpen.HighlightFirst).get(noop);};var apis={expand:function expand(comp){if(!Toggling.isOn(comp)){togglePopup(detail,identity,comp,externals,noop,HighlightOnOpen.HighlightNone).get(noop);}},open:function open(comp){if(!Toggling.isOn(comp)){togglePopup(detail,identity,comp,externals,noop,HighlightOnOpen.HighlightFirst).get(noop);}},isOpen:Toggling.isOn,close:function close(comp){if(Toggling.isOn(comp)){togglePopup(detail,identity,comp,externals,noop,HighlightOnOpen.HighlightFirst).get(noop);}},repositionMenus:function repositionMenus(comp){if(Toggling.isOn(comp)){_repositionMenus(comp);}}};var triggerExecute=function triggerExecute(comp,_se){emitExecute(comp);return Optional.some(true);};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.dropdownBehaviours,[Toggling.config({toggleClass:detail.toggleClass,aria:{mode:'expanded'}}),Coupling.config({others:{sandbox:function sandbox(hotspot){return makeSandbox$1(detail,hotspot,{onOpen:function onOpen(){return Toggling.on(hotspot);},onClose:function onClose(){return Toggling.off(hotspot);}});}}}),Keying.config({mode:'special',onSpace:triggerExecute,onEnter:triggerExecute,onDown:function onDown(comp,_se){if(Dropdown.isOpen(comp)){var sandbox=Coupling.getCoupled(comp,'sandbox');switchToMenu(sandbox);}else{Dropdown.open(comp);}return Optional.some(true);},onEscape:function onEscape(comp,_se){if(Dropdown.isOpen(comp)){Dropdown.close(comp);return Optional.some(true);}else{return Optional.none();}}}),Focusing.config({})]),events:events$a(Optional.some(action)),eventOrder:_objectSpread({},detail.eventOrder,_defineProperty({},execute$5(),['disabling','toggling','alloy.base.behaviour'])),apis:apis,domModification:{attributes:_objectSpread({'aria-haspopup':'true'},detail.role.fold(function(){return{};},function(role){return{role:role};}),{},detail.dom.tag==='button'?{type:lookupAttr('type').getOr('button')}:{})}};};var Dropdown=composite({name:'Dropdown',configFields:schema$j(),partFields:parts$d(),factory:factory$g,apis:{open:function open(apis,comp){return apis.open(comp);},expand:function expand(apis,comp){return apis.expand(comp);},close:function close(apis,comp){return apis.close(comp);},isOpen:function isOpen(apis,comp){return apis.isOpen(comp);},repositionMenus:function repositionMenus(apis,comp){return apis.repositionMenus(comp);}}});var exhibit$1=function exhibit$1(){return nu$7({styles:{'-webkit-user-select':'none','user-select':'none','-ms-user-select':'none','-moz-user-select':'-moz-none'},attributes:{unselectable:'on'}});};var events$7=function events$7(){return derive$2([abort(selectstart(),always)]);};var ActiveUnselecting=/*#__PURE__*/Object.freeze({__proto__:null,events:events$7,exhibit:exhibit$1});var Unselecting=create$3({fields:[],name:'unselecting',active:ActiveUnselecting});var renderPanelButton=function renderPanelButton(spec,sharedBackstage){return Dropdown.sketch({dom:spec.dom,components:spec.components,toggleClass:'mce-active',dropdownBehaviours:derive$1([DisablingConfigs.button(sharedBackstage.providers.isDisabled),receivingConfig(),Unselecting.config({}),Tabstopping.config({})]),layouts:spec.layouts,sandboxClasses:['tox-dialog__popups'],lazySink:sharedBackstage.getSink,fetch:function fetch(comp){return Future.nu(function(callback){return spec.fetch(callback);}).map(function(items){return Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'),items,function(value){spec.onItemAction(comp,value);},spec.columns,spec.presets,ItemResponse$1.CLOSE_ON_EXECUTE,never,sharedBackstage.providers),{movement:deriveMenuMovement(spec.columns,spec.presets)})));});},parts:{menu:part(false,1,spec.presets)}});};var colorInputChangeEvent=generate$6('color-input-change');var colorSwatchChangeEvent=generate$6('color-swatch-change');var colorPickerCancelEvent=generate$6('color-picker-cancel');var renderColorInput=function renderColorInput(spec,sharedBackstage,colorInputBackstage,initialData){var pField=FormField.parts.field({factory:Input,inputClasses:['tox-textfield'],data:initialData,onSetValue:function onSetValue(c){return Invalidating.run(c).get(noop);},inputBehaviours:derive$1([Disabling.config({disabled:sharedBackstage.providers.isDisabled}),receivingConfig(),Tabstopping.config({}),Invalidating.config({invalidClass:'tox-textbox-field-invalid',getRoot:function getRoot(comp){return parentElement(comp.element);},notify:{onValid:function onValid(comp){var val=Representing.getValue(comp);emitWith(comp,colorInputChangeEvent,{color:val});}},validator:{validateOnLoad:false,validate:function validate(input){var inputValue=Representing.getValue(input);if(inputValue.length===0){return Future.pure(Result.value(true));}else{var span=SugarElement.fromTag('span');set$8(span,'background-color',inputValue);var res=getRaw(span,'background-color').fold(function(){return Result.error('blah');},function(_){return Result.value(inputValue);});return Future.pure(res);}}}})]),selectOnFocus:false});var pLabel=spec.label.map(function(label){return renderLabel$2(label,sharedBackstage.providers);});var emitSwatchChange=function emitSwatchChange(colorBit,value){emitWith(colorBit,colorSwatchChangeEvent,{value:value});};var onItemAction=function onItemAction(comp,value){memColorButton.getOpt(comp).each(function(colorBit){if(value==='custom'){colorInputBackstage.colorPicker(function(valueOpt){valueOpt.fold(function(){return emit(colorBit,colorPickerCancelEvent);},function(value){emitSwatchChange(colorBit,value);addColor(value);});},'#ffffff');}else if(value==='remove'){emitSwatchChange(colorBit,'');}else{emitSwatchChange(colorBit,value);}});};var memColorButton=record(renderPanelButton({dom:{tag:'span',attributes:{'aria-label':sharedBackstage.providers.translate('Color swatch')}},layouts:{onRtl:function onRtl(){return[southwest$2,southeast$2,south$2];},onLtr:function onLtr(){return[southeast$2,southwest$2,south$2];}},components:[],fetch:getFetch$1(colorInputBackstage.getColors(),colorInputBackstage.hasCustomColors()),columns:colorInputBackstage.getColorCols(),presets:'color',onItemAction:onItemAction},sharedBackstage));return FormField.sketch({dom:{tag:'div',classes:['tox-form__group']},components:pLabel.toArray().concat([{dom:{tag:'div',classes:['tox-color-input']},components:[pField,memColorButton.asSpec()]}]),fieldBehaviours:derive$1([config('form-field-events',[run$1(colorInputChangeEvent,function(comp,se){memColorButton.getOpt(comp).each(function(colorButton){set$8(colorButton.element,'background-color',se.event.color);});emitWith(comp,formChangeEvent,{name:spec.name});}),run$1(colorSwatchChangeEvent,function(comp,se){FormField.getField(comp).each(function(field){Representing.setValue(field,se.event.value);Composing.getCurrent(comp).each(Focusing.focus);});}),run$1(colorPickerCancelEvent,function(comp,_se){FormField.getField(comp).each(function(_field){Composing.getCurrent(comp).each(Focusing.focus);});})])])});};var labelPart=optional({schema:[required$1('dom')],name:'label'});var edgePart=function edgePart(name){return optional({name:''+name+'-edge',overrides:function overrides(detail){var action=detail.model.manager.edgeActions[name];return action.fold(function(){return{};},function(a){return{events:derive$2([runActionExtra(touchstart(),function(comp,se,d){return a(comp,d);},[detail]),runActionExtra(mousedown(),function(comp,se,d){return a(comp,d);},[detail]),runActionExtra(mousemove(),function(comp,se,det){if(det.mouseIsDown.get()){a(comp,det);}},[detail])])};});}});};var tlEdgePart=edgePart('top-left');var tedgePart=edgePart('top');var trEdgePart=edgePart('top-right');var redgePart=edgePart('right');var brEdgePart=edgePart('bottom-right');var bedgePart=edgePart('bottom');var blEdgePart=edgePart('bottom-left');var ledgePart=edgePart('left');var thumbPart=required({name:'thumb',defaults:constant$1({dom:{styles:{position:'absolute'}}}),overrides:function overrides(detail){return{events:derive$2([redirectToPart(touchstart(),detail,'spectrum'),redirectToPart(touchmove(),detail,'spectrum'),redirectToPart(touchend(),detail,'spectrum'),redirectToPart(mousedown(),detail,'spectrum'),redirectToPart(mousemove(),detail,'spectrum'),redirectToPart(mouseup(),detail,'spectrum')])};}});var spectrumPart=required({schema:[customField('mouseIsDown',function(){return Cell(false);})],name:'spectrum',overrides:function overrides(detail){var modelDetail=detail.model;var model=modelDetail.manager;var setValueFrom=function setValueFrom(component,simulatedEvent){return model.getValueFromEvent(simulatedEvent).map(function(value){return model.setValueFrom(component,detail,value);});};return{behaviours:derive$1([Keying.config({mode:'special',onLeft:function onLeft(spectrum){return model.onLeft(spectrum,detail);},onRight:function onRight(spectrum){return model.onRight(spectrum,detail);},onUp:function onUp(spectrum){return model.onUp(spectrum,detail);},onDown:function onDown(spectrum){return model.onDown(spectrum,detail);}}),Focusing.config({})]),events:derive$2([run$1(touchstart(),setValueFrom),run$1(touchmove(),setValueFrom),run$1(mousedown(),setValueFrom),run$1(mousemove(),function(spectrum,se){if(detail.mouseIsDown.get()){setValueFrom(spectrum,se);}})])};}});var SliderParts=[labelPart,ledgePart,redgePart,tedgePart,bedgePart,tlEdgePart,trEdgePart,blEdgePart,brEdgePart,thumbPart,spectrumPart];var _sliderChangeEvent='slider.change.value';var sliderChangeEvent=constant$1(_sliderChangeEvent);var isTouchEvent$1=function isTouchEvent$1(evt){return evt.type.indexOf('touch')!==-1;};var getEventSource=function getEventSource(simulatedEvent){var evt=simulatedEvent.event.raw;if(isTouchEvent$1(evt)){var touchEvent=evt;return touchEvent.touches!==undefined&&touchEvent.touches.length===1?Optional.some(touchEvent.touches[0]).map(function(t){return SugarPosition(t.clientX,t.clientY);}):Optional.none();}else{var mouseEvent=evt;return mouseEvent.clientX!==undefined?Optional.some(mouseEvent).map(function(me){return SugarPosition(me.clientX,me.clientY);}):Optional.none();}};var t='top',r='right',b='bottom',l='left';var minX=function minX(detail){return detail.model.minX;};var minY=function minY(detail){return detail.model.minY;};var min1X=function min1X(detail){return detail.model.minX-1;};var min1Y=function min1Y(detail){return detail.model.minY-1;};var maxX=function maxX(detail){return detail.model.maxX;};var maxY=function maxY(detail){return detail.model.maxY;};var max1X=function max1X(detail){return detail.model.maxX+1;};var max1Y=function max1Y(detail){return detail.model.maxY+1;};var range=function range(detail,max,min){return max(detail)-min(detail);};var xRange=function xRange(detail){return range(detail,maxX,minX);};var yRange=function yRange(detail){return range(detail,maxY,minY);};var halfX=function halfX(detail){return xRange(detail)/2;};var halfY=function halfY(detail){return yRange(detail)/2;};var step=function step(detail){return detail.stepSize;};var snap=function snap(detail){return detail.snapToGrid;};var snapStart=function snapStart(detail){return detail.snapStart;};var rounded=function rounded(detail){return detail.rounded;};var hasEdge=function hasEdge(detail,edgeName){return detail[edgeName+'-edge']!==undefined;};var hasLEdge=function hasLEdge(detail){return hasEdge(detail,l);};var hasREdge=function hasREdge(detail){return hasEdge(detail,r);};var hasTEdge=function hasTEdge(detail){return hasEdge(detail,t);};var hasBEdge=function hasBEdge(detail){return hasEdge(detail,b);};var currentValue=function currentValue(detail){return detail.model.value.get();};var xyValue=function xyValue(x,y){return{x:x,y:y};};var fireSliderChange$3=function fireSliderChange$3(component,value){emitWith(component,sliderChangeEvent(),{value:value});};var setToTLEdgeXY=function setToTLEdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(min1X(detail),min1Y(detail)));};var setToTEdge=function setToTEdge(edge,detail){fireSliderChange$3(edge,min1Y(detail));};var setToTEdgeXY=function setToTEdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(halfX(detail),min1Y(detail)));};var setToTREdgeXY=function setToTREdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(max1X(detail),min1Y(detail)));};var setToREdge=function setToREdge(edge,detail){fireSliderChange$3(edge,max1X(detail));};var setToREdgeXY=function setToREdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(max1X(detail),halfY(detail)));};var setToBREdgeXY=function setToBREdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(max1X(detail),max1Y(detail)));};var setToBEdge=function setToBEdge(edge,detail){fireSliderChange$3(edge,max1Y(detail));};var setToBEdgeXY=function setToBEdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(halfX(detail),max1Y(detail)));};var setToBLEdgeXY=function setToBLEdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(min1X(detail),max1Y(detail)));};var setToLEdge=function setToLEdge(edge,detail){fireSliderChange$3(edge,min1X(detail));};var setToLEdgeXY=function setToLEdgeXY(edge,detail){fireSliderChange$3(edge,xyValue(min1X(detail),halfY(detail)));};var reduceBy=function reduceBy(value,min,max,step){if(value<min){return value;}else if(value>max){return max;}else if(value===min){return min-1;}else{return Math.max(min,value-step);}};var increaseBy=function increaseBy(value,min,max,step){if(value>max){return value;}else if(value<min){return min;}else if(value===max){return max+1;}else{return Math.min(max,value+step);}};var capValue=function capValue(value,min,max){return Math.max(min,Math.min(max,value));};var snapValueOf=function snapValueOf(value,min,max,step,snapStart){return snapStart.fold(function(){var initValue=value-min;var extraValue=Math.round(initValue/step)*step;return capValue(min+extraValue,min-1,max+1);},function(start){var remainder=(value-start)%step;var adjustment=Math.round(remainder/step);var rawSteps=Math.floor((value-start)/step);var maxSteps=Math.floor((max-start)/step);var numSteps=Math.min(maxSteps,rawSteps+adjustment);var r=start+numSteps*step;return Math.max(start,r);});};var findOffsetOf=function findOffsetOf(value,min,max){return Math.min(max,Math.max(value,min))-min;};var findValueOf=function findValueOf(args){var min=args.min,max=args.max,range=args.range,value=args.value,step=args.step,snap=args.snap,snapStart=args.snapStart,rounded=args.rounded,hasMinEdge=args.hasMinEdge,hasMaxEdge=args.hasMaxEdge,minBound=args.minBound,maxBound=args.maxBound,screenRange=args.screenRange;var capMin=hasMinEdge?min-1:min;var capMax=hasMaxEdge?max+1:max;if(value<minBound){return capMin;}else if(value>maxBound){return capMax;}else{var _offset=findOffsetOf(value,minBound,maxBound);var newValue=capValue(_offset/screenRange*range+min,capMin,capMax);if(snap&&newValue>=min&&newValue<=max){return snapValueOf(newValue,min,max,step,snapStart);}else if(rounded){return Math.round(newValue);}else{return newValue;}}};var findOffsetOfValue$2=function findOffsetOfValue$2(args){var min=args.min,max=args.max,range=args.range,value=args.value,hasMinEdge=args.hasMinEdge,hasMaxEdge=args.hasMaxEdge,maxBound=args.maxBound,maxOffset=args.maxOffset,centerMinEdge=args.centerMinEdge,centerMaxEdge=args.centerMaxEdge;if(value<min){return hasMinEdge?0:centerMinEdge;}else if(value>max){return hasMaxEdge?maxBound:centerMaxEdge;}else{return(value-min)/range*maxOffset;}};var top='top',right='right',bottom='bottom',left='left',width='width',height='height';var getBounds=function getBounds(component){return component.element.dom.getBoundingClientRect();};var getBoundsProperty=function getBoundsProperty(bounds,property){return bounds[property];};var getMinXBounds=function getMinXBounds(component){var bounds=getBounds(component);return getBoundsProperty(bounds,left);};var getMaxXBounds=function getMaxXBounds(component){var bounds=getBounds(component);return getBoundsProperty(bounds,right);};var getMinYBounds=function getMinYBounds(component){var bounds=getBounds(component);return getBoundsProperty(bounds,top);};var getMaxYBounds=function getMaxYBounds(component){var bounds=getBounds(component);return getBoundsProperty(bounds,bottom);};var getXScreenRange=function getXScreenRange(component){var bounds=getBounds(component);return getBoundsProperty(bounds,width);};var getYScreenRange=function getYScreenRange(component){var bounds=getBounds(component);return getBoundsProperty(bounds,height);};var getCenterOffsetOf=function getCenterOffsetOf(componentMinEdge,componentMaxEdge,spectrumMinEdge){return(componentMinEdge+componentMaxEdge)/2-spectrumMinEdge;};var getXCenterOffSetOf=function getXCenterOffSetOf(component,spectrum){var componentBounds=getBounds(component);var spectrumBounds=getBounds(spectrum);var componentMinEdge=getBoundsProperty(componentBounds,left);var componentMaxEdge=getBoundsProperty(componentBounds,right);var spectrumMinEdge=getBoundsProperty(spectrumBounds,left);return getCenterOffsetOf(componentMinEdge,componentMaxEdge,spectrumMinEdge);};var getYCenterOffSetOf=function getYCenterOffSetOf(component,spectrum){var componentBounds=getBounds(component);var spectrumBounds=getBounds(spectrum);var componentMinEdge=getBoundsProperty(componentBounds,top);var componentMaxEdge=getBoundsProperty(componentBounds,bottom);var spectrumMinEdge=getBoundsProperty(spectrumBounds,top);return getCenterOffsetOf(componentMinEdge,componentMaxEdge,spectrumMinEdge);};var fireSliderChange$2=function fireSliderChange$2(spectrum,value){emitWith(spectrum,sliderChangeEvent(),{value:value});};var findValueOfOffset$1=function findValueOfOffset$1(spectrum,detail,left){var args={min:minX(detail),max:maxX(detail),range:xRange(detail),value:left,step:step(detail),snap:snap(detail),snapStart:snapStart(detail),rounded:rounded(detail),hasMinEdge:hasLEdge(detail),hasMaxEdge:hasREdge(detail),minBound:getMinXBounds(spectrum),maxBound:getMaxXBounds(spectrum),screenRange:getXScreenRange(spectrum)};return findValueOf(args);};var setValueFrom$2=function setValueFrom$2(spectrum,detail,value){var xValue=findValueOfOffset$1(spectrum,detail,value);var sliderVal=xValue;fireSliderChange$2(spectrum,sliderVal);return xValue;};var setToMin$2=function setToMin$2(spectrum,detail){var min=minX(detail);fireSliderChange$2(spectrum,min);};var setToMax$2=function setToMax$2(spectrum,detail){var max=maxX(detail);fireSliderChange$2(spectrum,max);};var moveBy$2=function moveBy$2(direction,spectrum,detail){var f=direction>0?increaseBy:reduceBy;var xValue=f(currentValue(detail),minX(detail),maxX(detail),step(detail));fireSliderChange$2(spectrum,xValue);return Optional.some(xValue);};var handleMovement$2=function handleMovement$2(direction){return function(spectrum,detail){return moveBy$2(direction,spectrum,detail).map(always);};};var getValueFromEvent$2=function getValueFromEvent$2(simulatedEvent){var pos=getEventSource(simulatedEvent);return pos.map(function(p){return p.left;});};var findOffsetOfValue$1=function findOffsetOfValue$1(spectrum,detail,value,minEdge,maxEdge){var minOffset=0;var maxOffset=getXScreenRange(spectrum);var centerMinEdge=minEdge.bind(function(edge){return Optional.some(getXCenterOffSetOf(edge,spectrum));}).getOr(minOffset);var centerMaxEdge=maxEdge.bind(function(edge){return Optional.some(getXCenterOffSetOf(edge,spectrum));}).getOr(maxOffset);var args={min:minX(detail),max:maxX(detail),range:xRange(detail),value:value,hasMinEdge:hasLEdge(detail),hasMaxEdge:hasREdge(detail),minBound:getMinXBounds(spectrum),minOffset:minOffset,maxBound:getMaxXBounds(spectrum),maxOffset:maxOffset,centerMinEdge:centerMinEdge,centerMaxEdge:centerMaxEdge};return findOffsetOfValue$2(args);};var findPositionOfValue$1=function findPositionOfValue$1(slider,spectrum,value,minEdge,maxEdge,detail){var offset=findOffsetOfValue$1(spectrum,detail,value,minEdge,maxEdge);return getMinXBounds(spectrum)-getMinXBounds(slider)+offset;};var setPositionFromValue$2=function setPositionFromValue$2(slider,thumb,detail,edges){var value=currentValue(detail);var pos=findPositionOfValue$1(slider,edges.getSpectrum(slider),value,edges.getLeftEdge(slider),edges.getRightEdge(slider),detail);var thumbRadius=get$c(thumb.element)/2;set$8(thumb.element,'left',pos-thumbRadius+'px');};var onLeft$2=handleMovement$2(-1);var onRight$2=handleMovement$2(1);var onUp$2=Optional.none;var onDown$2=Optional.none;var edgeActions$2={'top-left':Optional.none(),'top':Optional.none(),'top-right':Optional.none(),'right':Optional.some(setToREdge),'bottom-right':Optional.none(),'bottom':Optional.none(),'bottom-left':Optional.none(),'left':Optional.some(setToLEdge)};var HorizontalModel=/*#__PURE__*/Object.freeze({__proto__:null,setValueFrom:setValueFrom$2,setToMin:setToMin$2,setToMax:setToMax$2,findValueOfOffset:findValueOfOffset$1,getValueFromEvent:getValueFromEvent$2,findPositionOfValue:findPositionOfValue$1,setPositionFromValue:setPositionFromValue$2,onLeft:onLeft$2,onRight:onRight$2,onUp:onUp$2,onDown:onDown$2,edgeActions:edgeActions$2});var fireSliderChange$1=function fireSliderChange$1(spectrum,value){emitWith(spectrum,sliderChangeEvent(),{value:value});};var findValueOfOffset=function findValueOfOffset(spectrum,detail,top){var args={min:minY(detail),max:maxY(detail),range:yRange(detail),value:top,step:step(detail),snap:snap(detail),snapStart:snapStart(detail),rounded:rounded(detail),hasMinEdge:hasTEdge(detail),hasMaxEdge:hasBEdge(detail),minBound:getMinYBounds(spectrum),maxBound:getMaxYBounds(spectrum),screenRange:getYScreenRange(spectrum)};return findValueOf(args);};var setValueFrom$1=function setValueFrom$1(spectrum,detail,value){var yValue=findValueOfOffset(spectrum,detail,value);var sliderVal=yValue;fireSliderChange$1(spectrum,sliderVal);return yValue;};var setToMin$1=function setToMin$1(spectrum,detail){var min=minY(detail);fireSliderChange$1(spectrum,min);};var setToMax$1=function setToMax$1(spectrum,detail){var max=maxY(detail);fireSliderChange$1(spectrum,max);};var moveBy$1=function moveBy$1(direction,spectrum,detail){var f=direction>0?increaseBy:reduceBy;var yValue=f(currentValue(detail),minY(detail),maxY(detail),step(detail));fireSliderChange$1(spectrum,yValue);return Optional.some(yValue);};var handleMovement$1=function handleMovement$1(direction){return function(spectrum,detail){return moveBy$1(direction,spectrum,detail).map(always);};};var getValueFromEvent$1=function getValueFromEvent$1(simulatedEvent){var pos=getEventSource(simulatedEvent);return pos.map(function(p){return p.top;});};var findOffsetOfValue=function findOffsetOfValue(spectrum,detail,value,minEdge,maxEdge){var minOffset=0;var maxOffset=getYScreenRange(spectrum);var centerMinEdge=minEdge.bind(function(edge){return Optional.some(getYCenterOffSetOf(edge,spectrum));}).getOr(minOffset);var centerMaxEdge=maxEdge.bind(function(edge){return Optional.some(getYCenterOffSetOf(edge,spectrum));}).getOr(maxOffset);var args={min:minY(detail),max:maxY(detail),range:yRange(detail),value:value,hasMinEdge:hasTEdge(detail),hasMaxEdge:hasBEdge(detail),minBound:getMinYBounds(spectrum),minOffset:minOffset,maxBound:getMaxYBounds(spectrum),maxOffset:maxOffset,centerMinEdge:centerMinEdge,centerMaxEdge:centerMaxEdge};return findOffsetOfValue$2(args);};var findPositionOfValue=function findPositionOfValue(slider,spectrum,value,minEdge,maxEdge,detail){var offset=findOffsetOfValue(spectrum,detail,value,minEdge,maxEdge);return getMinYBounds(spectrum)-getMinYBounds(slider)+offset;};var setPositionFromValue$1=function setPositionFromValue$1(slider,thumb,detail,edges){var value=currentValue(detail);var pos=findPositionOfValue(slider,edges.getSpectrum(slider),value,edges.getTopEdge(slider),edges.getBottomEdge(slider),detail);var thumbRadius=get$d(thumb.element)/2;set$8(thumb.element,'top',pos-thumbRadius+'px');};var onLeft$1=Optional.none;var onRight$1=Optional.none;var onUp$1=handleMovement$1(-1);var onDown$1=handleMovement$1(1);var edgeActions$1={'top-left':Optional.none(),'top':Optional.some(setToTEdge),'top-right':Optional.none(),'right':Optional.none(),'bottom-right':Optional.none(),'bottom':Optional.some(setToBEdge),'bottom-left':Optional.none(),'left':Optional.none()};var VerticalModel=/*#__PURE__*/Object.freeze({__proto__:null,setValueFrom:setValueFrom$1,setToMin:setToMin$1,setToMax:setToMax$1,findValueOfOffset:findValueOfOffset,getValueFromEvent:getValueFromEvent$1,findPositionOfValue:findPositionOfValue,setPositionFromValue:setPositionFromValue$1,onLeft:onLeft$1,onRight:onRight$1,onUp:onUp$1,onDown:onDown$1,edgeActions:edgeActions$1});var fireSliderChange=function fireSliderChange(spectrum,value){emitWith(spectrum,sliderChangeEvent(),{value:value});};var sliderValue=function sliderValue(x,y){return{x:x,y:y};};var setValueFrom=function setValueFrom(spectrum,detail,value){var xValue=findValueOfOffset$1(spectrum,detail,value.left);var yValue=findValueOfOffset(spectrum,detail,value.top);var val=sliderValue(xValue,yValue);fireSliderChange(spectrum,val);return val;};var moveBy=function moveBy(direction,isVerticalMovement,spectrum,detail){var f=direction>0?increaseBy:reduceBy;var xValue=isVerticalMovement?currentValue(detail).x:f(currentValue(detail).x,minX(detail),maxX(detail),step(detail));var yValue=!isVerticalMovement?currentValue(detail).y:f(currentValue(detail).y,minY(detail),maxY(detail),step(detail));fireSliderChange(spectrum,sliderValue(xValue,yValue));return Optional.some(xValue);};var handleMovement=function handleMovement(direction,isVerticalMovement){return function(spectrum,detail){return moveBy(direction,isVerticalMovement,spectrum,detail).map(always);};};var setToMin=function setToMin(spectrum,detail){var mX=minX(detail);var mY=minY(detail);fireSliderChange(spectrum,sliderValue(mX,mY));};var setToMax=function setToMax(spectrum,detail){var mX=maxX(detail);var mY=maxY(detail);fireSliderChange(spectrum,sliderValue(mX,mY));};var getValueFromEvent=function getValueFromEvent(simulatedEvent){return getEventSource(simulatedEvent);};var setPositionFromValue=function setPositionFromValue(slider,thumb,detail,edges){var value=currentValue(detail);var xPos=findPositionOfValue$1(slider,edges.getSpectrum(slider),value.x,edges.getLeftEdge(slider),edges.getRightEdge(slider),detail);var yPos=findPositionOfValue(slider,edges.getSpectrum(slider),value.y,edges.getTopEdge(slider),edges.getBottomEdge(slider),detail);var thumbXRadius=get$c(thumb.element)/2;var thumbYRadius=get$d(thumb.element)/2;set$8(thumb.element,'left',xPos-thumbXRadius+'px');set$8(thumb.element,'top',yPos-thumbYRadius+'px');};var onLeft=handleMovement(-1,false);var onRight=handleMovement(1,false);var onUp=handleMovement(-1,true);var onDown=handleMovement(1,true);var edgeActions={'top-left':Optional.some(setToTLEdgeXY),'top':Optional.some(setToTEdgeXY),'top-right':Optional.some(setToTREdgeXY),'right':Optional.some(setToREdgeXY),'bottom-right':Optional.some(setToBREdgeXY),'bottom':Optional.some(setToBEdgeXY),'bottom-left':Optional.some(setToBLEdgeXY),'left':Optional.some(setToLEdgeXY)};var TwoDModel=/*#__PURE__*/Object.freeze({__proto__:null,setValueFrom:setValueFrom,setToMin:setToMin,setToMax:setToMax,getValueFromEvent:getValueFromEvent,setPositionFromValue:setPositionFromValue,onLeft:onLeft,onRight:onRight,onUp:onUp,onDown:onDown,edgeActions:edgeActions});var SliderSchema=[defaulted('stepSize',1),defaulted('onChange',noop),defaulted('onChoose',noop),defaulted('onInit',noop),defaulted('onDragStart',noop),defaulted('onDragEnd',noop),defaulted('snapToGrid',false),defaulted('rounded',true),option$3('snapStart'),requiredOf('model',choose$1('mode',{x:[defaulted('minX',0),defaulted('maxX',100),customField('value',function(spec){return Cell(spec.mode.minX);}),required$1('getInitialValue'),output$1('manager',HorizontalModel)],y:[defaulted('minY',0),defaulted('maxY',100),customField('value',function(spec){return Cell(spec.mode.minY);}),required$1('getInitialValue'),output$1('manager',VerticalModel)],xy:[defaulted('minX',0),defaulted('maxX',100),defaulted('minY',0),defaulted('maxY',100),customField('value',function(spec){return Cell({x:spec.mode.minX,y:spec.mode.minY});}),required$1('getInitialValue'),output$1('manager',TwoDModel)]})),field('sliderBehaviours',[Keying,Representing]),customField('mouseIsDown',function(){return Cell(false);})];var sketch$2=function sketch$2(detail,components,_spec,_externals){var getThumb=function getThumb(component){return getPartOrDie(component,detail,'thumb');};var getSpectrum=function getSpectrum(component){return getPartOrDie(component,detail,'spectrum');};var getLeftEdge=function getLeftEdge(component){return getPart(component,detail,'left-edge');};var getRightEdge=function getRightEdge(component){return getPart(component,detail,'right-edge');};var getTopEdge=function getTopEdge(component){return getPart(component,detail,'top-edge');};var getBottomEdge=function getBottomEdge(component){return getPart(component,detail,'bottom-edge');};var modelDetail=detail.model;var model=modelDetail.manager;var refresh=function refresh(slider,thumb){model.setPositionFromValue(slider,thumb,detail,{getLeftEdge:getLeftEdge,getRightEdge:getRightEdge,getTopEdge:getTopEdge,getBottomEdge:getBottomEdge,getSpectrum:getSpectrum});};var setValue=function setValue(slider,newValue){modelDetail.value.set(newValue);var thumb=getThumb(slider);refresh(slider,thumb);};var changeValue=function changeValue(slider,newValue){setValue(slider,newValue);var thumb=getThumb(slider);detail.onChange(slider,thumb,newValue);return Optional.some(true);};var resetToMin=function resetToMin(slider){model.setToMin(slider,detail);};var resetToMax=function resetToMax(slider){model.setToMax(slider,detail);};var choose=function choose(slider){var fireOnChoose=function fireOnChoose(){getPart(slider,detail,'thumb').each(function(thumb){var value=modelDetail.value.get();detail.onChoose(slider,thumb,value);});};var wasDown=detail.mouseIsDown.get();detail.mouseIsDown.set(false);if(wasDown){fireOnChoose();}};var onDragStart=function onDragStart(slider,simulatedEvent){simulatedEvent.stop();detail.mouseIsDown.set(true);detail.onDragStart(slider,getThumb(slider));};var onDragEnd=function onDragEnd(slider,simulatedEvent){simulatedEvent.stop();detail.onDragEnd(slider,getThumb(slider));choose(slider);};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.sliderBehaviours,[Keying.config({mode:'special',focusIn:function focusIn(slider){return getPart(slider,detail,'spectrum').map(Keying.focusIn).map(always);}}),Representing.config({store:{mode:'manual',getValue:function getValue(_){return modelDetail.value.get();},setValue:setValue}}),Receiving.config({channels:_defineProperty({},mouseReleased(),{onReceive:choose})})]),events:derive$2([run$1(sliderChangeEvent(),function(slider,simulatedEvent){changeValue(slider,simulatedEvent.event.value);}),runOnAttached(function(slider,_simulatedEvent){var getInitial=modelDetail.getInitialValue();modelDetail.value.set(getInitial);var thumb=getThumb(slider);refresh(slider,thumb);var spectrum=getSpectrum(slider);detail.onInit(slider,thumb,spectrum,modelDetail.value.get());}),run$1(touchstart(),onDragStart),run$1(touchend(),onDragEnd),run$1(mousedown(),onDragStart),run$1(mouseup(),onDragEnd)]),apis:{resetToMin:resetToMin,resetToMax:resetToMax,setValue:setValue,refresh:refresh},domModification:{styles:{position:'relative'}}};};var Slider=composite({name:'Slider',configFields:SliderSchema,partFields:SliderParts,factory:sketch$2,apis:{setValue:function setValue(apis,slider,value){apis.setValue(slider,value);},resetToMin:function resetToMin(apis,slider){apis.resetToMin(slider);},resetToMax:function resetToMax(apis,slider){apis.resetToMax(slider);},refresh:function refresh(apis,slider){apis.refresh(slider);}}});var fieldsUpdate=generate$6('rgb-hex-update');var sliderUpdate=generate$6('slider-update');var paletteUpdate=generate$6('palette-update');var sliderFactory=function sliderFactory(translate,getClass){var spectrum=Slider.parts.spectrum({dom:{tag:'div',classes:[getClass('hue-slider-spectrum')],attributes:{role:'presentation'}}});var thumb=Slider.parts.thumb({dom:{tag:'div',classes:[getClass('hue-slider-thumb')],attributes:{role:'presentation'}}});return Slider.sketch({dom:{tag:'div',classes:[getClass('hue-slider')],attributes:{role:'presentation'}},rounded:false,model:{mode:'y',getInitialValue:constant$1(0)},components:[spectrum,thumb],sliderBehaviours:derive$1([Focusing.config({})]),onChange:function onChange(slider,_thumb,value){emitWith(slider,sliderUpdate,{value:value});}});};var owner$1='form';var schema$i=[field('formBehaviours',[Representing])];var getPartName$1=function getPartName$1(name){return'<alloy.field.'+name+'>';};var sketch$1=function sketch$1(fSpec){var parts=function(){var record=[];var field=function field(name,config){record.push(name);return generateOne$1(owner$1,getPartName$1(name),config);};return{field:field,record:constant$1(record)};}();var spec=fSpec(parts);var partNames=parts.record();var fieldParts=map$2(partNames,function(n){return required({name:n,pname:getPartName$1(n)});});return composite$1(owner$1,schema$i,fieldParts,make$4,spec);};var toResult=function toResult(o,e){return o.fold(function(){return Result.error(e);},Result.value);};var make$4=function make$4(detail,components){return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.formBehaviours,[Representing.config({store:{mode:'manual',getValue:function getValue(form){var resPs=getAllParts(form,detail);return map$1(resPs,function(resPThunk,pName){return resPThunk().bind(function(v){var opt=Composing.getCurrent(v);return toResult(opt,new Error("Cannot find a current component to extract the value from for form part '".concat(pName,"': ")+element(v.element)));}).map(Representing.getValue);});},setValue:function setValue(form,values){each(values,function(newValue,key){getPart(form,detail,key).each(function(wrapper){Composing.getCurrent(wrapper).each(function(field){Representing.setValue(field,newValue);});});});}}})]),apis:{getField:function getField(form,key){return getPart(form,detail,key).bind(Composing.getCurrent);}}};};var Form={getField:makeApi(function(apis,component,key){return apis.getField(component,key);}),sketch:sketch$1};var validInput=generate$6('valid-input');var invalidInput=generate$6('invalid-input');var validatingInput=generate$6('validating-input');var translatePrefix='colorcustom.rgb.';var rgbFormFactory=function rgbFormFactory(translate,getClass,onValidHexx,onInvalidHexx){var invalidation=function invalidation(label,isValid){return Invalidating.config({invalidClass:getClass('invalid'),notify:{onValidate:function onValidate(comp){emitWith(comp,validatingInput,{type:label});},onValid:function onValid(comp){emitWith(comp,validInput,{type:label,value:Representing.getValue(comp)});},onInvalid:function onInvalid(comp){emitWith(comp,invalidInput,{type:label,value:Representing.getValue(comp)});}},validator:{validate:function validate(comp){var value=Representing.getValue(comp);var res=isValid(value)?Result.value(true):Result.error(translate('aria.input.invalid'));return Future.pure(res);},validateOnLoad:false}});};var renderTextField=function renderTextField(isValid,name,label,description,data){var helptext=translate(translatePrefix+'range');var pLabel=FormField.parts.label({dom:{tag:'label',attributes:{'aria-label':description}},components:[text$1(label)]});var pField=FormField.parts.field({data:data,factory:Input,inputAttributes:_objectSpread({type:'text'},name==='hex'?{'aria-live':'polite'}:{}),inputClasses:[getClass('textfield')],inputBehaviours:derive$1([invalidation(name,isValid),Tabstopping.config({})]),onSetValue:function onSetValue(input){if(Invalidating.isInvalid(input)){var _run=Invalidating.run(input);_run.get(noop);}}});var comps=[pLabel,pField];var concats=name!=='hex'?[FormField.parts['aria-descriptor']({text:helptext})]:[];var components=comps.concat(concats);return{dom:{tag:'div',attributes:{role:'presentation'}},components:components};};var copyRgbToHex=function copyRgbToHex(form,rgba){var hex=fromRgba(rgba);Form.getField(form,'hex').each(function(hexField){if(!Focusing.isFocused(hexField)){Representing.setValue(form,{hex:hex.value});}});return hex;};var copyRgbToForm=function copyRgbToForm(form,rgb){var red=rgb.red;var green=rgb.green;var blue=rgb.blue;Representing.setValue(form,{red:red,green:green,blue:blue});};var memPreview=record({dom:{tag:'div',classes:[getClass('rgba-preview')],styles:{'background-color':'white'},attributes:{role:'presentation'}}});var updatePreview=function updatePreview(anyInSystem,hex){memPreview.getOpt(anyInSystem).each(function(preview){set$8(preview.element,'background-color','#'+hex.value);});};var factory=function factory(){var state={red:Cell(Optional.some(255)),green:Cell(Optional.some(255)),blue:Cell(Optional.some(255)),hex:Cell(Optional.some('ffffff'))};var copyHexToRgb=function copyHexToRgb(form,hex){var rgb=fromHex(hex);copyRgbToForm(form,rgb);setValueRgb(rgb);};var get=function get(prop){return state[prop].get();};var set=function set(prop,value){state[prop].set(value);};var getValueRgb=function getValueRgb(){return get('red').bind(function(red){return get('green').bind(function(green){return get('blue').map(function(blue){return rgbaColour(red,green,blue,1);});});});};var setValueRgb=function setValueRgb(rgb){var red=rgb.red;var green=rgb.green;var blue=rgb.blue;set('red',Optional.some(red));set('green',Optional.some(green));set('blue',Optional.some(blue));};var onInvalidInput=function onInvalidInput(form,simulatedEvent){var data=simulatedEvent.event;if(data.type!=='hex'){set(data.type,Optional.none());}else{onInvalidHexx(form);}};var onValidHex=function onValidHex(form,value){onValidHexx(form);var hex=hexColour(value);set('hex',Optional.some(value));var rgb=fromHex(hex);copyRgbToForm(form,rgb);setValueRgb(rgb);emitWith(form,fieldsUpdate,{hex:hex});updatePreview(form,hex);};var onValidRgb=function onValidRgb(form,prop,value){var val=parseInt(value,10);set(prop,Optional.some(val));getValueRgb().each(function(rgb){var hex=copyRgbToHex(form,rgb);emitWith(form,fieldsUpdate,{hex:hex});updatePreview(form,hex);});};var isHexInputEvent=function isHexInputEvent(data){return data.type==='hex';};var onValidInput=function onValidInput(form,simulatedEvent){var data=simulatedEvent.event;if(isHexInputEvent(data)){onValidHex(form,data.value);}else{onValidRgb(form,data.type,data.value);}};var formPartStrings=function formPartStrings(key){return{label:translate(translatePrefix+key+'.label'),description:translate(translatePrefix+key+'.description')};};var redStrings=formPartStrings('red');var greenStrings=formPartStrings('green');var blueStrings=formPartStrings('blue');var hexStrings=formPartStrings('hex');return deepMerge(Form.sketch(function(parts){return{dom:{tag:'form',classes:[getClass('rgb-form')],attributes:{'aria-label':translate('aria.color.picker')}},components:[parts.field('red',FormField.sketch(renderTextField(isRgbaComponent,'red',redStrings.label,redStrings.description,255))),parts.field('green',FormField.sketch(renderTextField(isRgbaComponent,'green',greenStrings.label,greenStrings.description,255))),parts.field('blue',FormField.sketch(renderTextField(isRgbaComponent,'blue',blueStrings.label,blueStrings.description,255))),parts.field('hex',FormField.sketch(renderTextField(isHexString,'hex',hexStrings.label,hexStrings.description,'ffffff'))),memPreview.asSpec()],formBehaviours:derive$1([Invalidating.config({invalidClass:getClass('form-invalid')}),config('rgb-form-events',[run$1(validInput,onValidInput),run$1(invalidInput,onInvalidInput),run$1(validatingInput,onInvalidInput)])])};}),{apis:{updateHex:function updateHex(form,hex){Representing.setValue(form,{hex:hex.value});copyHexToRgb(form,hex);updatePreview(form,hex);}}});};var rgbFormSketcher=single({factory:factory,name:'RgbForm',configFields:[],apis:{updateHex:function updateHex(apis,form,hex){apis.updateHex(form,hex);}},extraApis:{}});return rgbFormSketcher;};var paletteFactory=function paletteFactory(_translate,getClass){var spectrumPart=Slider.parts.spectrum({dom:{tag:'canvas',attributes:{role:'presentation'},classes:[getClass('sv-palette-spectrum')]}});var thumbPart=Slider.parts.thumb({dom:{tag:'div',attributes:{role:'presentation'},classes:[getClass('sv-palette-thumb')],innerHtml:"<div class=".concat(getClass('sv-palette-inner-thumb')," role=\"presentation\"></div>")}});var setColour=function setColour(canvas,rgba){var width=canvas.width,height=canvas.height;var ctx=canvas.getContext('2d');if(ctx===null){return;}ctx.fillStyle=rgba;ctx.fillRect(0,0,width,height);var grdWhite=ctx.createLinearGradient(0,0,width,0);grdWhite.addColorStop(0,'rgba(255,255,255,1)');grdWhite.addColorStop(1,'rgba(255,255,255,0)');ctx.fillStyle=grdWhite;ctx.fillRect(0,0,width,height);var grdBlack=ctx.createLinearGradient(0,0,0,height);grdBlack.addColorStop(0,'rgba(0,0,0,0)');grdBlack.addColorStop(1,'rgba(0,0,0,1)');ctx.fillStyle=grdBlack;ctx.fillRect(0,0,width,height);};var setPaletteHue=function setPaletteHue(slider,hue){var canvas=slider.components()[0].element.dom;var hsv=hsvColour(hue,100,100);var rgba=fromHsv(hsv);setColour(canvas,toString(rgba));};var setPaletteThumb=function setPaletteThumb(slider,hex){var hsv=fromRgb(fromHex(hex));Slider.setValue(slider,{x:hsv.saturation,y:100-hsv.value});};var factory=function factory(_detail){var getInitialValue=constant$1({x:0,y:0});var onChange=function onChange(slider,_thumb,value){emitWith(slider,paletteUpdate,{value:value});};var onInit=function onInit(_slider,_thumb,spectrum,_value){setColour(spectrum.element.dom,toString(red));};var sliderBehaviours=derive$1([Composing.config({find:Optional.some}),Focusing.config({})]);return Slider.sketch({dom:{tag:'div',attributes:{role:'presentation'},classes:[getClass('sv-palette')]},model:{mode:'xy',getInitialValue:getInitialValue},rounded:false,components:[spectrumPart,thumbPart],onChange:onChange,onInit:onInit,sliderBehaviours:sliderBehaviours});};var saturationBrightnessPaletteSketcher=single({factory:factory,name:'SaturationBrightnessPalette',configFields:[],apis:{setHue:function setHue(_apis,slider,hue){setPaletteHue(slider,hue);},setThumb:function setThumb(_apis,slider,hex){setPaletteThumb(slider,hex);}},extraApis:{}});return saturationBrightnessPaletteSketcher;};var makeFactory=function makeFactory(translate,getClass){var factory=function factory(detail){var rgbForm=rgbFormFactory(translate,getClass,detail.onValidHex,detail.onInvalidHex);var sbPalette=paletteFactory(translate,getClass);var hueSliderToDegrees=function hueSliderToDegrees(hue){return(100-hue)/100*360;};var hueDegreesToSlider=function hueDegreesToSlider(hue){return 100-hue/360*100;};var state={paletteRgba:Cell(red),paletteHue:Cell(0)};var memSlider=record(sliderFactory(translate,getClass));var memPalette=record(sbPalette.sketch({}));var memRgb=record(rgbForm.sketch({}));var updatePalette=function updatePalette(anyInSystem,_hex,hue){memPalette.getOpt(anyInSystem).each(function(palette){sbPalette.setHue(palette,hue);});};var updateFields=function updateFields(anyInSystem,hex){memRgb.getOpt(anyInSystem).each(function(form){rgbForm.updateHex(form,hex);});};var updateSlider=function updateSlider(anyInSystem,_hex,hue){memSlider.getOpt(anyInSystem).each(function(slider){Slider.setValue(slider,hueDegreesToSlider(hue));});};var updatePaletteThumb=function updatePaletteThumb(anyInSystem,hex){memPalette.getOpt(anyInSystem).each(function(palette){sbPalette.setThumb(palette,hex);});};var updateState=function updateState(hex,hue){var rgba=fromHex(hex);state.paletteRgba.set(rgba);state.paletteHue.set(hue);};var runUpdates=function runUpdates(anyInSystem,hex,hue,updates){updateState(hex,hue);each$1(updates,function(update){update(anyInSystem,hex,hue);});};var onPaletteUpdate=function onPaletteUpdate(){var updates=[updateFields];return function(form,simulatedEvent){var value=simulatedEvent.event.value;var oldHue=state.paletteHue.get();var newHsv=hsvColour(oldHue,value.x,100-value.y);var newHex=hsvToHex(newHsv);runUpdates(form,newHex,oldHue,updates);};};var onSliderUpdate=function onSliderUpdate(){var updates=[updatePalette,updateFields];return function(form,simulatedEvent){var hue=hueSliderToDegrees(simulatedEvent.event.value);var oldRgb=state.paletteRgba.get();var oldHsv=fromRgb(oldRgb);var newHsv=hsvColour(hue,oldHsv.saturation,oldHsv.value);var newHex=hsvToHex(newHsv);runUpdates(form,newHex,hue,updates);};};var onFieldsUpdate=function onFieldsUpdate(){var updates=[updatePalette,updateSlider,updatePaletteThumb];return function(form,simulatedEvent){var hex=simulatedEvent.event.hex;var hsv=hexToHsv(hex);runUpdates(form,hex,hsv.hue,updates);};};return{uid:detail.uid,dom:detail.dom,components:[memPalette.asSpec(),memSlider.asSpec(),memRgb.asSpec()],behaviours:derive$1([config('colour-picker-events',[run$1(fieldsUpdate,onFieldsUpdate()),run$1(paletteUpdate,onPaletteUpdate()),run$1(sliderUpdate,onSliderUpdate())]),Composing.config({find:function find(comp){return memRgb.getOpt(comp);}}),Keying.config({mode:'acyclic'})])};};var colourPickerSketcher=single({name:'ColourPicker',configFields:[required$1('dom'),defaulted('onValidHex',noop),defaulted('onInvalidHex',noop)],factory:factory});return colourPickerSketcher;};var self=function self(){return Composing.config({find:Optional.some});};var memento$1=function memento$1(mem){return Composing.config({find:mem.getOpt});};var childAt=function childAt(index){return Composing.config({find:function find(comp){return child$2(comp.element,index).bind(function(element){return comp.getSystem().getByDom(element).toOptional();});}});};var ComposingConfigs={self:self,memento:memento$1,childAt:childAt};var processors=objOf([defaulted('preprocess',identity),defaulted('postprocess',identity)]);var memento=function memento(mem,rawProcessors){var ps=asRawOrDie$1('RepresentingConfigs.memento processors',processors,rawProcessors);return Representing.config({store:{mode:'manual',getValue:function getValue(comp){var other=mem.get(comp);var rawValue=Representing.getValue(other);return ps.postprocess(rawValue);},setValue:function setValue(comp,rawValue){var newValue=ps.preprocess(rawValue);var other=mem.get(comp);Representing.setValue(other,newValue);}}});};var withComp=function withComp(optInitialValue,getter,setter){return Representing.config({store:_objectSpread({mode:'manual'},optInitialValue.map(function(initialValue){return{initialValue:initialValue};}).getOr({}),{getValue:getter,setValue:setter})});};var withElement=function withElement(initialValue,getter,setter){return withComp(initialValue,function(c){return getter(c.element);},function(c,v){return setter(c.element,v);});};var domValue=function domValue(optInitialValue){return withElement(optInitialValue,get$6,set$5);};var domHtml=function domHtml(optInitialValue){return withElement(optInitialValue,get$9,set$6);};var memory=function memory(initialValue){return Representing.config({store:{mode:'memory',initialValue:initialValue}});};var RepresentingConfigs={memento:memento,withElement:withElement,withComp:withComp,domValue:domValue,domHtml:domHtml,memory:memory};var english={'colorcustom.rgb.red.label':'R','colorcustom.rgb.red.description':'Red component','colorcustom.rgb.green.label':'G','colorcustom.rgb.green.description':'Green component','colorcustom.rgb.blue.label':'B','colorcustom.rgb.blue.description':'Blue component','colorcustom.rgb.hex.label':'#','colorcustom.rgb.hex.description':'Hex color code','colorcustom.rgb.range':'Range 0 to 255','aria.color.picker':'Color Picker','aria.input.invalid':'Invalid input'};var translate$1=function translate$1(providerBackstage){return function(key){return providerBackstage.translate(english[key]);};};var renderColorPicker=function renderColorPicker(_spec,providerBackstage,initialData){var getClass=function getClass(key){return'tox-'+key;};var colourPickerFactory=makeFactory(translate$1(providerBackstage),getClass);var onValidHex=function onValidHex(form){emitWith(form,formActionEvent,{name:'hex-valid',value:true});};var onInvalidHex=function onInvalidHex(form){emitWith(form,formActionEvent,{name:'hex-valid',value:false});};var memPicker=record(colourPickerFactory.sketch({dom:{tag:'div',classes:[getClass('color-picker-container')],attributes:{role:'presentation'}},onValidHex:onValidHex,onInvalidHex:onInvalidHex}));return{dom:{tag:'div'},components:[memPicker.asSpec()],behaviours:derive$1([RepresentingConfigs.withComp(initialData,function(comp){var picker=memPicker.get(comp);var optRgbForm=Composing.getCurrent(picker);var optHex=optRgbForm.bind(function(rgbForm){var formValues=Representing.getValue(rgbForm);return formValues.hex;});return optHex.map(function(hex){return'#'+hex;}).getOr('');},function(comp,newValue){var pattern=/^#([a-fA-F0-9]{3}(?:[a-fA-F0-9]{3})?)/;var m=pattern.exec(newValue);var picker=memPicker.get(comp);var optRgbForm=Composing.getCurrent(picker);optRgbForm.fold(function(){console.log('Can not find form');},function(rgbForm){Representing.setValue(rgbForm,{hex:Optional.from(m[1]).getOr('')});Form.getField(rgbForm,'hex').each(function(hexField){emit(hexField,input());});});}),ComposingConfigs.self()])};};var global$2=tinymce.util.Tools.resolve('tinymce.Resource');var isOldCustomEditor=function isOldCustomEditor(spec){return has$2(spec,'init');};var renderCustomEditor=function renderCustomEditor(spec){var editorApi=value$2();var memReplaced=record({dom:{tag:spec.tag}});var initialValue=value$2();return{dom:{tag:'div',classes:['tox-custom-editor']},behaviours:derive$1([config('custom-editor-events',[runOnAttached(function(component){memReplaced.getOpt(component).each(function(ta){(isOldCustomEditor(spec)?spec.init(ta.element.dom):global$2.load(spec.scriptId,spec.scriptUrl).then(function(init){return init(ta.element.dom,spec.settings);})).then(function(ea){initialValue.on(function(cvalue){ea.setValue(cvalue);});initialValue.clear();editorApi.set(ea);});});})]),RepresentingConfigs.withComp(Optional.none(),function(){return editorApi.get().fold(function(){return initialValue.get().getOr('');},function(ed){return ed.getValue();});},function(component,value){editorApi.get().fold(function(){return initialValue.set(value);},function(ed){return ed.setValue(value);});}),ComposingConfigs.self()]),components:[memReplaced.asSpec()]};};var global$1=tinymce.util.Tools.resolve('tinymce.util.Tools');var filterByExtension=function filterByExtension(files,providersBackstage){var allowedImageFileTypes=global$1.explode(providersBackstage.getOption('images_file_types'));var isFileInAllowedTypes=function isFileInAllowedTypes(file){return exists(allowedImageFileTypes,function(type){return endsWith(file.name.toLowerCase(),".".concat(type.toLowerCase()));});};return filter$2(from(files),isFileInAllowedTypes);};var renderDropZone=function renderDropZone(spec,providersBackstage,initialData){var stopper=function stopper(_,se){se.stop();};var sequence=function sequence(actions){return function(comp,se){each$1(actions,function(a){a(comp,se);});};};var onDrop=function onDrop(comp,se){if(!Disabling.isDisabled(comp)){var transferEvent=se.event.raw;handleFiles(comp,transferEvent.dataTransfer.files);}};var onSelect=function onSelect(component,simulatedEvent){var input=simulatedEvent.event.raw.target;handleFiles(component,input.files);};var handleFiles=function handleFiles(component,files){Representing.setValue(component,filterByExtension(files,providersBackstage));emitWith(component,formChangeEvent,{name:spec.name});};var memInput=record({dom:{tag:'input',attributes:{type:'file',accept:'image/*'},styles:{display:'none'}},behaviours:derive$1([config('input-file-events',[cutter(click()),cutter(tap())])])});var renderField=function renderField(s){return{uid:s.uid,dom:{tag:'div',classes:['tox-dropzone-container']},behaviours:derive$1([RepresentingConfigs.memory(initialData.getOr([])),ComposingConfigs.self(),Disabling.config({}),Toggling.config({toggleClass:'dragenter',toggleOnExecute:false}),config('dropzone-events',[run$1('dragenter',sequence([stopper,Toggling.toggle])),run$1('dragleave',sequence([stopper,Toggling.toggle])),run$1('dragover',stopper),run$1('drop',sequence([stopper,onDrop])),run$1(change(),onSelect)])]),components:[{dom:{tag:'div',classes:['tox-dropzone'],styles:{}},components:[{dom:{tag:'p'},components:[text$1(providersBackstage.translate('Drop an image here'))]},Button.sketch({dom:{tag:'button',styles:{position:'relative'},classes:['tox-button','tox-button--secondary']},components:[text$1(providersBackstage.translate('Browse for an image')),memInput.asSpec()],action:function action(comp){var inputComp=memInput.get(comp);inputComp.element.dom.click();},buttonBehaviours:derive$1([Tabstopping.config({}),DisablingConfigs.button(providersBackstage.isDisabled),receivingConfig()])})]}]};};var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var pField=FormField.parts.field({factory:{sketch:renderField}});return renderFormFieldWith(pLabel,pField,['tox-form__group--stretched'],[]);};var renderGrid=function renderGrid(spec,backstage){return{dom:{tag:'div',classes:['tox-form__grid',"tox-form__grid--".concat(spec.columns,"col")]},components:map$2(spec.items,backstage.interpreter)};};var beforeObject=generate$6('alloy-fake-before-tabstop');var afterObject=generate$6('alloy-fake-after-tabstop');var craftWithClasses=function craftWithClasses(classes){return{dom:{tag:'div',styles:{width:'1px',height:'1px',outline:'none'},attributes:{tabindex:'0'},classes:classes},behaviours:derive$1([Focusing.config({ignore:true}),Tabstopping.config({})])};};var craft=function craft(spec){return{dom:{tag:'div',classes:['tox-navobj']},components:[craftWithClasses([beforeObject]),spec,craftWithClasses([afterObject])],behaviours:derive$1([ComposingConfigs.childAt(1)])};};var triggerTab=function triggerTab(placeholder,shiftKey){emitWith(placeholder,keydown(),{raw:{which:9,shiftKey:shiftKey}});};var onFocus=function onFocus(container,targetComp){var target=targetComp.element;if(has(target,beforeObject)){triggerTab(container,true);}else if(has(target,afterObject)){triggerTab(container,false);}};var isPseudoStop=function isPseudoStop(element){return closest(element,['.'+beforeObject,'.'+afterObject].join(','),never);};var getDynamicSource=function getDynamicSource(initialData){var cachedValue=Cell(initialData.getOr(''));return{getValue:function getValue(_frameComponent){return cachedValue.get();},setValue:function setValue(frameComponent,html){if(cachedValue.get()!==html){set$9(frameComponent.element,'srcdoc',html);}cachedValue.set(html);}};};var renderIFrame=function renderIFrame(spec,providersBackstage,initialData){var isSandbox=spec.sandboxed;var isTransparent=spec.transparent;var baseClass='tox-dialog__iframe';var attributes=_objectSpread({},spec.label.map(function(title){return{title:title};}).getOr({}),{},initialData.map(function(html){return{srcdoc:html};}).getOr({}),{},isSandbox?{sandbox:'allow-scripts allow-same-origin'}:{});var sourcing=getDynamicSource(initialData);var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var factory=function factory(newSpec){return craft({uid:newSpec.uid,dom:{tag:'iframe',attributes:attributes,classes:isTransparent?[baseClass]:[baseClass,"".concat(baseClass,"--opaque")]},behaviours:derive$1([Tabstopping.config({}),Focusing.config({}),RepresentingConfigs.withComp(initialData,sourcing.getValue,sourcing.setValue)])});};var pField=FormField.parts.field({factory:{sketch:factory}});return renderFormFieldWith(pLabel,pField,['tox-form__group--stretched'],[]);};var image=function image(_image){return new Promise(function(resolve,reject){var loaded=function loaded(){destroy();resolve(_image);};var listeners=[bind(_image,'load',loaded),bind(_image,'error',function(){destroy();reject('Unable to load data from image: '+_image.dom.src);})];var destroy=function destroy(){return each$1(listeners,function(l){return l.unbind();});};if(_image.dom.complete){loaded();}});};var calculateImagePosition=function calculateImagePosition(panelWidth,panelHeight,imageWidth,imageHeight,zoom){var width=imageWidth*zoom;var height=imageHeight*zoom;var left=Math.max(0,panelWidth/2-width/2);var top=Math.max(0,panelHeight/2-height/2);return{left:left.toString()+'px',top:top.toString()+'px',width:width.toString()+'px',height:height.toString()+'px'};};var zoomToFit=function zoomToFit(panel,width,height){var panelW=get$c(panel);var panelH=get$d(panel);return Math.min(panelW/width,panelH/height,1);};var renderImagePreview=function renderImagePreview(spec,initialData){var cachedData=Cell(initialData.getOr({url:''}));var memImage=record({dom:{tag:'img',classes:['tox-imagepreview__image'],attributes:initialData.map(function(data){return{src:data.url};}).getOr({})}});var memContainer=record({dom:{tag:'div',classes:['tox-imagepreview__container'],attributes:{role:'presentation'}},components:[memImage.asSpec()]});var setValue=function setValue(frameComponent,data){var translatedData={url:data.url};data.zoom.each(function(z){return translatedData.zoom=z;});data.cachedWidth.each(function(z){return translatedData.cachedWidth=z;});data.cachedHeight.each(function(z){return translatedData.cachedHeight=z;});cachedData.set(translatedData);var applyFramePositioning=function applyFramePositioning(){var imageWidth=translatedData.cachedWidth;var imageHeight=translatedData.cachedHeight;if(isUndefined(translatedData.zoom)){var z=zoomToFit(frameComponent.element,imageWidth,imageHeight);translatedData.zoom=z;}var position=calculateImagePosition(get$c(frameComponent.element),get$d(frameComponent.element),imageWidth,imageHeight,translatedData.zoom);memContainer.getOpt(frameComponent).each(function(container){setAll(container.element,position);});};memImage.getOpt(frameComponent).each(function(imageComponent){var img=imageComponent.element;if(data.url!==get$f(img,'src')){set$9(img,'src',data.url);remove$2(frameComponent.element,'tox-imagepreview__loaded');}if(!isUndefined(translatedData.cachedWidth)&&!isUndefined(translatedData.cachedHeight)){applyFramePositioning();}image(img).then(function(img){if(frameComponent.getSystem().isConnected()){add$2(frameComponent.element,'tox-imagepreview__loaded');translatedData.cachedWidth=img.dom.naturalWidth;translatedData.cachedHeight=img.dom.naturalHeight;applyFramePositioning();}});});};var styles={};spec.height.each(function(h){return styles.height=h;});var fakeValidatedData=initialData.map(function(d){return{url:d.url,zoom:Optional.from(d.zoom),cachedWidth:Optional.from(d.cachedWidth),cachedHeight:Optional.from(d.cachedHeight)};});return{dom:{tag:'div',classes:['tox-imagepreview'],styles:styles,attributes:{role:'presentation'}},components:[memContainer.asSpec()],behaviours:derive$1([ComposingConfigs.self(),RepresentingConfigs.withComp(fakeValidatedData,function(){return cachedData.get();},setValue)])};};var renderLabel$1=function renderLabel$1(spec,backstageShared){var label={dom:{tag:'label',classes:['tox-label']},components:[text$1(backstageShared.providers.translate(spec.label))]};var comps=map$2(spec.items,backstageShared.interpreter);return{dom:{tag:'div',classes:['tox-form__group']},components:[label].concat(_toConsumableArray(comps)),behaviours:derive$1([ComposingConfigs.self(),Replacing.config({}),RepresentingConfigs.domHtml(Optional.none()),Keying.config({mode:'acyclic'})])};};var internalToolbarButtonExecute=generate$6('toolbar.button.execute');var onToolbarButtonExecute=function onToolbarButtonExecute(info){return runOnExecute$1(function(comp,_simulatedEvent){runWithApi(info,comp)(function(itemApi){emitWith(comp,internalToolbarButtonExecute,{buttonApi:itemApi});info.onAction(itemApi);});});};var toolbarButtonEventOrder=_defineProperty({},execute$5(),['disabling','alloy.base.behaviour','toggling','toolbar-button-events']);var renderIcon=function renderIcon(iconName,iconsProvider,behaviours){return render$3(iconName,{tag:'span',classes:['tox-icon','tox-tbtn__icon-wrap'],behaviours:behaviours},iconsProvider);};var renderIconFromPack=function renderIconFromPack(iconName,iconsProvider){return renderIcon(iconName,iconsProvider,[]);};var renderReplacableIconFromPack=function renderReplacableIconFromPack(iconName,iconsProvider){return renderIcon(iconName,iconsProvider,[Replacing.config({})]);};var renderLabel=function renderLabel(text,prefix,providersBackstage){return{dom:{tag:'span',classes:["".concat(prefix,"__select-label")]},components:[text$1(providersBackstage.translate(text))],behaviours:derive$1([Replacing.config({})])};};var updateMenuText=generate$6('update-menu-text');var updateMenuIcon=generate$6('update-menu-icon');var renderCommonDropdown=function renderCommonDropdown(spec,prefix,sharedBackstage){var editorOffCell=Cell(noop);var optMemDisplayText=spec.text.map(function(text){return record(renderLabel(text,prefix,sharedBackstage.providers));});var optMemDisplayIcon=spec.icon.map(function(iconName){return record(renderReplacableIconFromPack(iconName,sharedBackstage.providers.icons));});var onLeftOrRightInMenu=function onLeftOrRightInMenu(comp,se){var dropdown=Representing.getValue(comp);Focusing.focus(dropdown);emitWith(dropdown,'keydown',{raw:se.event.raw});Dropdown.close(dropdown);return Optional.some(true);};var role=spec.role.fold(function(){return{};},function(role){return{role:role};});var tooltipAttributes=spec.tooltip.fold(function(){return{};},function(tooltip){var translatedTooltip=sharedBackstage.providers.translate(tooltip);return{'title':translatedTooltip,'aria-label':translatedTooltip};});var iconSpec=render$3('chevron-down',{tag:'div',classes:["".concat(prefix,"__select-chevron")]},sharedBackstage.providers.icons);var memDropdown=record(Dropdown.sketch(_objectSpread({},spec.uid?{uid:spec.uid}:{},{},role,{dom:{tag:'button',classes:[prefix,"".concat(prefix,"--select")].concat(map$2(spec.classes,function(c){return"".concat(prefix,"--").concat(c);})),attributes:_objectSpread({},tooltipAttributes)},components:componentRenderPipeline([optMemDisplayIcon.map(function(mem){return mem.asSpec();}),optMemDisplayText.map(function(mem){return mem.asSpec();}),Optional.some(iconSpec)]),matchWidth:true,useMinWidth:true,dropdownBehaviours:derive$1([].concat(_toConsumableArray(spec.dropdownBehaviours),[DisablingConfigs.button(function(){return spec.disabled||sharedBackstage.providers.isDisabled();}),receivingConfig(),Unselecting.config({}),Replacing.config({}),config('dropdown-events',[onControlAttached(spec,editorOffCell),onControlDetached(spec,editorOffCell)]),config('menubutton-update-display-text',[run$1(updateMenuText,function(comp,se){optMemDisplayText.bind(function(mem){return mem.getOpt(comp);}).each(function(displayText){Replacing.set(displayText,[text$1(sharedBackstage.providers.translate(se.event.text))]);});}),run$1(updateMenuIcon,function(comp,se){optMemDisplayIcon.bind(function(mem){return mem.getOpt(comp);}).each(function(displayIcon){Replacing.set(displayIcon,[renderReplacableIconFromPack(se.event.icon,sharedBackstage.providers.icons)]);});})])])),eventOrder:deepMerge(toolbarButtonEventOrder,{mousedown:['focusing','alloy.base.behaviour','item-type-events','normal-dropdown-events']}),sandboxBehaviours:derive$1([Keying.config({mode:'special',onLeft:onLeftOrRightInMenu,onRight:onLeftOrRightInMenu})]),lazySink:sharedBackstage.getSink,toggleClass:"".concat(prefix,"--active"),parts:{menu:part(false,spec.columns,spec.presets)},fetch:function fetch(comp){return Future.nu(curry(spec.fetch,comp));}})));return memDropdown.asSpec();};var isMenuItemReference=function isMenuItemReference(item){return isString(item);};var isSeparator$1=function isSeparator$1(item){return item.type==='separator';};var isExpandingMenuItem=function isExpandingMenuItem(item){return has$2(item,'getSubmenuItems');};var separator$2={type:'separator'};var unwrapReferences=function unwrapReferences(items,menuItems){var realItems=foldl(items,function(acc,item){if(isMenuItemReference(item)){if(item===''){return acc;}else if(item==='|'){return acc.length>0&&!isSeparator$1(acc[acc.length-1])?acc.concat([separator$2]):acc;}else if(has$2(menuItems,item.toLowerCase())){return acc.concat([menuItems[item.toLowerCase()]]);}else{return acc;}}else{return acc.concat([item]);}},[]);if(realItems.length>0&&isSeparator$1(realItems[realItems.length-1])){realItems.pop();}return realItems;};var getFromExpandingItem=function getFromExpandingItem(item,menuItems){var submenuItems=item.getSubmenuItems();var rest=expand(submenuItems,menuItems);var newMenus=deepMerge(rest.menus,wrap$1(item.value,rest.items));var newExpansions=deepMerge(rest.expansions,wrap$1(item.value,item.value));return{item:item,menus:newMenus,expansions:newExpansions};};var getFromItem=function getFromItem(item,menuItems){return isExpandingMenuItem(item)?getFromExpandingItem(item,menuItems):{item:item,menus:{},expansions:{}};};var generateValueIfRequired=function generateValueIfRequired(item){if(isSeparator$1(item)){return item;}else{var itemValue=get$g(item,'value').getOrThunk(function(){return generate$6('generated-menu-item');});return deepMerge({value:itemValue},item);}};var expand=function expand(items,menuItems){var realItems=unwrapReferences(isString(items)?items.split(' '):items,menuItems);return foldr(realItems,function(acc,item){var itemWithValue=generateValueIfRequired(item);var newData=getFromItem(itemWithValue,menuItems);return{menus:deepMerge(acc.menus,newData.menus),items:[newData.item].concat(acc.items),expansions:deepMerge(acc.expansions,newData.expansions)};},{menus:{},expansions:{},items:[]});};var build=function build(items,itemResponse,backstage,isHorizontalMenu){var primary=generate$6('primary-menu');var data=expand(items,backstage.shared.providers.menuItems());if(data.items.length===0){return Optional.none();}var mainMenu=createPartialMenu(primary,data.items,itemResponse,backstage,isHorizontalMenu);var submenus=map$1(data.menus,function(menuItems,menuName){return createPartialMenu(menuName,menuItems,itemResponse,backstage,false);});var menus=deepMerge(submenus,wrap$1(primary,mainMenu));return Optional.from(tieredMenu.tieredData(primary,menus,data.expansions));};var isSingleListItem=function isSingleListItem(item){return!has$2(item,'items');};var dataAttribute='data-value';var fetchItems=function fetchItems(dropdownComp,name,items,selectedValue){return map$2(items,function(item){if(!isSingleListItem(item)){return{type:'nestedmenuitem',text:item.text,getSubmenuItems:function getSubmenuItems(){return fetchItems(dropdownComp,name,item.items,selectedValue);}};}else{return{type:'togglemenuitem',text:item.text,value:item.value,active:item.value===selectedValue,onAction:function onAction(){Representing.setValue(dropdownComp,item.value);emitWith(dropdownComp,formChangeEvent,{name:name});Focusing.focus(dropdownComp);}};}});};var findItemByValue=function findItemByValue(items,value){return findMap(items,function(item){if(!isSingleListItem(item)){return findItemByValue(item.items,value);}else{return someIf(item.value===value,item);}});};var renderListBox=function renderListBox(spec,backstage,initialData){var providersBackstage=backstage.shared.providers;var initialItem=initialData.bind(function(value){return findItemByValue(spec.items,value);}).orThunk(function(){return head(spec.items).filter(isSingleListItem);});var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var pField=FormField.parts.field({dom:{},factory:{sketch:function sketch(sketchSpec){return renderCommonDropdown({uid:sketchSpec.uid,text:initialItem.map(function(item){return item.text;}),icon:Optional.none(),tooltip:spec.label,role:Optional.none(),fetch:function fetch(comp,callback){var items=fetchItems(comp,spec.name,spec.items,Representing.getValue(comp));callback(build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,false));},onSetup:constant$1(noop),getApi:constant$1({}),columns:1,presets:'normal',classes:[],dropdownBehaviours:[Tabstopping.config({}),RepresentingConfigs.withComp(initialItem.map(function(item){return item.value;}),function(comp){return get$f(comp.element,dataAttribute);},function(comp,data){findItemByValue(spec.items,data).each(function(item){set$9(comp.element,dataAttribute,item.value);emitWith(comp,updateMenuText,{text:item.text});});})]},'tox-listbox',backstage.shared);}}});var listBoxWrap={dom:{tag:'div',classes:['tox-listboxfield']},components:[pField]};return FormField.sketch({dom:{tag:'div',classes:['tox-form__group']},components:flatten([pLabel.toArray(),[listBoxWrap]]),fieldBehaviours:derive$1([Disabling.config({disabled:constant$1(!spec.enabled),onDisabled:function onDisabled(comp){FormField.getField(comp).each(Disabling.disable);},onEnabled:function onEnabled(comp){FormField.getField(comp).each(Disabling.enable);}})])});};var renderPanel=function renderPanel(spec,backstage){return{dom:{tag:'div',classes:spec.classes},components:map$2(spec.items,backstage.shared.interpreter)};};var factory$f=function factory$f(detail,_spec){var options=map$2(detail.options,function(option){return{dom:{tag:'option',value:option.value,innerHtml:option.text}};});var initialValues=detail.data.map(function(v){return wrap$1('initialValue',v);}).getOr({});return{uid:detail.uid,dom:{tag:'select',classes:detail.selectClasses,attributes:detail.selectAttributes},components:options,behaviours:augment(detail.selectBehaviours,[Focusing.config({}),Representing.config({store:_objectSpread({mode:'manual',getValue:function getValue(select){return get$6(select.element);},setValue:function setValue(select,newValue){var found=find$5(detail.options,function(opt){return opt.value===newValue;});if(found.isSome()){set$5(select.element,newValue);}}},initialValues)})])};};var HtmlSelect=single({name:'HtmlSelect',configFields:[required$1('options'),field('selectBehaviours',[Focusing,Representing]),defaulted('selectClasses',[]),defaulted('selectAttributes',{}),option$3('data')],factory:factory$f});var renderSelectBox=function renderSelectBox(spec,providersBackstage,initialData){var translatedOptions=map$2(spec.items,function(item){return{text:providersBackstage.translate(item.text),value:item.value};});var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var pField=FormField.parts.field(_objectSpread({dom:{}},initialData.map(function(data){return{data:data};}).getOr({}),{selectAttributes:{size:spec.size},options:translatedOptions,factory:HtmlSelect,selectBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();}}),Tabstopping.config({}),config('selectbox-change',[run$1(change(),function(component,_){emitWith(component,formChangeEvent,{name:spec.name});})])])}));var chevron=spec.size>1?Optional.none():Optional.some(render$3('chevron-down',{tag:'div',classes:['tox-selectfield__icon-js']},providersBackstage.icons));var selectWrap={dom:{tag:'div',classes:['tox-selectfield']},components:flatten([[pField],chevron.toArray()])};return FormField.sketch({dom:{tag:'div',classes:['tox-form__group']},components:flatten([pLabel.toArray(),[selectWrap]]),fieldBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();},onDisabled:function onDisabled(comp){FormField.getField(comp).each(Disabling.disable);},onEnabled:function onEnabled(comp){FormField.getField(comp).each(Disabling.enable);}}),receivingConfig()])});};var schema$h=constant$1([defaulted('field1Name','field1'),defaulted('field2Name','field2'),onStrictHandler('onLockedChange'),markers$1(['lockClass']),defaulted('locked',false),SketchBehaviours.field('coupledFieldBehaviours',[Composing,Representing])]);var getField=function getField(comp,detail,partName){return getPart(comp,detail,partName).bind(Composing.getCurrent);};var coupledPart=function coupledPart(selfName,otherName){return required({factory:FormField,name:selfName,overrides:function overrides(detail){return{fieldBehaviours:derive$1([config('coupled-input-behaviour',[run$1(input(),function(me){getField(me,detail,otherName).each(function(other){getPart(me,detail,'lock').each(function(lock){if(Toggling.isOn(lock)){detail.onLockedChange(me,other,lock);}});});})])])};}});};var parts$c=constant$1([coupledPart('field1','field2'),coupledPart('field2','field1'),required({factory:Button,schema:[required$1('dom')],name:'lock',overrides:function overrides(detail){return{buttonBehaviours:derive$1([Toggling.config({selected:detail.locked,toggleClass:detail.markers.lockClass,aria:{mode:'pressed'}})])};}})]);var factory$e=function factory$e(detail,components,_spec,_externals){return{uid:detail.uid,dom:detail.dom,components:components,behaviours:SketchBehaviours.augment(detail.coupledFieldBehaviours,[Composing.config({find:Optional.some}),Representing.config({store:{mode:'manual',getValue:function getValue(comp){var _ref9;var parts=getPartsOrDie(comp,detail,['field1','field2']);return _ref9={},_defineProperty(_ref9,detail.field1Name,Representing.getValue(parts.field1())),_defineProperty(_ref9,detail.field2Name,Representing.getValue(parts.field2())),_ref9;},setValue:function setValue(comp,value){var parts=getPartsOrDie(comp,detail,['field1','field2']);if(hasNonNullableKey(value,detail.field1Name)){Representing.setValue(parts.field1(),value[detail.field1Name]);}if(hasNonNullableKey(value,detail.field2Name)){Representing.setValue(parts.field2(),value[detail.field2Name]);}}}})]),apis:{getField1:function getField1(component){return getPart(component,detail,'field1');},getField2:function getField2(component){return getPart(component,detail,'field2');},getLock:function getLock(component){return getPart(component,detail,'lock');}}};};var FormCoupledInputs=composite({name:'FormCoupledInputs',configFields:schema$h(),partFields:parts$c(),factory:factory$e,apis:{getField1:function getField1(apis,component){return apis.getField1(component);},getField2:function getField2(apis,component){return apis.getField2(component);},getLock:function getLock(apis,component){return apis.getLock(component);}}});var formatSize=function formatSize(size){var unitDec={'':0,'px':0,'pt':1,'mm':1,'pc':2,'ex':2,'em':2,'ch':2,'rem':2,'cm':3,'in':4,'%':4};var maxDecimal=function maxDecimal(unit){return unit in unitDec?unitDec[unit]:1;};var numText=size.value.toFixed(maxDecimal(size.unit));if(numText.indexOf('.')!==-1){numText=numText.replace(/\.?0*$/,'');}return numText+size.unit;};var parseSize=function parseSize(sizeText){var numPattern=/^\s*(\d+(?:\.\d+)?)\s*(|cm|mm|in|px|pt|pc|em|ex|ch|rem|vw|vh|vmin|vmax|%)\s*$/;var match=numPattern.exec(sizeText);if(match!==null){var _value3=parseFloat(match[1]);var unit=match[2];return Result.value({value:_value3,unit:unit});}else{return Result.error(sizeText);}};var convertUnit=function convertUnit(size,unit){var inInch={'':96,'px':96,'pt':72,'cm':2.54,'pc':12,'mm':25.4,'in':1};var supported=function supported(u){return has$2(inInch,u);};if(size.unit===unit){return Optional.some(size.value);}else if(supported(size.unit)&&supported(unit)){if(inInch[size.unit]===inInch[unit]){return Optional.some(size.value);}else{return Optional.some(size.value/inInch[size.unit]*inInch[unit]);}}else{return Optional.none();}};var noSizeConversion=function noSizeConversion(_input){return Optional.none();};var ratioSizeConversion=function ratioSizeConversion(scale,unit){return function(size){return convertUnit(size,unit).map(function(value){return{value:value*scale,unit:unit};});};};var makeRatioConverter=function makeRatioConverter(currentFieldText,otherFieldText){var cValue=parseSize(currentFieldText).toOptional();var oValue=parseSize(otherFieldText).toOptional();return lift2(cValue,oValue,function(cSize,oSize){return convertUnit(cSize,oSize.unit).map(function(val){return oSize.value/val;}).map(function(r){return ratioSizeConversion(r,oSize.unit);}).getOr(noSizeConversion);}).getOr(noSizeConversion);};var renderSizeInput=function renderSizeInput(spec,providersBackstage){var converter=noSizeConversion;var ratioEvent=generate$6('ratio-event');var makeIcon=function makeIcon(iconName){return render$3(iconName,{tag:'span',classes:['tox-icon','tox-lock-icon__'+iconName]},providersBackstage.icons);};var pLock=FormCoupledInputs.parts.lock({dom:{tag:'button',classes:['tox-lock','tox-button','tox-button--naked','tox-button--icon'],attributes:{title:providersBackstage.translate(spec.label.getOr('Constrain proportions'))}},components:[makeIcon('lock'),makeIcon('unlock')],buttonBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();}}),receivingConfig(),Tabstopping.config({})])});var formGroup=function formGroup(components){return{dom:{tag:'div',classes:['tox-form__group']},components:components};};var getFieldPart=function getFieldPart(isField1){return FormField.parts.field({factory:Input,inputClasses:['tox-textfield'],inputBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();}}),receivingConfig(),Tabstopping.config({}),config('size-input-events',[run$1(focusin(),function(component,_simulatedEvent){emitWith(component,ratioEvent,{isField1:isField1});}),run$1(change(),function(component,_simulatedEvent){emitWith(component,formChangeEvent,{name:spec.name});})])]),selectOnFocus:false});};var getLabel=function getLabel(label){return{dom:{tag:'label',classes:['tox-label']},components:[text$1(providersBackstage.translate(label))]};};var widthField=FormCoupledInputs.parts.field1(formGroup([FormField.parts.label(getLabel('Width')),getFieldPart(true)]));var heightField=FormCoupledInputs.parts.field2(formGroup([FormField.parts.label(getLabel('Height')),getFieldPart(false)]));return FormCoupledInputs.sketch({dom:{tag:'div',classes:['tox-form__group']},components:[{dom:{tag:'div',classes:['tox-form__controls-h-stack']},components:[widthField,heightField,formGroup([getLabel(nbsp),pLock])]}],field1Name:'width',field2Name:'height',locked:true,markers:{lockClass:'tox-locked'},onLockedChange:function onLockedChange(current,other,_lock){parseSize(Representing.getValue(current)).each(function(size){converter(size).each(function(newSize){Representing.setValue(other,formatSize(newSize));});});},coupledFieldBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();},onDisabled:function onDisabled(comp){FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.disable);FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.disable);FormCoupledInputs.getLock(comp).each(Disabling.disable);},onEnabled:function onEnabled(comp){FormCoupledInputs.getField1(comp).bind(FormField.getField).each(Disabling.enable);FormCoupledInputs.getField2(comp).bind(FormField.getField).each(Disabling.enable);FormCoupledInputs.getLock(comp).each(Disabling.enable);}}),receivingConfig(),config('size-input-events2',[run$1(ratioEvent,function(component,simulatedEvent){var isField1=simulatedEvent.event.isField1;var optCurrent=isField1?FormCoupledInputs.getField1(component):FormCoupledInputs.getField2(component);var optOther=isField1?FormCoupledInputs.getField2(component):FormCoupledInputs.getField1(component);var value1=optCurrent.map(Representing.getValue).getOr('');var value2=optOther.map(Representing.getValue).getOr('');converter=makeRatioConverter(value1,value2);})])])});};var renderSlider=function renderSlider(spec,providerBackstage,initialData){var labelPart=Slider.parts.label({dom:{tag:'label',classes:['tox-label']},components:[text$1(providerBackstage.translate(spec.label))]});var spectrum=Slider.parts.spectrum({dom:{tag:'div',classes:['tox-slider__rail'],attributes:{role:'presentation'}}});var thumb=Slider.parts.thumb({dom:{tag:'div',classes:['tox-slider__handle'],attributes:{role:'presentation'}}});return Slider.sketch({dom:{tag:'div',classes:['tox-slider'],attributes:{role:'presentation'}},model:{mode:'x',minX:spec.min,maxX:spec.max,getInitialValue:constant$1(initialData.getOrThunk(function(){return(Math.abs(spec.max)-Math.abs(spec.min))/2;}))},components:[labelPart,spectrum,thumb],sliderBehaviours:derive$1([ComposingConfigs.self(),Focusing.config({})]),onChoose:function onChoose(component,thumb,value){emitWith(component,formChangeEvent,{name:spec.name,value:value});}});};var renderTable=function renderTable(spec,providersBackstage){var renderTh=function renderTh(text){return{dom:{tag:'th',innerHtml:providersBackstage.translate(text)}};};var renderHeader=function renderHeader(header){return{dom:{tag:'thead'},components:[{dom:{tag:'tr'},components:map$2(header,renderTh)}]};};var renderTd=function renderTd(text){return{dom:{tag:'td',innerHtml:providersBackstage.translate(text)}};};var renderTr=function renderTr(row){return{dom:{tag:'tr'},components:map$2(row,renderTd)};};var renderRows=function renderRows(rows){return{dom:{tag:'tbody'},components:map$2(rows,renderTr)};};return{dom:{tag:'table',classes:['tox-dialog__table']},components:[renderHeader(spec.header),renderRows(spec.cells)],behaviours:derive$1([Tabstopping.config({}),Focusing.config({})])};};var renderTextField=function renderTextField(spec,providersBackstage){var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var baseInputBehaviours=[Disabling.config({disabled:function disabled(){return spec.disabled||providersBackstage.isDisabled();}}),receivingConfig(),Keying.config({mode:'execution',useEnter:spec.multiline!==true,useControlEnter:spec.multiline===true,execute:function execute(comp){emit(comp,formSubmitEvent);return Optional.some(true);}}),config('textfield-change',[run$1(input(),function(component,_){emitWith(component,formChangeEvent,{name:spec.name});}),run$1(postPaste(),function(component,_){emitWith(component,formChangeEvent,{name:spec.name});})]),Tabstopping.config({})];var validatingBehaviours=spec.validation.map(function(vl){return Invalidating.config({getRoot:function getRoot(input){return parentElement(input.element);},invalidClass:'tox-invalid',validator:{validate:function validate(input){var v=Representing.getValue(input);var result=vl.validator(v);return Future.pure(result===true?Result.value(v):Result.error(result));},validateOnLoad:vl.validateOnLoad}});}).toArray();var placeholder=spec.placeholder.fold(constant$1({}),function(p){return{placeholder:providersBackstage.translate(p)};});var inputMode=spec.inputMode.fold(constant$1({}),function(mode){return{inputmode:mode};});var inputAttributes=_objectSpread({},placeholder,{},inputMode);var pField=FormField.parts.field(_objectSpread({tag:spec.multiline===true?'textarea':'input'},spec.data.map(function(data){return{data:data};}).getOr({}),{inputAttributes:inputAttributes,inputClasses:[spec.classname],inputBehaviours:derive$1(flatten([baseInputBehaviours,validatingBehaviours])),selectOnFocus:false,factory:Input}));var extraClasses=spec.flex?['tox-form__group--stretched']:[];var extraClasses2=extraClasses.concat(spec.maximized?['tox-form-group--maximize']:[]);var extraBehaviours=[Disabling.config({disabled:function disabled(){return spec.disabled||providersBackstage.isDisabled();},onDisabled:function onDisabled(comp){FormField.getField(comp).each(Disabling.disable);},onEnabled:function onEnabled(comp){FormField.getField(comp).each(Disabling.enable);}}),receivingConfig()];return renderFormFieldWith(pLabel,pField,extraClasses2,extraBehaviours);};var renderInput=function renderInput(spec,providersBackstage,initialData){return renderTextField({name:spec.name,multiline:false,label:spec.label,inputMode:spec.inputMode,placeholder:spec.placeholder,flex:false,disabled:!spec.enabled,classname:'tox-textfield',validation:Optional.none(),maximized:spec.maximized,data:initialData},providersBackstage);};var renderTextarea=function renderTextarea(spec,providersBackstage,initialData){return renderTextField({name:spec.name,multiline:true,label:spec.label,inputMode:Optional.none(),placeholder:spec.placeholder,flex:true,disabled:!spec.enabled,classname:'tox-textarea',validation:Optional.none(),maximized:spec.maximized,data:initialData},providersBackstage);};var events$6=function events$6(streamConfig,streamState){var streams=streamConfig.stream.streams;var processor=streams.setup(streamConfig,streamState);return derive$2([run$1(streamConfig.event,processor),runOnDetached(function(){return streamState.cancel();})].concat(streamConfig.cancelEvent.map(function(e){return[run$1(e,function(){return streamState.cancel();})];}).getOr([])));};var ActiveStreaming=/*#__PURE__*/Object.freeze({__proto__:null,events:events$6});var first=function first(fn,rate){var timer=null;var cancel=function cancel(){if(!isNull(timer)){clearTimeout(timer);timer=null;}};var throttle=function throttle(){for(var _len15=arguments.length,args=new Array(_len15),_key16=0;_key16<_len15;_key16++){args[_key16]=arguments[_key16];}if(isNull(timer)){timer=setTimeout(function(){timer=null;fn.apply(null,args);},rate);}};return{cancel:cancel,throttle:throttle};};var last=function last(fn,rate){var timer=null;var cancel=function cancel(){if(!isNull(timer)){clearTimeout(timer);timer=null;}};var throttle=function throttle(){for(var _len16=arguments.length,args=new Array(_len16),_key17=0;_key17<_len16;_key17++){args[_key17]=arguments[_key17];}cancel();timer=setTimeout(function(){timer=null;fn.apply(null,args);},rate);};return{cancel:cancel,throttle:throttle};};var throttle=function throttle(_config){var state=Cell(null);var readState=function readState(){return{timer:state.get()!==null?'set':'unset'};};var setTimer=function setTimer(t){state.set(t);};var cancel=function cancel(){var t=state.get();if(t!==null){t.cancel();}};return nu$8({readState:readState,setTimer:setTimer,cancel:cancel});};var init$9=function init$9(spec){return spec.stream.streams.state(spec);};var StreamingState=/*#__PURE__*/Object.freeze({__proto__:null,throttle:throttle,init:init$9});var setup$c=function setup$c(streamInfo,streamState){var sInfo=streamInfo.stream;var throttler=last(streamInfo.onStream,sInfo.delay);streamState.setTimer(throttler);return function(component,simulatedEvent){throttler.throttle(component,simulatedEvent);if(sInfo.stopEvent){simulatedEvent.stop();}};};var StreamingSchema=[requiredOf('stream',choose$1('mode',{throttle:[required$1('delay'),defaulted('stopEvent',true),output$1('streams',{setup:setup$c,state:throttle})]})),defaulted('event','input'),option$3('cancelEvent'),onStrictHandler('onStream')];var Streaming=create$3({fields:StreamingSchema,name:'streaming',active:ActiveStreaming,state:StreamingState});var setValueFromItem=function setValueFromItem(model,input,item){var itemData=Representing.getValue(item);Representing.setValue(input,itemData);setCursorAtEnd(input);};var setSelectionOn=function setSelectionOn(input,f){var el=input.element;var value=get$6(el);var node=el.dom;if(get$f(el,'type')!=='number'){f(node,value);}};var setCursorAtEnd=function setCursorAtEnd(input){setSelectionOn(input,function(node,value){return node.setSelectionRange(value.length,value.length);});};var setSelectionToEnd=function setSelectionToEnd(input,startOffset){setSelectionOn(input,function(node,value){return node.setSelectionRange(startOffset,value.length);});};var attemptSelectOver=function attemptSelectOver(model,input,item){if(!model.selectsOver){return Optional.none();}else{var _currentValue=Representing.getValue(input);var inputDisplay=model.getDisplayText(_currentValue);var itemValue=Representing.getValue(item);var itemDisplay=model.getDisplayText(itemValue);return itemDisplay.indexOf(inputDisplay)===0?Optional.some(function(){setValueFromItem(model,input,item);setSelectionToEnd(input,inputDisplay.length);}):Optional.none();}};var itemExecute=constant$1('alloy.typeahead.itemexecute');var make$3=function make$3(detail,components,spec,externals){var navigateList=function navigateList(comp,simulatedEvent,highlighter){detail.previewing.set(false);var sandbox=Coupling.getCoupled(comp,'sandbox');if(Sandboxing.isOpen(sandbox)){Composing.getCurrent(sandbox).each(function(menu){Highlighting.getHighlighted(menu).fold(function(){highlighter(menu);},function(){dispatchEvent(sandbox,menu.element,'keydown',simulatedEvent);});});}else{var onOpenSync=function onOpenSync(sandbox){Composing.getCurrent(sandbox).each(highlighter);};open(detail,mapFetch(comp),comp,sandbox,externals,onOpenSync,HighlightOnOpen.HighlightFirst).get(noop);}};var focusBehaviours$1=focusBehaviours(detail);var mapFetch=function mapFetch(comp){return function(tdata){return tdata.map(function(data){var menus=values(data.menus);var items=bind$3(menus,function(menu){return filter$2(menu.items,function(item){return item.type==='item';});});var repState=Representing.getState(comp);repState.update(map$2(items,function(item){return item.data;}));return data;});};};var behaviours=[Focusing.config({}),Representing.config({onSetValue:detail.onSetValue,store:_objectSpread({mode:'dataset',getDataKey:function getDataKey(comp){return get$6(comp.element);},getFallbackEntry:function getFallbackEntry(itemString){return{value:itemString,meta:{}};},setValue:function setValue(comp,data){set$5(comp.element,detail.model.getDisplayText(data));}},detail.initialData.map(function(d){return wrap$1('initialValue',d);}).getOr({}))}),Streaming.config({stream:{mode:'throttle',delay:detail.responseTime,stopEvent:false},onStream:function onStream(component,_simulatedEvent){var sandbox=Coupling.getCoupled(component,'sandbox');var focusInInput=Focusing.isFocused(component);if(focusInInput){if(get$6(component.element).length>=detail.minChars){var previousValue=Composing.getCurrent(sandbox).bind(function(menu){return Highlighting.getHighlighted(menu).map(Representing.getValue);});detail.previewing.set(true);var onOpenSync=function onOpenSync(_sandbox){Composing.getCurrent(sandbox).each(function(menu){previousValue.fold(function(){if(detail.model.selectsOver){Highlighting.highlightFirst(menu);}},function(pv){Highlighting.highlightBy(menu,function(item){var itemData=Representing.getValue(item);return itemData.value===pv.value;});Highlighting.getHighlighted(menu).orThunk(function(){Highlighting.highlightFirst(menu);return Optional.none();});});});};open(detail,mapFetch(component),component,sandbox,externals,onOpenSync,HighlightOnOpen.HighlightFirst).get(noop);}}},cancelEvent:typeaheadCancel()}),Keying.config({mode:'special',onDown:function onDown(comp,simulatedEvent){navigateList(comp,simulatedEvent,Highlighting.highlightFirst);return Optional.some(true);},onEscape:function onEscape(comp){var sandbox=Coupling.getCoupled(comp,'sandbox');if(Sandboxing.isOpen(sandbox)){Sandboxing.close(sandbox);return Optional.some(true);}return Optional.none();},onUp:function onUp(comp,simulatedEvent){navigateList(comp,simulatedEvent,Highlighting.highlightLast);return Optional.some(true);},onEnter:function onEnter(comp){var sandbox=Coupling.getCoupled(comp,'sandbox');var sandboxIsOpen=Sandboxing.isOpen(sandbox);if(sandboxIsOpen&&!detail.previewing.get()){return Composing.getCurrent(sandbox).bind(function(menu){return Highlighting.getHighlighted(menu);}).map(function(item){emitWith(comp,itemExecute(),{item:item});return true;});}else{var _currentValue2=Representing.getValue(comp);emit(comp,typeaheadCancel());detail.onExecute(sandbox,comp,_currentValue2);if(sandboxIsOpen){Sandboxing.close(sandbox);}return Optional.some(true);}}}),Toggling.config({toggleClass:detail.markers.openClass,aria:{mode:'expanded'}}),Coupling.config({others:{sandbox:function sandbox(hotspot){return makeSandbox$1(detail,hotspot,{onOpen:function onOpen(){return Toggling.on(hotspot);},onClose:function onClose(){return Toggling.off(hotspot);}});}}}),config('typeaheadevents',[runOnExecute$1(function(comp){var onOpenSync=noop;togglePopup(detail,mapFetch(comp),comp,externals,onOpenSync,HighlightOnOpen.HighlightFirst).get(noop);}),run$1(itemExecute(),function(comp,se){var sandbox=Coupling.getCoupled(comp,'sandbox');setValueFromItem(detail.model,comp,se.event.item);emit(comp,typeaheadCancel());detail.onItemExecute(comp,sandbox,se.event.item,Representing.getValue(comp));Sandboxing.close(sandbox);setCursorAtEnd(comp);})].concat(detail.dismissOnBlur?[run$1(postBlur(),function(typeahead){var sandbox=Coupling.getCoupled(typeahead,'sandbox');if(search(sandbox.element).isNone()){Sandboxing.close(sandbox);}})]:[]))];return{uid:detail.uid,dom:dom(deepMerge(detail,{inputAttributes:{'role':'combobox','aria-autocomplete':'list','aria-haspopup':'true'}})),behaviours:_objectSpread({},focusBehaviours$1,{},augment(detail.typeaheadBehaviours,behaviours)),eventOrder:detail.eventOrder};};var schema$g=constant$1([option$3('lazySink'),required$1('fetch'),defaulted('minChars',5),defaulted('responseTime',1000),onHandler('onOpen'),defaulted('getHotspot',Optional.some),defaulted('getAnchorOverrides',constant$1({})),defaulted('layouts',Optional.none()),defaulted('eventOrder',{}),defaultedObjOf('model',{},[defaulted('getDisplayText',function(itemData){return itemData.meta!==undefined&&itemData.meta.text!==undefined?itemData.meta.text:itemData.value;}),defaulted('selectsOver',true),defaulted('populateFromBrowse',true)]),onHandler('onSetValue'),onKeyboardHandler('onExecute'),onHandler('onItemExecute'),defaulted('inputClasses',[]),defaulted('inputAttributes',{}),defaulted('inputStyles',{}),defaulted('matchWidth',true),defaulted('useMinWidth',false),defaulted('dismissOnBlur',true),markers$1(['openClass']),option$3('initialData'),field('typeaheadBehaviours',[Focusing,Representing,Streaming,Keying,Toggling,Coupling]),customField('previewing',function(){return Cell(true);})].concat(schema$k()).concat(sandboxFields()));var parts$b=constant$1([external({schema:[tieredMenuMarkers()],name:'menu',overrides:function overrides(detail){return{fakeFocus:true,onHighlight:function onHighlight(menu,item){if(!detail.previewing.get()){menu.getSystem().getByUid(detail.uid).each(function(input){if(detail.model.populateFromBrowse){setValueFromItem(detail.model,input,item);}});}else{menu.getSystem().getByUid(detail.uid).each(function(input){attemptSelectOver(detail.model,input,item).fold(function(){return Highlighting.dehighlight(menu,item);},function(fn){return fn();});});}detail.previewing.set(false);},onExecute:function onExecute(menu,item){return menu.getSystem().getByUid(detail.uid).toOptional().map(function(typeahead){emitWith(typeahead,itemExecute(),{item:item});return true;});},onHover:function onHover(menu,item){detail.previewing.set(false);menu.getSystem().getByUid(detail.uid).each(function(input){if(detail.model.populateFromBrowse){setValueFromItem(detail.model,input,item);}});}};}})]);var Typeahead=composite({name:'Typeahead',configFields:schema$g(),partFields:parts$b(),factory:make$3});var wrap=function wrap(delegate){var toCached=function toCached(){return wrap(delegate.toCached());};var bindFuture=function bindFuture(f){return wrap(delegate.bind(function(resA){return resA.fold(function(err){return Future.pure(Result.error(err));},function(a){return f(a);});}));};var bindResult=function bindResult(f){return wrap(delegate.map(function(resA){return resA.bind(f);}));};var mapResult=function mapResult(f){return wrap(delegate.map(function(resA){return resA.map(f);}));};var mapError=function mapError(f){return wrap(delegate.map(function(resA){return resA.mapError(f);}));};var foldResult=function foldResult(whenError,whenValue){return delegate.map(function(res){return res.fold(whenError,whenValue);});};var withTimeout=function withTimeout(timeout,errorThunk){return wrap(Future.nu(function(callback){var timedOut=false;var timer=setTimeout(function(){timedOut=true;callback(Result.error(errorThunk()));},timeout);delegate.get(function(result){if(!timedOut){clearTimeout(timer);callback(result);}});}));};return _objectSpread({},delegate,{toCached:toCached,bindFuture:bindFuture,bindResult:bindResult,mapResult:mapResult,mapError:mapError,foldResult:foldResult,withTimeout:withTimeout});};var nu$1=function nu$1(worker){return wrap(Future.nu(worker));};var value=function value(_value4){return wrap(Future.pure(Result.value(_value4)));};var error=function error(_error){return wrap(Future.pure(Result.error(_error)));};var fromResult=function fromResult(result){return wrap(Future.pure(result));};var fromFuture=function fromFuture(future){return wrap(future.map(Result.value));};var fromPromise=function fromPromise(promise){return nu$1(function(completer){promise.then(function(value){completer(Result.value(value));},function(error){completer(Result.error(error));});});};var FutureResult={nu:nu$1,wrap:wrap,pure:value,value:value,error:error,fromResult:fromResult,fromFuture:fromFuture,fromPromise:fromPromise};var getMenuButtonApi=function getMenuButtonApi(component){return{isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);},setActive:function setActive(state){var elm=component.element;if(state){add$2(elm,'tox-tbtn--enabled');set$9(elm,'aria-pressed',true);}else{remove$2(elm,'tox-tbtn--enabled');remove$7(elm,'aria-pressed');}},isActive:function isActive(){return has(component.element,'tox-tbtn--enabled');}};};var renderMenuButton=function renderMenuButton(spec,prefix,backstage,role){return renderCommonDropdown({text:spec.text,icon:spec.icon,tooltip:spec.tooltip,role:role,fetch:function fetch(_comp,callback){spec.fetch(function(items){callback(build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,false));});},onSetup:spec.onSetup,getApi:getMenuButtonApi,columns:1,presets:'normal',classes:[],dropdownBehaviours:[Tabstopping.config({})]},prefix,backstage.shared);};var getFetch=function getFetch(items,getButton,backstage){var getMenuItemAction=function getMenuItemAction(item){return function(api){var newValue=!api.isActive();api.setActive(newValue);item.storage.set(newValue);backstage.shared.getSink().each(function(sink){getButton().getOpt(sink).each(function(orig){focus$3(orig.element);emitWith(orig,formActionEvent,{name:item.name,value:item.storage.get()});});});};};var getMenuItemSetup=function getMenuItemSetup(item){return function(api){api.setActive(item.storage.get());};};return function(success){success(map$2(items,function(item){var text=item.text.fold(function(){return{};},function(text){return{text:text};});return _objectSpread({type:item.type,active:false},text,{onAction:getMenuItemAction(item),onSetup:getMenuItemSetup(item)});}));};};var renderCommonSpec=function renderCommonSpec(spec,actionOpt){var extraBehaviours=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var dom=arguments.length>3?arguments[3]:undefined;var components=arguments.length>4?arguments[4]:undefined;var providersBackstage=arguments.length>5?arguments[5]:undefined;var action=actionOpt.fold(function(){return{};},function(action){return{action:action};});var common=_objectSpread({buttonBehaviours:derive$1([DisablingConfigs.button(function(){return!spec.enabled||providersBackstage.isDisabled();}),receivingConfig(),Tabstopping.config({}),config('button press',[preventDefault('click'),preventDefault('mousedown')])].concat(extraBehaviours)),eventOrder:{click:['button press','alloy.base.behaviour'],mousedown:['button press','alloy.base.behaviour']}},action);var domFinal=deepMerge(common,{dom:dom});return deepMerge(domFinal,{components:components});};var renderIconButtonSpec=function renderIconButtonSpec(spec,action,providersBackstage){var extraBehaviours=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var tooltipAttributes=spec.tooltip.map(function(tooltip){return{'aria-label':providersBackstage.translate(tooltip),'title':providersBackstage.translate(tooltip)};}).getOr({});var dom={tag:'button',classes:['tox-tbtn'],attributes:tooltipAttributes};var icon=spec.icon.map(function(iconName){return renderIconFromPack(iconName,providersBackstage.icons);});var components=componentRenderPipeline([icon]);return renderCommonSpec(spec,action,extraBehaviours,dom,components,providersBackstage);};var calculateClassesFromButtonType=function calculateClassesFromButtonType(buttonType){switch(buttonType){case'primary':return['tox-button'];case'toolbar':return['tox-tbtn'];case'secondary':default:return['tox-button','tox-button--secondary'];}};var renderButtonSpec=function renderButtonSpec(spec,action,providersBackstage){var extraBehaviours=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var extraClasses=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var translatedText=providersBackstage.translate(spec.text);var icon=spec.icon.map(function(iconName){return renderIconFromPack(iconName,providersBackstage.icons);});var components=[icon.getOrThunk(function(){return text$1(translatedText);})];var buttonType=spec.buttonType.getOr(!spec.primary&&!spec.borderless?'secondary':'primary');var baseClasses=calculateClassesFromButtonType(buttonType);var classes=[].concat(_toConsumableArray(baseClasses),_toConsumableArray(icon.isSome()?['tox-button--icon']:[]),_toConsumableArray(spec.borderless?['tox-button--naked']:[]),_toConsumableArray(extraClasses));var dom={tag:'button',classes:classes,attributes:{title:translatedText}};return renderCommonSpec(spec,action,extraBehaviours,dom,components,providersBackstage);};var renderButton=function renderButton(spec,action,providersBackstage){var extraBehaviours=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];var extraClasses=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var buttonSpec=renderButtonSpec(spec,Optional.some(action),providersBackstage,extraBehaviours,extraClasses);return Button.sketch(buttonSpec);};var getAction=function getAction(name,buttonType){return function(comp){if(buttonType==='custom'){emitWith(comp,formActionEvent,{name:name,value:{}});}else if(buttonType==='submit'){emit(comp,formSubmitEvent);}else if(buttonType==='cancel'){emit(comp,formCancelEvent);}else{console.error('Unknown button type: ',buttonType);}};};var isMenuFooterButtonSpec=function isMenuFooterButtonSpec(spec,buttonType){return buttonType==='menu';};var isNormalFooterButtonSpec=function isNormalFooterButtonSpec(spec,buttonType){return buttonType==='custom'||buttonType==='cancel'||buttonType==='submit';};var renderFooterButton=function renderFooterButton(spec,buttonType,backstage){if(isMenuFooterButtonSpec(spec,buttonType)){var getButton=function getButton(){return memButton;};var menuButtonSpec=spec;var fixedSpec=_objectSpread({},spec,{onSetup:function onSetup(api){api.setEnabled(spec.enabled);return noop;},fetch:getFetch(menuButtonSpec.items,getButton,backstage)});var memButton=record(renderMenuButton(fixedSpec,'tox-tbtn',backstage,Optional.none()));return memButton.asSpec();}else if(isNormalFooterButtonSpec(spec,buttonType)){var action=getAction(spec.name,buttonType);var buttonSpec=_objectSpread({},spec,{borderless:false});return renderButton(buttonSpec,action,backstage.shared.providers,[]);}else{console.error('Unknown footer button type: ',buttonType);}};var renderDialogButton=function renderDialogButton(spec,providersBackstage){var action=getAction(spec.name,'custom');return renderFormField(Optional.none(),FormField.parts.field(_objectSpread({factory:Button},renderButtonSpec(spec,Optional.some(action),providersBackstage,[RepresentingConfigs.memory(''),ComposingConfigs.self()]))));};var separator$1={type:'separator'};var toMenuItem=function toMenuItem(target){return{type:'menuitem',value:target.url,text:target.title,meta:{attach:target.attach},onAction:noop};};var staticMenuItem=function staticMenuItem(title,url){return{type:'menuitem',value:url,text:title,meta:{attach:undefined},onAction:noop};};var toMenuItems=function toMenuItems(targets){return map$2(targets,toMenuItem);};var filterLinkTargets=function filterLinkTargets(type,targets){return filter$2(targets,function(target){return target.type===type;});};var filteredTargets=function filteredTargets(type,targets){return toMenuItems(filterLinkTargets(type,targets));};var headerTargets=function headerTargets(linkInfo){return filteredTargets('header',linkInfo.targets);};var anchorTargets=function anchorTargets(linkInfo){return filteredTargets('anchor',linkInfo.targets);};var anchorTargetTop=function anchorTargetTop(linkInfo){return Optional.from(linkInfo.anchorTop).map(function(url){return staticMenuItem('<top>',url);}).toArray();};var anchorTargetBottom=function anchorTargetBottom(linkInfo){return Optional.from(linkInfo.anchorBottom).map(function(url){return staticMenuItem('<bottom>',url);}).toArray();};var historyTargets=function historyTargets(history){return map$2(history,function(url){return staticMenuItem(url,url);});};var joinMenuLists=function joinMenuLists(items){return foldl(items,function(a,b){var bothEmpty=a.length===0||b.length===0;return bothEmpty?a.concat(b):a.concat(separator$1,b);},[]);};var filterByQuery=function filterByQuery(term,menuItems){var lowerCaseTerm=term.toLowerCase();return filter$2(menuItems,function(item){var text=item.meta!==undefined&&item.meta.text!==undefined?item.meta.text:item.text;return contains$1(text.toLowerCase(),lowerCaseTerm)||contains$1(item.value.toLowerCase(),lowerCaseTerm);});};var getItems=function getItems(fileType,input,urlBackstage){var urlInputValue=Representing.getValue(input);var term=urlInputValue.meta.text!==undefined?urlInputValue.meta.text:urlInputValue.value;var info=urlBackstage.getLinkInformation();return info.fold(function(){return[];},function(linkInfo){var history=filterByQuery(term,historyTargets(urlBackstage.getHistory(fileType)));return fileType==='file'?joinMenuLists([history,filterByQuery(term,headerTargets(linkInfo)),filterByQuery(term,flatten([anchorTargetTop(linkInfo),anchorTargets(linkInfo),anchorTargetBottom(linkInfo)]))]):history;});};var errorId=generate$6('aria-invalid');var renderUrlInput=function renderUrlInput(spec,backstage,urlBackstage,initialData){var providersBackstage=backstage.shared.providers;var updateHistory=function updateHistory(component){var urlEntry=Representing.getValue(component);urlBackstage.addToHistory(urlEntry.value,spec.filetype);};var pField=FormField.parts.field(_objectSpread({factory:Typeahead},initialData.map(function(initialData){return{initialData:initialData};}).getOr({}),{dismissOnBlur:true,inputClasses:['tox-textfield'],sandboxClasses:['tox-dialog__popups'],inputAttributes:{'aria-errormessage':errorId,'type':'url'},minChars:0,responseTime:0,fetch:function fetch(input){var items=getItems(spec.filetype,input,urlBackstage);var tdata=build(items,ItemResponse$1.BUBBLE_TO_SANDBOX,backstage,false);return Future.pure(tdata);},getHotspot:function getHotspot(comp){return memUrlBox.getOpt(comp);},onSetValue:function onSetValue(comp,_newValue){if(comp.hasConfigured(Invalidating)){Invalidating.run(comp).get(noop);}},typeaheadBehaviours:derive$1(flatten([urlBackstage.getValidationHandler().map(function(handler){return Invalidating.config({getRoot:function getRoot(comp){return parentElement(comp.element);},invalidClass:'tox-control-wrap--status-invalid',notify:{onInvalid:function onInvalid(comp,err){memInvalidIcon.getOpt(comp).each(function(invalidComp){set$9(invalidComp.element,'title',providersBackstage.translate(err));});}},validator:{validate:function validate(input){var urlEntry=Representing.getValue(input);return FutureResult.nu(function(completer){handler({type:spec.filetype,url:urlEntry.value},function(validation){if(validation.status==='invalid'){var err=Result.error(validation.message);completer(err);}else{var val=Result.value(validation.message);completer(val);}});});},validateOnLoad:false}});}).toArray(),[Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();}}),Tabstopping.config({}),config('urlinput-events',flatten([spec.filetype==='file'?[run$1(input(),function(comp){emitWith(comp,formChangeEvent,{name:spec.name});})]:[],[run$1(change(),function(comp){emitWith(comp,formChangeEvent,{name:spec.name});updateHistory(comp);}),run$1(postPaste(),function(comp){emitWith(comp,formChangeEvent,{name:spec.name});updateHistory(comp);})]]))]])),eventOrder:_defineProperty({},input(),['streaming','urlinput-events','invalidating']),model:{getDisplayText:function getDisplayText(itemData){return itemData.value;},selectsOver:false,populateFromBrowse:false},markers:{openClass:'tox-textfield--popup-open'},lazySink:backstage.shared.getSink,parts:{menu:part(false,1,'normal')},onExecute:function onExecute(_menu,component,_entry){emitWith(component,formSubmitEvent,{});},onItemExecute:function onItemExecute(typeahead,_sandbox,_item,_value){updateHistory(typeahead);emitWith(typeahead,formChangeEvent,{name:spec.name});}}));var pLabel=spec.label.map(function(label){return renderLabel$2(label,providersBackstage);});var makeIcon=function makeIcon(name,errId){var icon=arguments.length>2&&arguments[2]!==undefined?arguments[2]:name;var label=arguments.length>3&&arguments[3]!==undefined?arguments[3]:name;return render$3(icon,{tag:'div',classes:['tox-icon','tox-control-wrap__status-icon-'+name],attributes:_objectSpread({'title':providersBackstage.translate(label),'aria-live':'polite'},errId.fold(function(){return{};},function(id){return{id:id};}))},providersBackstage.icons);};var memInvalidIcon=record(makeIcon('invalid',Optional.some(errorId),'warning'));var memStatus=record({dom:{tag:'div',classes:['tox-control-wrap__status-icon-wrap']},components:[memInvalidIcon.asSpec()]});var optUrlPicker=urlBackstage.getUrlPicker(spec.filetype);var browseUrlEvent=generate$6('browser.url.event');var memUrlBox=record({dom:{tag:'div',classes:['tox-control-wrap']},components:[pField,memStatus.asSpec()],behaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();}})])});var memUrlPickerButton=record(renderButton({name:spec.name,icon:Optional.some('browse'),text:spec.label.getOr(''),enabled:spec.enabled,primary:false,buttonType:Optional.none(),borderless:true},function(component){return emit(component,browseUrlEvent);},providersBackstage,[],['tox-browse-url']));var controlHWrapper=function controlHWrapper(){return{dom:{tag:'div',classes:['tox-form__controls-h-stack']},components:flatten([[memUrlBox.asSpec()],optUrlPicker.map(function(){return memUrlPickerButton.asSpec();}).toArray()])};};var openUrlPicker=function openUrlPicker(comp){Composing.getCurrent(comp).each(function(field){var componentData=Representing.getValue(field);var urlData=_objectSpread({fieldname:spec.name},componentData);optUrlPicker.each(function(picker){picker(urlData).get(function(chosenData){Representing.setValue(field,chosenData);emitWith(comp,formChangeEvent,{name:spec.name});});});});};return FormField.sketch({dom:renderFormFieldDom(),components:pLabel.toArray().concat([controlHWrapper()]),fieldBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providersBackstage.isDisabled();},onDisabled:function onDisabled(comp){FormField.getField(comp).each(Disabling.disable);memUrlPickerButton.getOpt(comp).each(Disabling.disable);},onEnabled:function onEnabled(comp){FormField.getField(comp).each(Disabling.enable);memUrlPickerButton.getOpt(comp).each(Disabling.enable);}}),receivingConfig(),config('url-input-events',[run$1(browseUrlEvent,openUrlPicker)])])});};var renderAlertBanner=function renderAlertBanner(spec,providersBackstage){return Container.sketch({dom:{tag:'div',attributes:{role:'alert'},classes:['tox-notification','tox-notification--in',"tox-notification--".concat(spec.level)]},components:[{dom:{tag:'div',classes:['tox-notification__icon']},components:[Button.sketch({dom:{tag:'button',classes:['tox-button','tox-button--naked','tox-button--icon'],innerHtml:get$2(spec.icon,providersBackstage.icons),attributes:{title:providersBackstage.translate(spec.iconTooltip)}},action:function action(comp){emitWith(comp,formActionEvent,{name:'alert-banner',value:spec.url});},buttonBehaviours:derive$1([addFocusableBehaviour()])})]},{dom:{tag:'div',classes:['tox-notification__body'],innerHtml:providersBackstage.translate(spec.text)}}]});};var set$1=function set$1(element,status){element.dom.checked=status;};var get$1=function get$1(element){return element.dom.checked;};var renderCheckbox=function renderCheckbox(spec,providerBackstage,initialData){var toggleCheckboxHandler=function toggleCheckboxHandler(comp){comp.element.dom.click();return Optional.some(true);};var pField=FormField.parts.field({factory:{sketch:identity},dom:{tag:'input',classes:['tox-checkbox__input'],attributes:{type:'checkbox'}},behaviours:derive$1([ComposingConfigs.self(),Disabling.config({disabled:function disabled(){return!spec.enabled||providerBackstage.isDisabled();}}),Tabstopping.config({}),Focusing.config({}),RepresentingConfigs.withElement(initialData,get$1,set$1),Keying.config({mode:'special',onEnter:toggleCheckboxHandler,onSpace:toggleCheckboxHandler,stopSpaceKeyup:true}),config('checkbox-events',[run$1(change(),function(component,_){emitWith(component,formChangeEvent,{name:spec.name});})])])});var pLabel=FormField.parts.label({dom:{tag:'span',classes:['tox-checkbox__label']},components:[text$1(providerBackstage.translate(spec.label))],behaviours:derive$1([Unselecting.config({})])});var makeIcon=function makeIcon(className){var iconName=className==='checked'?'selected':'unselected';return render$3(iconName,{tag:'span',classes:['tox-icon','tox-checkbox-icon__'+className]},providerBackstage.icons);};var memIcons=record({dom:{tag:'div',classes:['tox-checkbox__icons']},components:[makeIcon('checked'),makeIcon('unchecked')]});return FormField.sketch({dom:{tag:'label',classes:['tox-checkbox']},components:[pField,memIcons.asSpec(),pLabel],fieldBehaviours:derive$1([Disabling.config({disabled:function disabled(){return!spec.enabled||providerBackstage.isDisabled();},disableClass:'tox-checkbox--disabled',onDisabled:function onDisabled(comp){FormField.getField(comp).each(Disabling.disable);},onEnabled:function onEnabled(comp){FormField.getField(comp).each(Disabling.enable);}}),receivingConfig()])});};var renderHtmlPanel=function renderHtmlPanel(spec){if(spec.presets==='presentation'){return Container.sketch({dom:{tag:'div',classes:['tox-form__group'],innerHtml:spec.html}});}else{return Container.sketch({dom:{tag:'div',classes:['tox-form__group'],innerHtml:spec.html,attributes:{role:'document'}},containerBehaviours:derive$1([Tabstopping.config({}),Focusing.config({})])});}};var make$2=function make$2(render){return function(parts,spec,dialogData,backstage){return get$g(spec,'name').fold(function(){return render(spec,backstage,Optional.none());},function(fieldName){return parts.field(fieldName,render(spec,backstage,get$g(dialogData,fieldName)));});};};var makeIframe=function makeIframe(render){return function(parts,spec,dialogData,backstage){var iframeSpec=deepMerge(spec,{source:'dynamic'});return make$2(render)(parts,iframeSpec,dialogData,backstage);};};var factories={bar:make$2(function(spec,backstage){return renderBar(spec,backstage.shared);}),collection:make$2(function(spec,backstage,data){return renderCollection(spec,backstage.shared.providers,data);}),alertbanner:make$2(function(spec,backstage){return renderAlertBanner(spec,backstage.shared.providers);}),input:make$2(function(spec,backstage,data){return renderInput(spec,backstage.shared.providers,data);}),textarea:make$2(function(spec,backstage,data){return renderTextarea(spec,backstage.shared.providers,data);}),label:make$2(function(spec,backstage){return renderLabel$1(spec,backstage.shared);}),iframe:makeIframe(function(spec,backstage,data){return renderIFrame(spec,backstage.shared.providers,data);}),button:make$2(function(spec,backstage){return renderDialogButton(spec,backstage.shared.providers);}),checkbox:make$2(function(spec,backstage,data){return renderCheckbox(spec,backstage.shared.providers,data);}),colorinput:make$2(function(spec,backstage,data){return renderColorInput(spec,backstage.shared,backstage.colorinput,data);}),colorpicker:make$2(function(spec,backstage,data){return renderColorPicker(spec,backstage.shared.providers,data);}),dropzone:make$2(function(spec,backstage,data){return renderDropZone(spec,backstage.shared.providers,data);}),grid:make$2(function(spec,backstage){return renderGrid(spec,backstage.shared);}),listbox:make$2(function(spec,backstage,data){return renderListBox(spec,backstage,data);}),selectbox:make$2(function(spec,backstage,data){return renderSelectBox(spec,backstage.shared.providers,data);}),sizeinput:make$2(function(spec,backstage){return renderSizeInput(spec,backstage.shared.providers);}),slider:make$2(function(spec,backstage,data){return renderSlider(spec,backstage.shared.providers,data);}),urlinput:make$2(function(spec,backstage,data){return renderUrlInput(spec,backstage,backstage.urlinput,data);}),customeditor:make$2(renderCustomEditor),htmlpanel:make$2(renderHtmlPanel),imagepreview:make$2(function(spec,_,data){return renderImagePreview(spec,data);}),table:make$2(function(spec,backstage){return renderTable(spec,backstage.shared.providers);}),panel:make$2(function(spec,backstage){return renderPanel(spec,backstage);})};var noFormParts={field:function field(_name,spec){return spec;},record:constant$1([])};var interpretInForm=function interpretInForm(parts,spec,dialogData,oldBackstage){var newBackstage=deepMerge(oldBackstage,{shared:{interpreter:function interpreter(childSpec){return interpretParts(parts,childSpec,dialogData,newBackstage);}}});return interpretParts(parts,spec,dialogData,newBackstage);};var interpretParts=function interpretParts(parts,spec,dialogData,backstage){return get$g(factories,spec.type).fold(function(){console.error("Unknown factory type \"".concat(spec.type,"\", defaulting to container: "),spec);return spec;},function(factory){return factory(parts,spec,dialogData,backstage);});};var interpretWithoutForm=function interpretWithoutForm(spec,dialogData,backstage){return interpretParts(noFormParts,spec,dialogData,backstage);};var labelPrefix='layout-inset';var westEdgeX=function westEdgeX(anchor){return anchor.x;};var middleX=function middleX(anchor,element){return anchor.x+anchor.width/2-element.width/2;};var eastEdgeX=function eastEdgeX(anchor,element){return anchor.x+anchor.width-element.width;};var northY=function northY(anchor){return anchor.y;};var southY=function southY(anchor,element){return anchor.y+anchor.height-element.height;};var centreY=function centreY(anchor,element){return anchor.y+anchor.height/2-element.height/2;};var southwest=function southwest(anchor,element,bubbles){return nu$6(eastEdgeX(anchor,element),southY(anchor,element),bubbles.insetSouthwest(),northwest$3(),'southwest',boundsRestriction(anchor,{right:0,bottom:3}),labelPrefix);};var southeast=function southeast(anchor,element,bubbles){return nu$6(westEdgeX(anchor),southY(anchor,element),bubbles.insetSoutheast(),northeast$3(),'southeast',boundsRestriction(anchor,{left:1,bottom:3}),labelPrefix);};var northwest=function northwest(anchor,element,bubbles){return nu$6(eastEdgeX(anchor,element),northY(anchor),bubbles.insetNorthwest(),southwest$3(),'northwest',boundsRestriction(anchor,{right:0,top:2}),labelPrefix);};var northeast=function northeast(anchor,element,bubbles){return nu$6(westEdgeX(anchor),northY(anchor),bubbles.insetNortheast(),southeast$3(),'northeast',boundsRestriction(anchor,{left:1,top:2}),labelPrefix);};var north=function north(anchor,element,bubbles){return nu$6(middleX(anchor,element),northY(anchor),bubbles.insetNorth(),south$3(),'north',boundsRestriction(anchor,{top:2}),labelPrefix);};var south=function south(anchor,element,bubbles){return nu$6(middleX(anchor,element),southY(anchor,element),bubbles.insetSouth(),north$3(),'south',boundsRestriction(anchor,{bottom:3}),labelPrefix);};var east=function east(anchor,element,bubbles){return nu$6(eastEdgeX(anchor,element),centreY(anchor,element),bubbles.insetEast(),west$3(),'east',boundsRestriction(anchor,{right:0}),labelPrefix);};var west=function west(anchor,element,bubbles){return nu$6(westEdgeX(anchor),centreY(anchor,element),bubbles.insetWest(),east$3(),'west',boundsRestriction(anchor,{left:1}),labelPrefix);};var lookupPreserveLayout=function lookupPreserveLayout(lastPlacement){switch(lastPlacement){case'north':return north;case'northeast':return northeast;case'northwest':return northwest;case'south':return south;case'southeast':return southeast;case'southwest':return southwest;case'east':return east;case'west':return west;}};var preserve=function preserve(anchor,element,bubbles,placee,bounds){var layout=getPlacement(placee).map(lookupPreserveLayout).getOr(north);return layout(anchor,element,bubbles,placee,bounds);};var lookupFlippedLayout=function lookupFlippedLayout(lastPlacement){switch(lastPlacement){case'north':return south;case'northeast':return southeast;case'northwest':return southwest;case'south':return north;case'southeast':return northeast;case'southwest':return northwest;case'east':return west;case'west':return east;}};var flip=function flip(anchor,element,bubbles,placee,bounds){var layout=getPlacement(placee).map(lookupFlippedLayout).getOr(north);return layout(anchor,element,bubbles,placee,bounds);};var bubbleAlignments$2={valignCentre:[],alignCentre:[],alignLeft:[],alignRight:[],right:[],left:[],bottom:[],top:[]};var getInlineDialogAnchor=function getInlineDialogAnchor(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor){var bubbleSize=12;var overrides={maxHeightFunction:expandable$1()};var editableAreaAnchor=function editableAreaAnchor(){return{type:'node',root:getContentContainer(contentAreaElement()),node:Optional.from(contentAreaElement()),bubble:nu$5(bubbleSize,bubbleSize,bubbleAlignments$2),layouts:{onRtl:function onRtl(){return[northeast];},onLtr:function onLtr(){return[northwest];}},overrides:overrides};};var standardAnchor=function standardAnchor(){return{type:'hotspot',hotspot:lazyAnchorbar(),bubble:nu$5(-bubbleSize,bubbleSize,bubbleAlignments$2),layouts:{onRtl:function onRtl(){return[southeast$2];},onLtr:function onLtr(){return[southwest$2];}},overrides:overrides};};return function(){return lazyUseEditableAreaAnchor()?editableAreaAnchor():standardAnchor();};};var getBannerAnchor=function getBannerAnchor(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor){var editableAreaAnchor=function editableAreaAnchor(){return{type:'node',root:getContentContainer(contentAreaElement()),node:Optional.from(contentAreaElement()),layouts:{onRtl:function onRtl(){return[north];},onLtr:function onLtr(){return[north];}}};};var standardAnchor=function standardAnchor(){return{type:'hotspot',hotspot:lazyAnchorbar(),layouts:{onRtl:function onRtl(){return[south$2];},onLtr:function onLtr(){return[south$2];}}};};return function(){return lazyUseEditableAreaAnchor()?editableAreaAnchor():standardAnchor();};};var getCursorAnchor=function getCursorAnchor(editor,bodyElement){return function(){return{type:'selection',root:bodyElement(),getSelection:function getSelection(){var rng=editor.selection.getRng();return Optional.some(SimSelection.range(SugarElement.fromDom(rng.startContainer),rng.startOffset,SugarElement.fromDom(rng.endContainer),rng.endOffset));}};};};var getNodeAnchor$1=function getNodeAnchor$1(bodyElement){return function(element){return{type:'node',root:bodyElement(),node:element};};};var getAnchors=function getAnchors(editor,lazyAnchorbar,isToolbarTop){var useFixedToolbarContainer=useFixedContainer(editor);var bodyElement=function bodyElement(){return SugarElement.fromDom(editor.getBody());};var contentAreaElement=function contentAreaElement(){return SugarElement.fromDom(editor.getContentAreaContainer());};var lazyUseEditableAreaAnchor=function lazyUseEditableAreaAnchor(){return useFixedToolbarContainer||!isToolbarTop();};return{inlineDialog:getInlineDialogAnchor(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor),banner:getBannerAnchor(contentAreaElement,lazyAnchorbar,lazyUseEditableAreaAnchor),cursor:getCursorAnchor(editor,bodyElement),node:getNodeAnchor$1(bodyElement)};};var colorPicker=function colorPicker(editor){return function(callback,value){var dialog=colorPickerDialog(editor);dialog(callback,value);};};var hasCustomColors=function hasCustomColors(editor){return function(){return hasCustomColors$1(editor);};};var getColors=function getColors(editor){return function(){return getColors$2(editor);};};var getColorCols=function getColorCols(editor){return function(){return getColorCols$1(editor);};};var ColorInputBackstage=function ColorInputBackstage(editor){return{colorPicker:colorPicker(editor),hasCustomColors:hasCustomColors(editor),getColors:getColors(editor),getColorCols:getColorCols(editor)};};var isDraggableModal=function isDraggableModal(editor){return function(){return isDraggableModal$1(editor);};};var DialogBackstage=function DialogBackstage(editor){return{isDraggableModal:isDraggableModal(editor)};};var HeaderBackstage=function HeaderBackstage(editor){var mode=Cell(isToolbarLocationBottom(editor)?'bottom':'top');return{isPositionedAtTop:function isPositionedAtTop(){return mode.get()==='top';},getDockingMode:mode.get,setDockingMode:mode.set};};var defaultStyleFormats=[{title:'Headings',items:[{title:'Heading 1',format:'h1'},{title:'Heading 2',format:'h2'},{title:'Heading 3',format:'h3'},{title:'Heading 4',format:'h4'},{title:'Heading 5',format:'h5'},{title:'Heading 6',format:'h6'}]},{title:'Inline',items:[{title:'Bold',format:'bold'},{title:'Italic',format:'italic'},{title:'Underline',format:'underline'},{title:'Strikethrough',format:'strikethrough'},{title:'Superscript',format:'superscript'},{title:'Subscript',format:'subscript'},{title:'Code',format:'code'}]},{title:'Blocks',items:[{title:'Paragraph',format:'p'},{title:'Blockquote',format:'blockquote'},{title:'Div',format:'div'},{title:'Pre',format:'pre'}]},{title:'Align',items:[{title:'Left',format:'alignleft'},{title:'Center',format:'aligncenter'},{title:'Right',format:'alignright'},{title:'Justify',format:'alignjustify'}]}];var isNestedFormat=function isNestedFormat(format){return has$2(format,'items');};var isBlockFormat=function isBlockFormat(format){return has$2(format,'block');};var isInlineFormat=function isInlineFormat(format){return has$2(format,'inline');};var isSelectorFormat=function isSelectorFormat(format){return has$2(format,'selector');};var mapFormats=function mapFormats(userFormats){return foldl(userFormats,function(acc,fmt){if(isNestedFormat(fmt)){var result=mapFormats(fmt.items);return{customFormats:acc.customFormats.concat(result.customFormats),formats:acc.formats.concat([{title:fmt.title,items:result.formats}])};}else if(isInlineFormat(fmt)||isBlockFormat(fmt)||isSelectorFormat(fmt)){var formatName=isString(fmt.name)?fmt.name:fmt.title.toLowerCase();var formatNameWithPrefix="custom-".concat(formatName);return{customFormats:acc.customFormats.concat([{name:formatNameWithPrefix,format:fmt}]),formats:acc.formats.concat([{title:fmt.title,format:formatNameWithPrefix,icon:fmt.icon}])};}else{return _objectSpread({},acc,{formats:acc.formats.concat(fmt)});}},{customFormats:[],formats:[]});};var registerCustomFormats=function registerCustomFormats(editor,userFormats){var result=mapFormats(userFormats);var registerFormats=function registerFormats(customFormats){each$1(customFormats,function(fmt){if(!editor.formatter.has(fmt.name)){editor.formatter.register(fmt.name,fmt.format);}});};if(editor.formatter){registerFormats(result.customFormats);}else{editor.on('init',function(){registerFormats(result.customFormats);});}return result.formats;};var getStyleFormats=function getStyleFormats(editor){return getUserStyleFormats(editor).map(function(userFormats){var registeredUserFormats=registerCustomFormats(editor,userFormats);return shouldMergeStyleFormats(editor)?defaultStyleFormats.concat(registeredUserFormats):registeredUserFormats;}).getOr(defaultStyleFormats);};var processBasic=function processBasic(item,isSelectedFor,getPreviewFor){var formatterSpec={type:'formatter',isSelected:isSelectedFor(item.format),getStylePreview:getPreviewFor(item.format)};return deepMerge(item,formatterSpec);};var register$a=function register$a(editor,formats,isSelectedFor,getPreviewFor){var enrichSupported=function enrichSupported(item){return processBasic(item,isSelectedFor,getPreviewFor);};var enrichMenu=function enrichMenu(item){var submenuSpec={type:'submenu'};return deepMerge(item,submenuSpec);};var enrichCustom=function enrichCustom(item){var formatName=isString(item.name)?item.name:generate$6(item.title);var formatNameWithPrefix="custom-".concat(formatName);var customSpec={type:'formatter',format:formatNameWithPrefix,isSelected:isSelectedFor(formatNameWithPrefix),getStylePreview:getPreviewFor(formatNameWithPrefix)};var newItem=deepMerge(item,customSpec);editor.formatter.register(formatName,newItem);return newItem;};var doEnrich=function doEnrich(items){return map$2(items,function(item){var keys$1=keys(item);if(hasNonNullableKey(item,'items')){var newItems=doEnrich(item.items);return deepMerge(enrichMenu(item),{getStyleItems:constant$1(newItems)});}else if(hasNonNullableKey(item,'format')){return enrichSupported(item);}else if(keys$1.length===1&&contains$2(keys$1,'title')){return deepMerge(item,{type:'separator'});}else{return enrichCustom(item);}});};return doEnrich(formats);};var init$8=function init$8(editor){var isSelectedFor=function isSelectedFor(format){return function(){return editor.formatter.match(format);};};var getPreviewFor=function getPreviewFor(format){return function(){var fmt=editor.formatter.get(format);return fmt!==undefined?Optional.some({tag:fmt.length>0?fmt[0].inline||fmt[0].block||'div':'div',styles:editor.dom.parseStyle(editor.formatter.getCssText(format))}):Optional.none();};};var flatten=function flatten(fmt){var subs=fmt.items;return subs!==undefined&&subs.length>0?bind$3(subs,flatten):[fmt.format];};var settingsFormats=Cell([]);var settingsFlattenedFormats=Cell([]);var eventsFormats=Cell([]);var eventsFlattenedFormats=Cell([]);var replaceSettings=Cell(false);editor.on('PreInit',function(_e){var formats=getStyleFormats(editor);var enriched=register$a(editor,formats,isSelectedFor,getPreviewFor);settingsFormats.set(enriched);settingsFlattenedFormats.set(bind$3(enriched,flatten));});editor.on('addStyleModifications',function(e){var modifications=register$a(editor,e.items,isSelectedFor,getPreviewFor);eventsFormats.set(modifications);replaceSettings.set(e.replace);eventsFlattenedFormats.set(bind$3(modifications,flatten));});var getData=function getData(){var fromSettings=replaceSettings.get()?[]:settingsFormats.get();var fromEvents=eventsFormats.get();return fromSettings.concat(fromEvents);};var getFlattenedKeys=function getFlattenedKeys(){var fromSettings=replaceSettings.get()?[]:settingsFlattenedFormats.get();var fromEvents=eventsFlattenedFormats.get();return fromSettings.concat(fromEvents);};return{getData:getData,getFlattenedKeys:getFlattenedKeys};};var isElement=function isElement(node){return isNonNullable(node)&&node.nodeType===1;};var trim=global$1.trim;var hasContentEditableState=function hasContentEditableState(value){return function(node){if(isElement(node)){if(node.contentEditable===value){return true;}if(node.getAttribute('data-mce-contenteditable')===value){return true;}}return false;};};var isContentEditableTrue=hasContentEditableState('true');var isContentEditableFalse=hasContentEditableState('false');var create=function create(type,title,url,level,attach){return{type:type,title:title,url:url,level:level,attach:attach};};var isChildOfContentEditableTrue=function isChildOfContentEditableTrue(node){while(node=node.parentNode){var _value5=node.contentEditable;if(_value5&&_value5!=='inherit'){return isContentEditableTrue(node);}}return false;};var select=function select(selector,root){return map$2(descendants(SugarElement.fromDom(root),selector),function(element){return element.dom;});};var getElementText=function getElementText(elm){return elm.innerText||elm.textContent;};var getOrGenerateId=function getOrGenerateId(elm){return elm.id?elm.id:generate$6('h');};var isAnchor=function isAnchor(elm){return elm&&elm.nodeName==='A'&&(elm.id||elm.name)!==undefined;};var isValidAnchor=function isValidAnchor(elm){return isAnchor(elm)&&isEditable(elm);};var isHeader=function isHeader(elm){return elm&&/^(H[1-6])$/.test(elm.nodeName);};var isEditable=function isEditable(elm){return isChildOfContentEditableTrue(elm)&&!isContentEditableFalse(elm);};var isValidHeader=function isValidHeader(elm){return isHeader(elm)&&isEditable(elm);};var getLevel=function getLevel(elm){return isHeader(elm)?parseInt(elm.nodeName.substr(1),10):0;};var headerTarget=function headerTarget(elm){var headerId=getOrGenerateId(elm);var attach=function attach(){elm.id=headerId;};return create('header',getElementText(elm),'#'+headerId,getLevel(elm),attach);};var anchorTarget=function anchorTarget(elm){var anchorId=elm.id||elm.name;var anchorText=getElementText(elm);return create('anchor',anchorText?anchorText:'#'+anchorId,'#'+anchorId,0,noop);};var getHeaderTargets=function getHeaderTargets(elms){return map$2(filter$2(elms,isValidHeader),headerTarget);};var getAnchorTargets=function getAnchorTargets(elms){return map$2(filter$2(elms,isValidAnchor),anchorTarget);};var getTargetElements=function getTargetElements(elm){var elms=select('h1,h2,h3,h4,h5,h6,a:not([href])',elm);return elms;};var hasTitle=function hasTitle(target){return trim(target.title).length>0;};var find=function find(elm){var elms=getTargetElements(elm);return filter$2(getHeaderTargets(elms).concat(getAnchorTargets(elms)),hasTitle);};var LinkTargets={find:find};var STORAGE_KEY='tinymce-url-history';var HISTORY_LENGTH=5;var isHttpUrl=function isHttpUrl(url){return isString(url)&&/^https?/.test(url);};var isArrayOfUrl=function isArrayOfUrl(a){return isArray(a)&&a.length<=HISTORY_LENGTH&&forall(a,isHttpUrl);};var isRecordOfUrlArray=function isRecordOfUrlArray(r){return isObject(r)&&find$4(r,function(value){return!isArrayOfUrl(value);}).isNone();};var getAllHistory=function getAllHistory(){var unparsedHistory=global$4.getItem(STORAGE_KEY);if(unparsedHistory===null){return{};}var history;try{history=JSON.parse(unparsedHistory);}catch(e){if(e instanceof SyntaxError){console.log('Local storage '+STORAGE_KEY+' was not valid JSON',e);return{};}throw e;}if(!isRecordOfUrlArray(history)){console.log('Local storage '+STORAGE_KEY+' was not valid format',history);return{};}return history;};var setAllHistory=function setAllHistory(history){if(!isRecordOfUrlArray(history)){throw new Error('Bad format for history:\n'+JSON.stringify(history));}global$4.setItem(STORAGE_KEY,JSON.stringify(history));};var getHistory=function getHistory(fileType){var history=getAllHistory();return get$g(history,fileType).getOr([]);};var addToHistory=function addToHistory(url,fileType){if(!isHttpUrl(url)){return;}var history=getAllHistory();var items=get$g(history,fileType).getOr([]);var itemsWithoutUrl=filter$2(items,function(item){return item!==url;});history[fileType]=[url].concat(itemsWithoutUrl).slice(0,HISTORY_LENGTH);setAllHistory(history);};var isTruthy=function isTruthy(value){return!!value;};var makeMap=function makeMap(value){return map$1(global$1.makeMap(value,/[, ]/),isTruthy);};var getPicker=function getPicker(editor){return Optional.from(getFilePickerCallback(editor));};var getPickerTypes=function getPickerTypes(editor){var optFileTypes=Optional.from(getFilePickerTypes(editor)).filter(isTruthy).map(makeMap);return getPicker(editor).fold(never,function(_picker){return optFileTypes.fold(always,function(types){return keys(types).length>0?types:false;});});};var getPickerSetting=function getPickerSetting(editor,filetype){var pickerTypes=getPickerTypes(editor);if(isBoolean(pickerTypes)){return pickerTypes?getPicker(editor):Optional.none();}else{return pickerTypes[filetype]?getPicker(editor):Optional.none();}};var _getUrlPicker=function getUrlPicker(editor,filetype){return getPickerSetting(editor,filetype).map(function(picker){return function(entry){return Future.nu(function(completer){var handler=function handler(value,meta){if(!isString(value)){throw new Error('Expected value to be string');}if(meta!==undefined&&!isObject(meta)){throw new Error('Expected meta to be a object');}var r={value:value,meta:meta};completer(r);};var meta=_objectSpread({filetype:filetype,fieldname:entry.fieldname},Optional.from(entry.meta).getOr({}));picker.call(editor,handler,entry.value,meta);});};});};var getTextSetting=function getTextSetting(value){return Optional.from(value).filter(isString).getOrUndefined();};var _getLinkInformation=function getLinkInformation(editor){if(!useTypeaheadUrls(editor)){return Optional.none();}return Optional.some({targets:LinkTargets.find(editor.getBody()),anchorTop:getTextSetting(getAnchorTop(editor)),anchorBottom:getTextSetting(getAnchorBottom(editor))});};var _getValidationHandler=function getValidationHandler(editor){return Optional.from(getFilePickerValidatorHandler(editor));};var UrlInputBackstage=function UrlInputBackstage(editor){return{getHistory:getHistory,addToHistory:addToHistory,getLinkInformation:function getLinkInformation(){return _getLinkInformation(editor);},getValidationHandler:function getValidationHandler(){return _getValidationHandler(editor);},getUrlPicker:function getUrlPicker(filetype){return _getUrlPicker(editor,filetype);}};};var init$7=function init$7(lazySink,editor,lazyAnchorbar){var contextMenuState=Cell(false);var toolbar=HeaderBackstage(editor);var backstage={shared:{providers:{icons:function icons(){return editor.ui.registry.getAll().icons;},menuItems:function menuItems(){return editor.ui.registry.getAll().menuItems;},translate:global$8.translate,isDisabled:function isDisabled(){return editor.mode.isReadOnly()||!editor.ui.isEnabled();},getOption:editor.options.get},interpreter:function interpreter(s){return interpretWithoutForm(s,{},backstage);},anchors:getAnchors(editor,lazyAnchorbar,toolbar.isPositionedAtTop),header:toolbar,getSink:lazySink},urlinput:UrlInputBackstage(editor),styles:init$8(editor),colorinput:ColorInputBackstage(editor),dialog:DialogBackstage(editor),isContextMenuOpen:function isContextMenuOpen(){return contextMenuState.get();},setContextMenuState:function setContextMenuState(state){return contextMenuState.set(state);}};return backstage;};var setup$b=function setup$b(editor,mothership,uiMothership){var broadcastEvent=function broadcastEvent(name,evt){each$1([mothership,uiMothership],function(ship){ship.broadcastEvent(name,evt);});};var broadcastOn=function broadcastOn(channel,message){each$1([mothership,uiMothership],function(ship){ship.broadcastOn([channel],message);});};var fireDismissPopups=function fireDismissPopups(evt){return broadcastOn(dismissPopups(),{target:evt.target});};var doc=getDocument();var onTouchstart=bind(doc,'touchstart',fireDismissPopups);var onTouchmove=bind(doc,'touchmove',function(evt){return broadcastEvent(documentTouchmove(),evt);});var onTouchend=bind(doc,'touchend',function(evt){return broadcastEvent(documentTouchend(),evt);});var onMousedown=bind(doc,'mousedown',fireDismissPopups);var onMouseup=bind(doc,'mouseup',function(evt){if(evt.raw.button===0){broadcastOn(mouseReleased(),{target:evt.target});}});var onContentClick=function onContentClick(raw){return broadcastOn(dismissPopups(),{target:SugarElement.fromDom(raw.target)});};var onContentMouseup=function onContentMouseup(raw){if(raw.button===0){broadcastOn(mouseReleased(),{target:SugarElement.fromDom(raw.target)});}};var onContentMousedown=function onContentMousedown(){each$1(editor.editorManager.get(),function(loopEditor){if(editor!==loopEditor){loopEditor.dispatch('DismissPopups',{relatedTarget:editor});}});};var onWindowScroll=function onWindowScroll(evt){return broadcastEvent(windowScroll(),fromRawEvent(evt));};var onWindowResize=function onWindowResize(evt){broadcastOn(repositionPopups(),{});broadcastEvent(windowResize(),fromRawEvent(evt));};var onEditorResize=function onEditorResize(){return broadcastOn(repositionPopups(),{});};var onEditorProgress=function onEditorProgress(evt){if(evt.state){broadcastOn(dismissPopups(),{target:SugarElement.fromDom(editor.getContainer())});}};var onDismissPopups=function onDismissPopups(event){broadcastOn(dismissPopups(),{target:SugarElement.fromDom(event.relatedTarget.getContainer())});};editor.on('PostRender',function(){editor.on('click',onContentClick);editor.on('tap',onContentClick);editor.on('mouseup',onContentMouseup);editor.on('mousedown',onContentMousedown);editor.on('ScrollWindow',onWindowScroll);editor.on('ResizeWindow',onWindowResize);editor.on('ResizeEditor',onEditorResize);editor.on('AfterProgressState',onEditorProgress);editor.on('DismissPopups',onDismissPopups);});editor.on('remove',function(){editor.off('click',onContentClick);editor.off('tap',onContentClick);editor.off('mouseup',onContentMouseup);editor.off('mousedown',onContentMousedown);editor.off('ScrollWindow',onWindowScroll);editor.off('ResizeWindow',onWindowResize);editor.off('ResizeEditor',onEditorResize);editor.off('AfterProgressState',onEditorProgress);editor.off('DismissPopups',onDismissPopups);onMousedown.unbind();onTouchstart.unbind();onTouchmove.unbind();onTouchend.unbind();onMouseup.unbind();});editor.on('detach',function(){detachSystem(mothership);detachSystem(uiMothership);mothership.destroy();uiMothership.destroy();});};var parts$a=AlloyParts;var partType=PartType;var schema$f=constant$1([defaulted('shell',false),required$1('makeItem'),defaulted('setupItem',noop),SketchBehaviours.field('listBehaviours',[Replacing])]);var customListDetail=function customListDetail(){return{behaviours:derive$1([Replacing.config({})])};};var itemsPart=optional({name:'items',overrides:customListDetail});var parts$9=constant$1([itemsPart]);var name=constant$1('CustomList');var factory$d=function factory$d(detail,components,_spec,_external){var setItems=function setItems(list,items){getListContainer(list).fold(function(){console.error('Custom List was defined to not be a shell, but no item container was specified in components');throw new Error('Custom List was defined to not be a shell, but no item container was specified in components');},function(container){var itemComps=Replacing.contents(container);var numListsRequired=items.length;var numListsToAdd=numListsRequired-itemComps.length;var itemsToAdd=numListsToAdd>0?range$2(numListsToAdd,function(){return detail.makeItem();}):[];var itemsToRemove=itemComps.slice(numListsRequired);each$1(itemsToRemove,function(item){return Replacing.remove(container,item);});each$1(itemsToAdd,function(item){return Replacing.append(container,item);});var builtLists=Replacing.contents(container);each$1(builtLists,function(item,i){detail.setupItem(list,item,items[i],i);});});};var extra=detail.shell?{behaviours:[Replacing.config({})],components:[]}:{behaviours:[],components:components};var getListContainer=function getListContainer(component){return detail.shell?Optional.some(component):getPart(component,detail,'items');};return{uid:detail.uid,dom:detail.dom,components:extra.components,behaviours:augment(detail.listBehaviours,extra.behaviours),apis:{setItems:setItems}};};var CustomList=composite({name:name(),configFields:schema$f(),partFields:parts$9(),factory:factory$d,apis:{setItems:function setItems(apis,list,items){apis.setItems(list,items);}}});var schema$e=constant$1([required$1('dom'),defaulted('shell',true),field('toolbarBehaviours',[Replacing])]);var enhanceGroups=function enhanceGroups(){return{behaviours:derive$1([Replacing.config({})])};};var parts$8=constant$1([optional({name:'groups',overrides:enhanceGroups})]);var factory$c=function factory$c(detail,components,_spec,_externals){var setGroups=function setGroups(toolbar,groups){getGroupContainer(toolbar).fold(function(){console.error('Toolbar was defined to not be a shell, but no groups container was specified in components');throw new Error('Toolbar was defined to not be a shell, but no groups container was specified in components');},function(container){Replacing.set(container,groups);});};var getGroupContainer=function getGroupContainer(component){return detail.shell?Optional.some(component):getPart(component,detail,'groups');};var extra=detail.shell?{behaviours:[Replacing.config({})],components:[]}:{behaviours:[],components:components};return{uid:detail.uid,dom:detail.dom,components:extra.components,behaviours:augment(detail.toolbarBehaviours,extra.behaviours),apis:{setGroups:setGroups},domModification:{attributes:{role:'group'}}};};var Toolbar=composite({name:'Toolbar',configFields:schema$e(),partFields:parts$8(),factory:factory$c,apis:{setGroups:function setGroups(apis,toolbar,groups){apis.setGroups(toolbar,groups);}}});var setup$a=noop;var isDocked$2=never;var getBehaviours$1=constant$1([]);var StaticHeader=/*#__PURE__*/Object.freeze({__proto__:null,setup:setup$a,isDocked:isDocked$2,getBehaviours:getBehaviours$1});var getOffsetParent=function getOffsetParent(element){var isFixed=is$1(getRaw(element,'position'),'fixed');var offsetParent$1=isFixed?Optional.none():offsetParent(element);return offsetParent$1.orThunk(function(){var marker=SugarElement.fromTag('span');return parent(element).bind(function(parent){append$2(parent,marker);var offsetParent$1=offsetParent(marker);remove$5(marker);return offsetParent$1;});});};var getOrigin=function getOrigin(element){return getOffsetParent(element).map(absolute$3).getOrThunk(function(){return SugarPosition(0,0);});};var morphAdt=Adt.generate([{"static":[]},{absolute:['positionCss']},{fixed:['positionCss']}]);var appear=function appear(component,contextualInfo){var elem=component.element;add$2(elem,contextualInfo.transitionClass);remove$2(elem,contextualInfo.fadeOutClass);add$2(elem,contextualInfo.fadeInClass);contextualInfo.onShow(component);};var disappear=function disappear(component,contextualInfo){var elem=component.element;add$2(elem,contextualInfo.transitionClass);remove$2(elem,contextualInfo.fadeInClass);add$2(elem,contextualInfo.fadeOutClass);contextualInfo.onHide(component);};var isPartiallyVisible=function isPartiallyVisible(box,viewport){return box.y<viewport.bottom&&box.bottom>viewport.y;};var isTopCompletelyVisible=function isTopCompletelyVisible(box,viewport){return box.y>=viewport.y;};var isBottomCompletelyVisible=function isBottomCompletelyVisible(box,viewport){return box.bottom<=viewport.bottom;};var isVisibleForModes=function isVisibleForModes(modes,box,viewport){return forall(modes,function(mode){switch(mode){case'bottom':return isBottomCompletelyVisible(box,viewport);case'top':return isTopCompletelyVisible(box,viewport);}});};var getPrior=function getPrior(elem,state){return state.getInitialPos().map(function(pos){return bounds(pos.bounds.x,pos.bounds.y,get$c(elem),get$d(elem));});};var storePrior=function storePrior(elem,box,state){state.setInitialPos({style:getAllRaw(elem),position:get$e(elem,'position')||'static',bounds:box});};var revertToOriginal=function revertToOriginal(elem,box,state){return state.getInitialPos().bind(function(position){state.clearInitialPos();switch(position.position){case'static':return Optional.some(morphAdt["static"]());case'absolute':var offsetBox=getOffsetParent(elem).map(box$1).getOrThunk(function(){return box$1(body());});return Optional.some(morphAdt.absolute(NuPositionCss('absolute',get$g(position.style,'left').map(function(_left){return box.x-offsetBox.x;}),get$g(position.style,'top').map(function(_top){return box.y-offsetBox.y;}),get$g(position.style,'right').map(function(_right){return offsetBox.right-box.right;}),get$g(position.style,'bottom').map(function(_bottom){return offsetBox.bottom-box.bottom;}))));default:return Optional.none();}});};var morphToOriginal=function morphToOriginal(elem,viewport,state){return getPrior(elem,state).filter(function(box){return isVisibleForModes(state.getModes(),box,viewport);}).bind(function(box){return revertToOriginal(elem,box,state);});};var morphToFixed=function morphToFixed(elem,viewport,state){var box=box$1(elem);if(!isVisibleForModes(state.getModes(),box,viewport)){storePrior(elem,box,state);var winBox=win();var _left2=box.x-winBox.x;var _top2=viewport.y-winBox.y;var _bottom2=winBox.bottom-viewport.bottom;var isTop=box.y<=viewport.y;return Optional.some(morphAdt.fixed(NuPositionCss('fixed',Optional.some(_left2),isTop?Optional.some(_top2):Optional.none(),Optional.none(),!isTop?Optional.some(_bottom2):Optional.none())));}else{return Optional.none();}};var getMorph=function getMorph(component,viewport,state){var elem=component.element;var isDocked=is$1(getRaw(elem,'position'),'fixed');return isDocked?morphToOriginal(elem,viewport,state):morphToFixed(elem,viewport,state);};var getMorphToOriginal=function getMorphToOriginal(component,state){var elem=component.element;return getPrior(elem,state).bind(function(box){return revertToOriginal(elem,box,state);});};var morphToStatic=function morphToStatic(component,config,state){state.setDocked(false);each$1(['left','right','top','bottom','position'],function(prop){return remove$6(component.element,prop);});config.onUndocked(component);};var morphToCoord=function morphToCoord(component,config,state,position){var isDocked=position.position==='fixed';state.setDocked(isDocked);applyPositionCss(component.element,position);var method=isDocked?config.onDocked:config.onUndocked;method(component);};var updateVisibility=function updateVisibility(component,config,state,viewport){var morphToDocked=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;config.contextual.each(function(contextInfo){contextInfo.lazyContext(component).each(function(box){var isVisible=isPartiallyVisible(box,viewport);if(isVisible!==state.isVisible()){state.setVisible(isVisible);if(morphToDocked&&!isVisible){add$1(component.element,[contextInfo.fadeOutClass]);contextInfo.onHide(component);}else{var method=isVisible?appear:disappear;method(component,contextInfo);}}});});};var refreshInternal=function refreshInternal(component,config,state){var viewport=config.lazyViewport(component);var isDocked=state.isDocked();if(isDocked){updateVisibility(component,config,state,viewport);}getMorph(component,viewport,state).each(function(morph){morph.fold(function(){return morphToStatic(component,config,state);},function(position){return morphToCoord(component,config,state,position);},function(position){updateVisibility(component,config,state,viewport,true);morphToCoord(component,config,state,position);});});};var resetInternal=function resetInternal(component,config,state){var elem=component.element;state.setDocked(false);getMorphToOriginal(component,state).each(function(morph){morph.fold(function(){return morphToStatic(component,config,state);},function(position){return morphToCoord(component,config,state,position);},noop);});state.setVisible(true);config.contextual.each(function(contextInfo){remove$1(elem,[contextInfo.fadeInClass,contextInfo.fadeOutClass,contextInfo.transitionClass]);contextInfo.onShow(component);});refresh$4(component,config,state);};var refresh$4=function refresh$4(component,config,state){if(component.getSystem().isConnected()){refreshInternal(component,config,state);}};var reset=function reset(component,config,state){if(state.isDocked()){resetInternal(component,config,state);}};var isDocked$1=function isDocked$1(component,config,state){return state.isDocked();};var setModes=function setModes(component,config,state,modes){return state.setModes(modes);};var getModes=function getModes(component,config,state){return state.getModes();};var DockingApis=/*#__PURE__*/Object.freeze({__proto__:null,refresh:refresh$4,reset:reset,isDocked:isDocked$1,getModes:getModes,setModes:setModes});var events$5=function events$5(dockInfo,dockState){return derive$2([runOnSource(transitionend(),function(component,simulatedEvent){dockInfo.contextual.each(function(contextInfo){if(has(component.element,contextInfo.transitionClass)){remove$1(component.element,[contextInfo.transitionClass,contextInfo.fadeInClass]);var notify=dockState.isVisible()?contextInfo.onShown:contextInfo.onHidden;notify(component);}simulatedEvent.stop();});}),run$1(windowScroll(),function(component,_){refresh$4(component,dockInfo,dockState);}),run$1(windowResize(),function(component,_){reset(component,dockInfo,dockState);})]);};var ActiveDocking=/*#__PURE__*/Object.freeze({__proto__:null,events:events$5});var DockingSchema=[optionObjOf('contextual',[requiredString('fadeInClass'),requiredString('fadeOutClass'),requiredString('transitionClass'),requiredFunction('lazyContext'),onHandler('onShow'),onHandler('onShown'),onHandler('onHide'),onHandler('onHidden')]),defaultedFunction('lazyViewport',win),defaultedArrayOf('modes',['top','bottom'],string),onHandler('onDocked'),onHandler('onUndocked')];var init$6=function init$6(spec){var docked=Cell(false);var visible=Cell(true);var initialBounds=value$2();var modes=Cell(spec.modes);var readState=function readState(){return"docked:  ".concat(docked.get(),", visible: ").concat(visible.get(),", modes: ").concat(modes.get().join(','));};return nu$8({isDocked:docked.get,setDocked:docked.set,getInitialPos:initialBounds.get,setInitialPos:initialBounds.set,clearInitialPos:initialBounds.clear,isVisible:visible.get,setVisible:visible.set,getModes:modes.get,setModes:modes.set,readState:readState});};var DockingState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$6});var Docking=create$3({fields:DockingSchema,name:'docking',active:ActiveDocking,apis:DockingApis,state:DockingState});var toolbarHeightChange=constant$1(generate$6('toolbar-height-change'));var visibility={fadeInClass:'tox-editor-dock-fadein',fadeOutClass:'tox-editor-dock-fadeout',transitionClass:'tox-editor-dock-transition'};var editorStickyOnClass='tox-tinymce--toolbar-sticky-on';var editorStickyOffClass='tox-tinymce--toolbar-sticky-off';var scrollFromBehindHeader=function scrollFromBehindHeader(e,containerHeader){var doc=owner$4(containerHeader);var viewHeight=doc.dom.defaultView.innerHeight;var scrollPos=get$b(doc);var markerElement=SugarElement.fromDom(e.elm);var markerPos=absolute$2(markerElement);var markerHeight=get$d(markerElement);var markerTop=markerPos.y;var markerBottom=markerTop+markerHeight;var editorHeaderPos=absolute$3(containerHeader);var editorHeaderHeight=get$d(containerHeader);var editorHeaderTop=editorHeaderPos.top;var editorHeaderBottom=editorHeaderTop+editorHeaderHeight;var editorHeaderDockedAtTop=Math.abs(editorHeaderTop-scrollPos.top)<2;var editorHeaderDockedAtBottom=Math.abs(editorHeaderBottom-(scrollPos.top+viewHeight))<2;if(editorHeaderDockedAtTop&&markerTop<editorHeaderBottom){to(scrollPos.left,markerTop-editorHeaderHeight,doc);}else if(editorHeaderDockedAtBottom&&markerBottom>editorHeaderTop){var y=markerTop-viewHeight+markerHeight+editorHeaderHeight;to(scrollPos.left,y,doc);}};var isDockedMode=function isDockedMode(header,mode){return contains$2(Docking.getModes(header),mode);};var updateIframeContentFlow=function updateIframeContentFlow(header){var getOccupiedHeight=function getOccupiedHeight(elm){return getOuter$2(elm)+(parseInt(get$e(elm,'margin-top'),10)||0)+(parseInt(get$e(elm,'margin-bottom'),10)||0);};var elm=header.element;parent(elm).each(function(parentElem){var padding='padding-'+Docking.getModes(header)[0];if(Docking.isDocked(header)){var parentWidth=get$c(parentElem);set$8(elm,'width',parentWidth+'px');set$8(parentElem,padding,getOccupiedHeight(elm)+'px');}else{remove$6(elm,'width');remove$6(parentElem,padding);}});};var updateSinkVisibility=function updateSinkVisibility(sinkElem,visible){if(visible){remove$2(sinkElem,visibility.fadeOutClass);add$1(sinkElem,[visibility.transitionClass,visibility.fadeInClass]);}else{remove$2(sinkElem,visibility.fadeInClass);add$1(sinkElem,[visibility.fadeOutClass,visibility.transitionClass]);}};var updateEditorClasses=function updateEditorClasses(editor,docked){var editorContainer=SugarElement.fromDom(editor.getContainer());if(docked){add$2(editorContainer,editorStickyOnClass);remove$2(editorContainer,editorStickyOffClass);}else{add$2(editorContainer,editorStickyOffClass);remove$2(editorContainer,editorStickyOnClass);}};var restoreFocus=function restoreFocus(headerElem,focusedElem){var ownerDoc=owner$4(focusedElem);active$1(ownerDoc).filter(function(activeElm){return!eq(focusedElem,activeElm);}).filter(function(activeElm){return eq(activeElm,SugarElement.fromDom(ownerDoc.dom.body))||contains(headerElem,activeElm);}).each(function(){return focus$3(focusedElem);});};var findFocusedElem=function findFocusedElem(rootElm,lazySink){return search(rootElm).orThunk(function(){return lazySink().toOptional().bind(function(sink){return search(sink.element);});});};var setup$9=function setup$9(editor,sharedBackstage,lazyHeader){if(!editor.inline){if(!sharedBackstage.header.isPositionedAtTop()){editor.on('ResizeEditor',function(){lazyHeader().each(Docking.reset);});}editor.on('ResizeWindow ResizeEditor',function(){lazyHeader().each(updateIframeContentFlow);});editor.on('SkinLoaded',function(){lazyHeader().each(function(comp){Docking.isDocked(comp)?Docking.reset(comp):Docking.refresh(comp);});});editor.on('FullscreenStateChanged',function(){lazyHeader().each(Docking.reset);});}editor.on('AfterScrollIntoView',function(e){lazyHeader().each(function(header){Docking.refresh(header);var headerElem=header.element;if(isVisible(headerElem)){scrollFromBehindHeader(e,headerElem);}});});editor.on('PostRender',function(){updateEditorClasses(editor,false);});};var isDocked=function isDocked(lazyHeader){return lazyHeader().map(Docking.isDocked).getOr(false);};var getIframeBehaviours=function getIframeBehaviours(){return[Receiving.config({channels:_defineProperty({},toolbarHeightChange(),{onReceive:updateIframeContentFlow})})];};var getBehaviours=function getBehaviours(editor,sharedBackstage){var focusedElm=value$2();var lazySink=sharedBackstage.getSink;var runOnSinkElement=function runOnSinkElement(f){lazySink().each(function(sink){return f(sink.element);});};var onDockingSwitch=function onDockingSwitch(comp){if(!editor.inline){updateIframeContentFlow(comp);}updateEditorClasses(editor,Docking.isDocked(comp));comp.getSystem().broadcastOn([repositionPopups()],{});lazySink().each(function(sink){return sink.getSystem().broadcastOn([repositionPopups()],{});});};var additionalBehaviours=editor.inline?[]:getIframeBehaviours();return[Focusing.config({}),Docking.config({contextual:_objectSpread({lazyContext:function lazyContext(comp){var headerHeight=getOuter$2(comp.element);var container=editor.inline?editor.getContentAreaContainer():editor.getContainer();var box=box$1(SugarElement.fromDom(container));var boxHeight=box.height-headerHeight;var topBound=box.y+(isDockedMode(comp,'top')?0:headerHeight);return Optional.some(bounds(box.x,topBound,box.width,boxHeight));},onShow:function onShow(){runOnSinkElement(function(elem){return updateSinkVisibility(elem,true);});},onShown:function onShown(comp){runOnSinkElement(function(elem){return remove$1(elem,[visibility.transitionClass,visibility.fadeInClass]);});focusedElm.get().each(function(elem){restoreFocus(comp.element,elem);focusedElm.clear();});},onHide:function onHide(comp){findFocusedElem(comp.element,lazySink).fold(focusedElm.clear,focusedElm.set);runOnSinkElement(function(elem){return updateSinkVisibility(elem,false);});},onHidden:function onHidden(){runOnSinkElement(function(elem){return remove$1(elem,[visibility.transitionClass]);});}},visibility),lazyViewport:function lazyViewport(comp){var win$1=win();var offset=getStickyToolbarOffset(editor);var top=win$1.y+(isDockedMode(comp,'top')?offset:0);var height=win$1.height-(isDockedMode(comp,'bottom')?offset:0);return bounds(win$1.x,top,win$1.width,height);},modes:[sharedBackstage.header.getDockingMode()],onDocked:onDockingSwitch,onUndocked:onDockingSwitch})].concat(_toConsumableArray(additionalBehaviours));};var StickyHeader=/*#__PURE__*/Object.freeze({__proto__:null,setup:setup$9,isDocked:isDocked,getBehaviours:getBehaviours});var renderHeader=function renderHeader(spec){var editor=spec.editor;var getBehaviours$2=spec.sticky?getBehaviours:getBehaviours$1;return{uid:spec.uid,dom:spec.dom,components:spec.components,behaviours:derive$1(getBehaviours$2(editor,spec.sharedBackstage))};};var groupToolbarButtonSchema=objOf([type,requiredOf('items',oneOf([arrOfObj([name$1,requiredArrayOf('items',string)]),string]))].concat(baseToolbarButtonFields));var createGroupToolbarButton=function createGroupToolbarButton(spec){return asRaw('GroupToolbarButton',groupToolbarButtonSchema,spec);};var baseMenuButtonFields=[optionString('text'),optionString('tooltip'),optionString('icon'),requiredFunction('fetch'),defaultedFunction('onSetup',function(){return noop;})];var MenuButtonSchema=objOf([type].concat(baseMenuButtonFields));var createMenuButton=function createMenuButton(spec){return asRaw('menubutton',MenuButtonSchema,spec);};var splitButtonSchema=objOf([type,optionalTooltip,optionalIcon,optionalText,optionalSelect,fetch$1,onSetup,defaultedStringEnum('presets','normal',['normal','color','listpreview']),defaultedColumns(1),onAction,onItemAction]);var createSplitButton=function createSplitButton(spec){return asRaw('SplitButton',splitButtonSchema,spec);};var factory$b=function factory$b(detail,spec){var setMenus=function setMenus(comp,menus){var newMenus=map$2(menus,function(m){var buttonSpec={type:'menubutton',text:m.text,fetch:function fetch(callback){callback(m.getItems());}};var internal=createMenuButton(buttonSpec).mapError(function(errInfo){return formatError(errInfo);}).getOrDie();return renderMenuButton(internal,'tox-mbtn',spec.backstage,Optional.some('menuitem'));});Replacing.set(comp,newMenus);};var apis={focus:Keying.focusIn,setMenus:setMenus};return{uid:detail.uid,dom:detail.dom,components:[],behaviours:derive$1([Replacing.config({}),config('menubar-events',[runOnAttached(function(component){detail.onSetup(component);}),run$1(mouseover(),function(comp,se){descendant(comp.element,'.'+'tox-mbtn--active').each(function(activeButton){closest$1(se.event.target,'.'+'tox-mbtn').each(function(hoveredButton){if(!eq(activeButton,hoveredButton)){comp.getSystem().getByDom(activeButton).each(function(activeComp){comp.getSystem().getByDom(hoveredButton).each(function(hoveredComp){Dropdown.expand(hoveredComp);Dropdown.close(activeComp);Focusing.focus(hoveredComp);});});}});});}),run$1(focusShifted(),function(comp,se){se.event.prevFocus.bind(function(prev){return comp.getSystem().getByDom(prev).toOptional();}).each(function(prev){se.event.newFocus.bind(function(nu){return comp.getSystem().getByDom(nu).toOptional();}).each(function(nu){if(Dropdown.isOpen(prev)){Dropdown.expand(nu);Dropdown.close(prev);}});});})]),Keying.config({mode:'flow',selector:'.'+'tox-mbtn',onEscape:function onEscape(comp){detail.onEscape(comp);return Optional.some(true);}}),Tabstopping.config({})]),apis:apis,domModification:{attributes:{role:'menubar'}}};};var SilverMenubar=single({factory:factory$b,name:'silver.Menubar',configFields:[required$1('dom'),required$1('uid'),required$1('onEscape'),required$1('backstage'),defaulted('onSetup',noop)],apis:{focus:function focus(apis,comp){apis.focus(comp);},setMenus:function setMenus(apis,comp,menus){apis.setMenus(comp,menus);}}});var getAnimationRoot=function getAnimationRoot(component,slideConfig){return slideConfig.getAnimationRoot.fold(function(){return component.element;},function(get){return get(component);});};var getDimensionProperty=function getDimensionProperty(slideConfig){return slideConfig.dimension.property;};var getDimension=function getDimension(slideConfig,elem){return slideConfig.dimension.getDimension(elem);};var disableTransitions=function disableTransitions(component,slideConfig){var root=getAnimationRoot(component,slideConfig);remove$1(root,[slideConfig.shrinkingClass,slideConfig.growingClass]);};var setShrunk=function setShrunk(component,slideConfig){remove$2(component.element,slideConfig.openClass);add$2(component.element,slideConfig.closedClass);set$8(component.element,getDimensionProperty(slideConfig),'0px');reflow(component.element);};var setGrown=function setGrown(component,slideConfig){remove$2(component.element,slideConfig.closedClass);add$2(component.element,slideConfig.openClass);remove$6(component.element,getDimensionProperty(slideConfig));};var doImmediateShrink=function doImmediateShrink(component,slideConfig,slideState,_calculatedSize){slideState.setCollapsed();set$8(component.element,getDimensionProperty(slideConfig),getDimension(slideConfig,component.element));disableTransitions(component,slideConfig);setShrunk(component,slideConfig);slideConfig.onStartShrink(component);slideConfig.onShrunk(component);};var doStartShrink=function doStartShrink(component,slideConfig,slideState,calculatedSize){var size=calculatedSize.getOrThunk(function(){return getDimension(slideConfig,component.element);});slideState.setCollapsed();set$8(component.element,getDimensionProperty(slideConfig),size);reflow(component.element);var root=getAnimationRoot(component,slideConfig);remove$2(root,slideConfig.growingClass);add$2(root,slideConfig.shrinkingClass);setShrunk(component,slideConfig);slideConfig.onStartShrink(component);};var doStartSmartShrink=function doStartSmartShrink(component,slideConfig,slideState){var size=getDimension(slideConfig,component.element);var shrinker=size==='0px'?doImmediateShrink:doStartShrink;shrinker(component,slideConfig,slideState,Optional.some(size));};var doStartGrow=function doStartGrow(component,slideConfig,slideState){var root=getAnimationRoot(component,slideConfig);var wasShrinking=has(root,slideConfig.shrinkingClass);var beforeSize=getDimension(slideConfig,component.element);setGrown(component,slideConfig);var fullSize=getDimension(slideConfig,component.element);var startPartialGrow=function startPartialGrow(){set$8(component.element,getDimensionProperty(slideConfig),beforeSize);reflow(component.element);};var startCompleteGrow=function startCompleteGrow(){setShrunk(component,slideConfig);};var setStartSize=wasShrinking?startPartialGrow:startCompleteGrow;setStartSize();remove$2(root,slideConfig.shrinkingClass);add$2(root,slideConfig.growingClass);setGrown(component,slideConfig);set$8(component.element,getDimensionProperty(slideConfig),fullSize);slideState.setExpanded();slideConfig.onStartGrow(component);};var refresh$3=function refresh$3(component,slideConfig,slideState){if(slideState.isExpanded()){remove$6(component.element,getDimensionProperty(slideConfig));var fullSize=getDimension(slideConfig,component.element);set$8(component.element,getDimensionProperty(slideConfig),fullSize);}};var grow=function grow(component,slideConfig,slideState){if(!slideState.isExpanded()){doStartGrow(component,slideConfig,slideState);}};var shrink=function shrink(component,slideConfig,slideState){if(slideState.isExpanded()){doStartSmartShrink(component,slideConfig,slideState);}};var immediateShrink=function immediateShrink(component,slideConfig,slideState){if(slideState.isExpanded()){doImmediateShrink(component,slideConfig,slideState);}};var hasGrown=function hasGrown(component,slideConfig,slideState){return slideState.isExpanded();};var hasShrunk=function hasShrunk(component,slideConfig,slideState){return slideState.isCollapsed();};var isGrowing=function isGrowing(component,slideConfig,_slideState){var root=getAnimationRoot(component,slideConfig);return has(root,slideConfig.growingClass)===true;};var isShrinking=function isShrinking(component,slideConfig,_slideState){var root=getAnimationRoot(component,slideConfig);return has(root,slideConfig.shrinkingClass)===true;};var isTransitioning=function isTransitioning(component,slideConfig,slideState){return isGrowing(component,slideConfig)||isShrinking(component,slideConfig);};var toggleGrow=function toggleGrow(component,slideConfig,slideState){var f=slideState.isExpanded()?doStartSmartShrink:doStartGrow;f(component,slideConfig,slideState);};var immediateGrow=function immediateGrow(component,slideConfig,slideState){if(!slideState.isExpanded()){setGrown(component,slideConfig);set$8(component.element,getDimensionProperty(slideConfig),getDimension(slideConfig,component.element));disableTransitions(component,slideConfig);slideState.setExpanded();slideConfig.onStartGrow(component);slideConfig.onGrown(component);}};var SlidingApis=/*#__PURE__*/Object.freeze({__proto__:null,refresh:refresh$3,grow:grow,shrink:shrink,immediateShrink:immediateShrink,hasGrown:hasGrown,hasShrunk:hasShrunk,isGrowing:isGrowing,isShrinking:isShrinking,isTransitioning:isTransitioning,toggleGrow:toggleGrow,disableTransitions:disableTransitions,immediateGrow:immediateGrow});var exhibit=function exhibit(base,slideConfig,_slideState){var expanded=slideConfig.expanded;return expanded?nu$7({classes:[slideConfig.openClass],styles:{}}):nu$7({classes:[slideConfig.closedClass],styles:wrap$1(slideConfig.dimension.property,'0px')});};var events$4=function events$4(slideConfig,slideState){return derive$2([runOnSource(transitionend(),function(component,simulatedEvent){var raw=simulatedEvent.event.raw;if(raw.propertyName===slideConfig.dimension.property){disableTransitions(component,slideConfig);if(slideState.isExpanded()){remove$6(component.element,slideConfig.dimension.property);}var notify=slideState.isExpanded()?slideConfig.onGrown:slideConfig.onShrunk;notify(component);}})]);};var ActiveSliding=/*#__PURE__*/Object.freeze({__proto__:null,exhibit:exhibit,events:events$4});var SlidingSchema=[required$1('closedClass'),required$1('openClass'),required$1('shrinkingClass'),required$1('growingClass'),option$3('getAnimationRoot'),onHandler('onShrunk'),onHandler('onStartShrink'),onHandler('onGrown'),onHandler('onStartGrow'),defaulted('expanded',false),requiredOf('dimension',choose$1('property',{width:[output$1('property','width'),output$1('getDimension',function(elem){return get$c(elem)+'px';})],height:[output$1('property','height'),output$1('getDimension',function(elem){return get$d(elem)+'px';})]}))];var init$5=function init$5(spec){var state=Cell(spec.expanded);var readState=function readState(){return'expanded: '+state.get();};return nu$8({isExpanded:function isExpanded(){return state.get()===true;},isCollapsed:function isCollapsed(){return state.get()===false;},setCollapsed:curry(state.set,false),setExpanded:curry(state.set,true),readState:readState});};var SlidingState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$5});var Sliding=create$3({fields:SlidingSchema,name:'sliding',active:ActiveSliding,apis:SlidingApis,state:SlidingState});var owner='container';var schema$d=[field('slotBehaviours',[])];var getPartName=function getPartName(name){return'<alloy.field.'+name+'>';};var sketch=function sketch(sSpec){var parts=function(){var record=[];var slot=function slot(name,config){record.push(name);return generateOne$1(owner,getPartName(name),config);};return{slot:slot,record:constant$1(record)};}();var spec=sSpec(parts);var partNames=parts.record();var fieldParts=map$2(partNames,function(n){return required({name:n,pname:getPartName(n)});});return composite$1(owner,schema$d,fieldParts,make$1,spec);};var make$1=function make$1(detail,components){var getSlotNames=function getSlotNames(_){return getAllPartNames(detail);};var getSlot=function getSlot(container,key){return getPart(container,detail,key);};var onSlot=function onSlot(f,def){return function(container,key){return getPart(container,detail,key).map(function(slot){return f(slot,key);}).getOr(def);};};var onSlots=function onSlots(f){return function(container,keys){each$1(keys,function(key){return f(container,key);});};};var doShowing=function doShowing(comp,_key){return get$f(comp.element,'aria-hidden')!=='true';};var doShow=function doShow(comp,key){if(!doShowing(comp)){var _element=comp.element;remove$6(_element,'display');remove$7(_element,'aria-hidden');emitWith(comp,slotVisibility(),{name:key,visible:true});}};var doHide=function doHide(comp,key){if(doShowing(comp)){var _element2=comp.element;set$8(_element2,'display','none');set$9(_element2,'aria-hidden','true');emitWith(comp,slotVisibility(),{name:key,visible:false});}};var isShowing=onSlot(doShowing,false);var hideSlot=onSlot(doHide);var hideSlots=onSlots(hideSlot);var hideAllSlots=function hideAllSlots(container){return hideSlots(container,getSlotNames());};var showSlot=onSlot(doShow);var apis={getSlotNames:getSlotNames,getSlot:getSlot,isShowing:isShowing,hideSlot:hideSlot,hideAllSlots:hideAllSlots,showSlot:showSlot};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:get$3(detail.slotBehaviours),apis:apis};};var slotApis=map$1({getSlotNames:function getSlotNames(apis,c){return apis.getSlotNames(c);},getSlot:function getSlot(apis,c,key){return apis.getSlot(c,key);},isShowing:function isShowing(apis,c,key){return apis.isShowing(c,key);},hideSlot:function hideSlot(apis,c,key){return apis.hideSlot(c,key);},hideAllSlots:function hideAllSlots(apis,c){return apis.hideAllSlots(c);},showSlot:function showSlot(apis,c,key){return apis.showSlot(c,key);}},function(value){return makeApi(value);});var SlotContainer=_objectSpread({},slotApis,{},{sketch:sketch});var sidebarSchema=objOf([optionalIcon,optionalTooltip,defaultedFunction('onShow',noop),defaultedFunction('onHide',noop),onSetup]);var createSidebar=function createSidebar(spec){return asRaw('sidebar',sidebarSchema,spec);};var setup$8=function setup$8(editor){var _editor$ui$registry$g=editor.ui.registry.getAll(),sidebars=_editor$ui$registry$g.sidebars;each$1(keys(sidebars),function(name){var spec=sidebars[name];var isActive=function isActive(){return is$1(Optional.from(editor.queryCommandValue('ToggleSidebar')),name);};editor.ui.registry.addToggleButton(name,{icon:spec.icon,tooltip:spec.tooltip,onAction:function onAction(buttonApi){editor.execCommand('ToggleSidebar',false,name);buttonApi.setActive(isActive());},onSetup:function onSetup(buttonApi){buttonApi.setActive(isActive());var handleToggle=function handleToggle(){return buttonApi.setActive(isActive());};editor.on('ToggleSidebar',handleToggle);return function(){editor.off('ToggleSidebar',handleToggle);};}});});};var getApi=function getApi(comp){return{element:function element(){return comp.element.dom;}};};var makePanels=function makePanels(parts,panelConfigs){var specs=map$2(keys(panelConfigs),function(name){var spec=panelConfigs[name];var bridged=getOrDie(createSidebar(spec));return{name:name,getApi:getApi,onSetup:bridged.onSetup,onShow:bridged.onShow,onHide:bridged.onHide};});return map$2(specs,function(spec){var editorOffCell=Cell(noop);return parts.slot(spec.name,{dom:{tag:'div',classes:['tox-sidebar__pane']},behaviours:SimpleBehaviours.unnamedEvents([onControlAttached(spec,editorOffCell),onControlDetached(spec,editorOffCell),run$1(slotVisibility(),function(sidepanel,se){var data=se.event;var optSidePanelSpec=find$5(specs,function(config){return config.name===data.name;});optSidePanelSpec.each(function(sidePanelSpec){var handler=data.visible?sidePanelSpec.onShow:sidePanelSpec.onHide;handler(sidePanelSpec.getApi(sidepanel));});})])});});};var makeSidebar=function makeSidebar(panelConfigs){return SlotContainer.sketch(function(parts){return{dom:{tag:'div',classes:['tox-sidebar__pane-container']},components:makePanels(parts,panelConfigs),slotBehaviours:SimpleBehaviours.unnamedEvents([runOnAttached(function(slotContainer){return SlotContainer.hideAllSlots(slotContainer);})])};});};var _setSidebar=function setSidebar(sidebar,panelConfigs,showSidebar){var optSlider=Composing.getCurrent(sidebar);optSlider.each(function(slider){Replacing.set(slider,[makeSidebar(panelConfigs)]);var configKey=showSidebar===null||showSidebar===void 0?void 0:showSidebar.toLowerCase();if(isString(showSidebar)&&has$2(panelConfigs,configKey)){Composing.getCurrent(slider).each(function(slotContainer){SlotContainer.showSlot(slotContainer,configKey);Sliding.immediateGrow(slider);remove$6(slider.element,'width');});}});};var _toggleSidebar=function toggleSidebar(sidebar,name){var optSlider=Composing.getCurrent(sidebar);optSlider.each(function(slider){var optSlotContainer=Composing.getCurrent(slider);optSlotContainer.each(function(slotContainer){if(Sliding.hasGrown(slider)){if(SlotContainer.isShowing(slotContainer,name)){Sliding.shrink(slider);}else{SlotContainer.hideAllSlots(slotContainer);SlotContainer.showSlot(slotContainer,name);}}else{SlotContainer.hideAllSlots(slotContainer);SlotContainer.showSlot(slotContainer,name);Sliding.grow(slider);}});});};var _whichSidebar=function whichSidebar(sidebar){var optSlider=Composing.getCurrent(sidebar);return optSlider.bind(function(slider){var sidebarOpen=Sliding.isGrowing(slider)||Sliding.hasGrown(slider);if(sidebarOpen){var optSlotContainer=Composing.getCurrent(slider);return optSlotContainer.bind(function(slotContainer){return find$5(SlotContainer.getSlotNames(slotContainer),function(name){return SlotContainer.isShowing(slotContainer,name);});});}else{return Optional.none();}});};var fixSize=generate$6('FixSizeEvent');var autoSize=generate$6('AutoSizeEvent');var renderSidebar=function renderSidebar(spec){return{uid:spec.uid,dom:{tag:'div',classes:['tox-sidebar'],attributes:{role:'complementary'}},components:[{dom:{tag:'div',classes:['tox-sidebar__slider']},components:[],behaviours:derive$1([Tabstopping.config({}),Focusing.config({}),Sliding.config({dimension:{property:'width'},closedClass:'tox-sidebar--sliding-closed',openClass:'tox-sidebar--sliding-open',shrinkingClass:'tox-sidebar--sliding-shrinking',growingClass:'tox-sidebar--sliding-growing',onShrunk:function onShrunk(slider){var optSlotContainer=Composing.getCurrent(slider);optSlotContainer.each(SlotContainer.hideAllSlots);emit(slider,autoSize);},onGrown:function onGrown(slider){emit(slider,autoSize);},onStartGrow:function onStartGrow(slider){emitWith(slider,fixSize,{width:getRaw(slider.element,'width').getOr('')});},onStartShrink:function onStartShrink(slider){emitWith(slider,fixSize,{width:get$c(slider.element)+'px'});}}),Replacing.config({}),Composing.config({find:function find(comp){var children=Replacing.contents(comp);return head(children);}})])}],behaviours:derive$1([ComposingConfigs.childAt(0),config('sidebar-sliding-events',[run$1(fixSize,function(comp,se){set$8(comp.element,'width',se.event.width);}),run$1(autoSize,function(comp,_se){remove$6(comp.element,'width');})])])};};var block=function block(component,config,state,getBusySpec){set$9(component.element,'aria-busy',true);var root=config.getRoot(component).getOr(component);var blockerBehaviours=derive$1([Keying.config({mode:'special',onTab:function onTab(){return Optional.some(true);},onShiftTab:function onShiftTab(){return Optional.some(true);}}),Focusing.config({})]);var blockSpec=getBusySpec(root,blockerBehaviours);var blocker=root.getSystem().build(blockSpec);Replacing.append(root,premade(blocker));if(blocker.hasConfigured(Keying)&&config.focus){Keying.focusIn(blocker);}if(!state.isBlocked()){config.onBlock(component);}state.blockWith(function(){return Replacing.remove(root,blocker);});};var unblock=function unblock(component,config,state){remove$7(component.element,'aria-busy');if(state.isBlocked()){config.onUnblock(component);}state.clear();};var BlockingApis=/*#__PURE__*/Object.freeze({__proto__:null,block:block,unblock:unblock});var BlockingSchema=[defaultedFunction('getRoot',Optional.none),defaultedBoolean('focus',true),onHandler('onBlock'),onHandler('onUnblock')];var init$4=function init$4(){var blocker=destroyable();var blockWith=function blockWith(destroy){blocker.set({destroy:destroy});};return nu$8({readState:blocker.isSet,blockWith:blockWith,clear:blocker.clear,isBlocked:blocker.isSet});};var BlockingState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$4});var Blocking=create$3({fields:BlockingSchema,name:'blocking',apis:BlockingApis,state:BlockingState});var getAttrs=function getAttrs(elem){var attributes=elem.dom.attributes!==undefined?elem.dom.attributes:[];return foldl(attributes,function(b,attr){if(attr.name==='class'){return b;}else{return _objectSpread({},b,_defineProperty({},attr.name,attr.value));}},{});};var getClasses=function getClasses(elem){return Array.prototype.slice.call(elem.dom.classList,0);};var fromHtml=function fromHtml(html){var elem=SugarElement.fromHtml(html);var children$1=children(elem);var attrs=getAttrs(elem);var classes=getClasses(elem);var contents=children$1.length===0?{}:{innerHtml:get$9(elem)};return _objectSpread({tag:name$3(elem),classes:classes,attributes:attrs},contents);};var getBusySpec$1=function getBusySpec$1(providerBackstage){return function(_root,_behaviours){return{dom:{tag:'div',attributes:{'aria-label':providerBackstage.translate('Loading...'),'tabindex':'0'},classes:['tox-throbber__busy-spinner']},components:[{dom:fromHtml('<div class="tox-spinner"><div></div><div></div><div></div></div>')}]};};};var focusBusyComponent=function focusBusyComponent(throbber){return Composing.getCurrent(throbber).each(function(comp){return focus$3(comp.element);});};var toggleEditorTabIndex=function toggleEditorTabIndex(editor,state){var tabIndexAttr='tabindex';var dataTabIndexAttr="data-mce-".concat(tabIndexAttr);Optional.from(editor.iframeElement).map(SugarElement.fromDom).each(function(iframe){if(state){getOpt(iframe,tabIndexAttr).each(function(tabIndex){return set$9(iframe,dataTabIndexAttr,tabIndex);});set$9(iframe,tabIndexAttr,-1);}else{remove$7(iframe,tabIndexAttr);getOpt(iframe,dataTabIndexAttr).each(function(tabIndex){set$9(iframe,tabIndexAttr,tabIndex);remove$7(iframe,dataTabIndexAttr);});}});};var toggleThrobber=function toggleThrobber(editor,comp,state,providerBackstage){var element=comp.element;toggleEditorTabIndex(editor,state);if(state){Blocking.block(comp,getBusySpec$1(providerBackstage));remove$6(element,'display');remove$7(element,'aria-hidden');if(editor.hasFocus()){focusBusyComponent(comp);}}else{var throbberFocus=Composing.getCurrent(comp).exists(function(busyComp){return hasFocus(busyComp.element);});Blocking.unblock(comp);set$8(element,'display','none');set$9(element,'aria-hidden','true');if(throbberFocus){editor.focus();}}};var renderThrobber=function renderThrobber(spec){return{uid:spec.uid,dom:{tag:'div',attributes:{'aria-hidden':'true'},classes:['tox-throbber'],styles:{display:'none'}},behaviours:derive$1([Replacing.config({}),Blocking.config({focus:false}),Composing.config({find:function find(comp){return head(comp.components());}})]),components:[]};};var isFocusEvent=function isFocusEvent(event){return event.type==='focusin';};var isPasteBinTarget=function isPasteBinTarget(event){if(isFocusEvent(event)){var node=event.composed?head(event.composedPath()):Optional.from(event.target);return node.map(SugarElement.fromDom).filter(isElement$1).exists(function(targetElm){return has(targetElm,'mce-pastebin');});}else{return false;}};var setup$7=function setup$7(editor,lazyThrobber,sharedBackstage){var throbberState=Cell(false);var timer=value$2();var stealFocus=function stealFocus(e){if(throbberState.get()&&!isPasteBinTarget(e)){e.preventDefault();focusBusyComponent(lazyThrobber());editor.editorManager.setActive(editor);}};if(!editor.inline){editor.on('PreInit',function(){editor.dom.bind(editor.getWin(),'focusin',stealFocus);editor.on('BeforeExecCommand',function(e){if(e.command.toLowerCase()==='mcefocus'&&e.value!==true){stealFocus(e);}});});}var toggle=function toggle(state){if(state!==throbberState.get()){throbberState.set(state);toggleThrobber(editor,lazyThrobber(),state,sharedBackstage.providers);editor.dispatch('AfterProgressState',{state:state});}};editor.on('ProgressState',function(e){timer.on(clearTimeout);if(isNumber(e.time)){var timerId=global$9.setEditorTimeout(editor,function(){return toggle(e.state);},e.time);timer.set(timerId);}else{toggle(e.state);timer.clear();}});};var generate$1=function generate$1(xs,f){var init={len:0,list:[]};var r=foldl(xs,function(b,a){var value=f(a,b.len);return value.fold(constant$1(b),function(v){return{len:v.finish,list:b.list.concat([v])};});},init);return r.list;};var output=function output(within,extra,withinWidth){return{within:within,extra:extra,withinWidth:withinWidth};};var apportion=function apportion(units,total,len){var parray=generate$1(units,function(unit,current){var width=len(unit);return Optional.some({element:unit,start:current,finish:current+width,width:width});});var within=filter$2(parray,function(unit){return unit.finish<=total;});var withinWidth=foldr(within,function(acc,el){return acc+el.width;},0);var extra=parray.slice(within.length);return{within:within,extra:extra,withinWidth:withinWidth};};var toUnit=function toUnit(parray){return map$2(parray,function(unit){return unit.element;});};var fitLast=function fitLast(within,extra,withinWidth){var fits=toUnit(within.concat(extra));return output(fits,[],withinWidth);};var overflow=function overflow(within,extra,overflower,withinWidth){var fits=toUnit(within).concat([overflower]);return output(fits,toUnit(extra),withinWidth);};var fitAll=function fitAll(within,extra,withinWidth){return output(toUnit(within),[],withinWidth);};var tryFit=function tryFit(total,units,len){var divide=apportion(units,total,len);return divide.extra.length===0?Optional.some(divide):Optional.none();};var partition=function partition(total,units,len,overflower){var divide=tryFit(total,units,len).getOrThunk(function(){return apportion(units,total-len(overflower),len);});var within=divide.within;var extra=divide.extra;var withinWidth=divide.withinWidth;if(extra.length===1&&extra[0].width<=len(overflower)){return fitLast(within,extra,withinWidth);}else if(extra.length>=1){return overflow(within,extra,overflower,withinWidth);}else{return fitAll(within,extra,withinWidth);}};var setGroups$1=function setGroups$1(toolbar,storedGroups){var bGroups=map$2(storedGroups,function(g){return premade(g);});Toolbar.setGroups(toolbar,bGroups);};var findFocusedComp=function findFocusedComp(comps){return findMap(comps,function(comp){return search(comp.element).bind(function(focusedElm){return comp.getSystem().getByDom(focusedElm).toOptional();});});};var refresh$2=function refresh$2(toolbar,detail,setOverflow){var builtGroups=detail.builtGroups.get();if(builtGroups.length===0){return;}var primary=getPartOrDie(toolbar,detail,'primary');var overflowGroup=Coupling.getCoupled(toolbar,'overflowGroup');set$8(primary.element,'visibility','hidden');var groups=builtGroups.concat([overflowGroup]);var focusedComp=findFocusedComp(groups);setOverflow([]);setGroups$1(primary,groups);var availableWidth=get$c(primary.element);var overflows=partition(availableWidth,detail.builtGroups.get(),function(comp){return get$c(comp.element);},overflowGroup);if(overflows.extra.length===0){Replacing.remove(primary,overflowGroup);setOverflow([]);}else{setGroups$1(primary,overflows.within);setOverflow(overflows.extra);}remove$6(primary.element,'visibility');reflow(primary.element);focusedComp.each(Focusing.focus);};var schema$c=constant$1([field('splitToolbarBehaviours',[Coupling]),customField('builtGroups',function(){return Cell([]);})]);var schema$b=constant$1([markers$1(['overflowToggledClass']),optionFunction('getOverflowBounds'),required$1('lazySink'),customField('overflowGroups',function(){return Cell([]);})].concat(schema$c()));var parts$7=constant$1([required({factory:Toolbar,schema:schema$e(),name:'primary'}),external({schema:schema$e(),name:'overflow'}),external({name:'overflow-button'}),external({name:'overflow-group'})]);var expandable=constant$1(function(element,available){setMax(element,Math.floor(available));});var schema$a=constant$1([markers$1(['toggledClass']),required$1('lazySink'),requiredFunction('fetch'),optionFunction('getBounds'),optionObjOf('fireDismissalEventInstead',[defaulted('event',dismissRequested())]),schema$y()]);var parts$6=constant$1([external({name:'button',overrides:function overrides(detail){return{dom:{attributes:{'aria-haspopup':'true'}},buttonBehaviours:derive$1([Toggling.config({toggleClass:detail.markers.toggledClass,aria:{mode:'expanded'},toggleOnExecute:false})])};}}),external({factory:Toolbar,schema:schema$e(),name:'toolbar',overrides:function overrides(detail){return{toolbarBehaviours:derive$1([Keying.config({mode:'cyclic',onEscape:function onEscape(comp){getPart(comp,detail,'button').each(Focusing.focus);return Optional.none();}})])};}})]);var _toggle=function toggle(button,externals){var toolbarSandbox=Coupling.getCoupled(button,'toolbarSandbox');if(Sandboxing.isOpen(toolbarSandbox)){Sandboxing.close(toolbarSandbox);}else{Sandboxing.open(toolbarSandbox,externals.toolbar());}};var position=function position(button,toolbar,detail,layouts){var bounds=detail.getBounds.map(function(bounder){return bounder();});var sink=detail.lazySink(button).getOrDie();Positioning.positionWithinBounds(sink,toolbar,{anchor:{type:'hotspot',hotspot:button,layouts:layouts,overrides:{maxWidthFunction:expandable()}}},bounds);};var _setGroups=function setGroups(button,toolbar,detail,layouts,groups){Toolbar.setGroups(toolbar,groups);position(button,toolbar,detail,layouts);Toggling.on(button);};var makeSandbox=function makeSandbox(button,spec,detail){var ariaControls=manager();var onOpen=function onOpen(sandbox,toolbar){detail.fetch().get(function(groups){_setGroups(button,toolbar,detail,spec.layouts,groups);ariaControls.link(button.element);Keying.focusIn(toolbar);});};var onClose=function onClose(){Toggling.off(button);Focusing.focus(button);ariaControls.unlink(button.element);};return{dom:{tag:'div',attributes:{id:ariaControls.id}},behaviours:derive$1([Keying.config({mode:'special',onEscape:function onEscape(comp){Sandboxing.close(comp);return Optional.some(true);}}),Sandboxing.config({onOpen:onOpen,onClose:onClose,isPartOf:function isPartOf(container,data,queryElem){return isPartOf$1(data,queryElem)||isPartOf$1(button,queryElem);},getAttachPoint:function getAttachPoint(){return detail.lazySink(button).getOrDie();}}),Receiving.config({channels:_objectSpread({},receivingChannel$1(_objectSpread({isExtraPart:never},detail.fireDismissalEventInstead.map(function(fe){return{fireEventInstead:{event:fe.event}};}).getOr({}))),{},receivingChannel({doReposition:function doReposition(){Sandboxing.getState(Coupling.getCoupled(button,'toolbarSandbox')).each(function(toolbar){position(button,toolbar,detail,spec.layouts);});}}))})])};};var factory$a=function factory$a(detail,components,spec,externals){return _objectSpread({},Button.sketch(_objectSpread({},externals.button(),{action:function action(button){_toggle(button,externals);},buttonBehaviours:SketchBehaviours.augment({dump:externals.button().buttonBehaviours},[Coupling.config({others:{toolbarSandbox:function toolbarSandbox(button){return makeSandbox(button,spec,detail);}}})])})),{apis:{setGroups:function setGroups(button,groups){Sandboxing.getState(Coupling.getCoupled(button,'toolbarSandbox')).each(function(toolbar){_setGroups(button,toolbar,detail,spec.layouts,groups);});},reposition:function reposition(button){Sandboxing.getState(Coupling.getCoupled(button,'toolbarSandbox')).each(function(toolbar){position(button,toolbar,detail,spec.layouts);});},toggle:function toggle(button){_toggle(button,externals);},getToolbar:function getToolbar(button){return Sandboxing.getState(Coupling.getCoupled(button,'toolbarSandbox'));},isOpen:function isOpen(button){return Sandboxing.isOpen(Coupling.getCoupled(button,'toolbarSandbox'));}}});};var FloatingToolbarButton=composite({name:'FloatingToolbarButton',factory:factory$a,configFields:schema$a(),partFields:parts$6(),apis:{setGroups:function setGroups(apis,button,groups){apis.setGroups(button,groups);},reposition:function reposition(apis,button){apis.reposition(button);},toggle:function toggle(apis,button){apis.toggle(button);},getToolbar:function getToolbar(apis,button){return apis.getToolbar(button);},isOpen:function isOpen(apis,button){return apis.isOpen(button);}}});var schema$9=constant$1([required$1('items'),markers$1(['itemSelector']),field('tgroupBehaviours',[Keying])]);var parts$5=constant$1([group({name:'items',unit:'item'})]);var factory$9=function factory$9(detail,components,_spec,_externals){return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.tgroupBehaviours,[Keying.config({mode:'flow',selector:detail.markers.itemSelector})]),domModification:{attributes:{role:'toolbar'}}};};var ToolbarGroup=composite({name:'ToolbarGroup',configFields:schema$9(),partFields:parts$5(),factory:factory$9});var buildGroups=function buildGroups(comps){return map$2(comps,function(g){return premade(g);});};var refresh$1=function refresh$1(toolbar,memFloatingToolbarButton,detail){refresh$2(toolbar,detail,function(overflowGroups){detail.overflowGroups.set(overflowGroups);memFloatingToolbarButton.getOpt(toolbar).each(function(floatingToolbarButton){FloatingToolbarButton.setGroups(floatingToolbarButton,buildGroups(overflowGroups));});});};var factory$8=function factory$8(detail,components,spec,externals){var memFloatingToolbarButton=record(FloatingToolbarButton.sketch({fetch:function fetch(){return Future.nu(function(resolve){resolve(buildGroups(detail.overflowGroups.get()));});},layouts:{onLtr:function onLtr(){return[southwest$2,southeast$2];},onRtl:function onRtl(){return[southeast$2,southwest$2];},onBottomLtr:function onBottomLtr(){return[northwest$2,northeast$2];},onBottomRtl:function onBottomRtl(){return[northeast$2,northwest$2];}},getBounds:spec.getOverflowBounds,lazySink:detail.lazySink,fireDismissalEventInstead:{},markers:{toggledClass:detail.markers.overflowToggledClass},parts:{button:externals['overflow-button'](),toolbar:externals.overflow()}}));return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.splitToolbarBehaviours,[Coupling.config({others:{overflowGroup:function overflowGroup(){return ToolbarGroup.sketch(_objectSpread({},externals['overflow-group'](),{items:[memFloatingToolbarButton.asSpec()]}));}}})]),apis:{setGroups:function setGroups(toolbar,groups){detail.builtGroups.set(map$2(groups,toolbar.getSystem().build));refresh$1(toolbar,memFloatingToolbarButton,detail);},refresh:function refresh(toolbar){return refresh$1(toolbar,memFloatingToolbarButton,detail);},toggle:function toggle(toolbar){memFloatingToolbarButton.getOpt(toolbar).each(function(floatingToolbarButton){FloatingToolbarButton.toggle(floatingToolbarButton);});},isOpen:function isOpen(toolbar){return memFloatingToolbarButton.getOpt(toolbar).map(FloatingToolbarButton.isOpen).getOr(false);},reposition:function reposition(toolbar){memFloatingToolbarButton.getOpt(toolbar).each(function(floatingToolbarButton){FloatingToolbarButton.reposition(floatingToolbarButton);});},getOverflow:function getOverflow(toolbar){return memFloatingToolbarButton.getOpt(toolbar).bind(FloatingToolbarButton.getToolbar);}},domModification:{attributes:{role:'group'}}};};var SplitFloatingToolbar=composite({name:'SplitFloatingToolbar',configFields:schema$b(),partFields:parts$7(),factory:factory$8,apis:{setGroups:function setGroups(apis,toolbar,groups){apis.setGroups(toolbar,groups);},refresh:function refresh(apis,toolbar){apis.refresh(toolbar);},reposition:function reposition(apis,toolbar){apis.reposition(toolbar);},toggle:function toggle(apis,toolbar){apis.toggle(toolbar);},isOpen:function isOpen(apis,toolbar){return apis.isOpen(toolbar);},getOverflow:function getOverflow(apis,toolbar){return apis.getOverflow(toolbar);}}});var schema$8=constant$1([markers$1(['closedClass','openClass','shrinkingClass','growingClass','overflowToggledClass']),onHandler('onOpened'),onHandler('onClosed')].concat(schema$c()));var parts$4=constant$1([required({factory:Toolbar,schema:schema$e(),name:'primary'}),required({factory:Toolbar,schema:schema$e(),name:'overflow',overrides:function overrides(detail){return{toolbarBehaviours:derive$1([Sliding.config({dimension:{property:'height'},closedClass:detail.markers.closedClass,openClass:detail.markers.openClass,shrinkingClass:detail.markers.shrinkingClass,growingClass:detail.markers.growingClass,onShrunk:function onShrunk(comp){getPart(comp,detail,'overflow-button').each(function(button){Toggling.off(button);Focusing.focus(button);});detail.onClosed(comp);},onGrown:function onGrown(comp){Keying.focusIn(comp);detail.onOpened(comp);},onStartGrow:function onStartGrow(comp){getPart(comp,detail,'overflow-button').each(Toggling.on);}}),Keying.config({mode:'acyclic',onEscape:function onEscape(comp){getPart(comp,detail,'overflow-button').each(Focusing.focus);return Optional.some(true);}})])};}}),external({name:'overflow-button',overrides:function overrides(detail){return{buttonBehaviours:derive$1([Toggling.config({toggleClass:detail.markers.overflowToggledClass,aria:{mode:'pressed'},toggleOnExecute:false})])};}}),external({name:'overflow-group'})]);var _isOpen=function isOpen(toolbar,detail){return getPart(toolbar,detail,'overflow').map(Sliding.hasGrown).getOr(false);};var toggleToolbar=function toggleToolbar(toolbar,detail){getPart(toolbar,detail,'overflow-button').bind(function(){return getPart(toolbar,detail,'overflow');}).each(function(overf){_refresh(toolbar,detail);Sliding.toggleGrow(overf);});};var _refresh=function refresh(toolbar,detail){getPart(toolbar,detail,'overflow').each(function(overflow){refresh$2(toolbar,detail,function(groups){var builtGroups=map$2(groups,function(g){return premade(g);});Toolbar.setGroups(overflow,builtGroups);});getPart(toolbar,detail,'overflow-button').each(function(button){if(Sliding.hasGrown(overflow)){Toggling.on(button);}});Sliding.refresh(overflow);});};var factory$7=function factory$7(detail,components,spec,externals){var toolbarToggleEvent='alloy.toolbar.toggle';var doSetGroups=function doSetGroups(toolbar,groups){var built=map$2(groups,toolbar.getSystem().build);detail.builtGroups.set(built);};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:augment(detail.splitToolbarBehaviours,[Coupling.config({others:{overflowGroup:function overflowGroup(toolbar){return ToolbarGroup.sketch(_objectSpread({},externals['overflow-group'](),{items:[Button.sketch(_objectSpread({},externals['overflow-button'](),{action:function action(_button){emit(toolbar,toolbarToggleEvent);}}))]}));}}}),config('toolbar-toggle-events',[run$1(toolbarToggleEvent,function(toolbar){toggleToolbar(toolbar,detail);})])]),apis:{setGroups:function setGroups(toolbar,groups){doSetGroups(toolbar,groups);_refresh(toolbar,detail);},refresh:function refresh(toolbar){return _refresh(toolbar,detail);},toggle:function toggle(toolbar){return toggleToolbar(toolbar,detail);},isOpen:function isOpen(toolbar){return _isOpen(toolbar,detail);}},domModification:{attributes:{role:'group'}}};};var SplitSlidingToolbar=composite({name:'SplitSlidingToolbar',configFields:schema$8(),partFields:parts$4(),factory:factory$7,apis:{setGroups:function setGroups(apis,toolbar,groups){apis.setGroups(toolbar,groups);},refresh:function refresh(apis,toolbar){apis.refresh(toolbar);},toggle:function toggle(apis,toolbar){apis.toggle(toolbar);},isOpen:function isOpen(apis,toolbar){return apis.isOpen(toolbar);}}});var renderToolbarGroupCommon=function renderToolbarGroupCommon(toolbarGroup){var attributes=toolbarGroup.title.fold(function(){return{};},function(title){return{attributes:{title:title}};});return{dom:_objectSpread({tag:'div',classes:['tox-toolbar__group']},attributes),components:[ToolbarGroup.parts.items({})],items:toolbarGroup.items,markers:{itemSelector:'*:not(.tox-split-button) > .tox-tbtn:not([disabled]), '+'.tox-split-button:not([disabled]), '+'.tox-toolbar-nav-js:not([disabled])'},tgroupBehaviours:derive$1([Tabstopping.config({}),Focusing.config({})])};};var renderToolbarGroup=function renderToolbarGroup(toolbarGroup){return ToolbarGroup.sketch(renderToolbarGroupCommon(toolbarGroup));};var getToolbarbehaviours=function getToolbarbehaviours(toolbarSpec,modeName){var onAttached=runOnAttached(function(component){var groups=map$2(toolbarSpec.initGroups,renderToolbarGroup);Toolbar.setGroups(component,groups);});return derive$1([DisablingConfigs.toolbarButton(toolbarSpec.providers.isDisabled),receivingConfig(),Keying.config({mode:modeName,onEscape:toolbarSpec.onEscape,selector:'.tox-toolbar__group'}),config('toolbar-events',[onAttached])]);};var renderMoreToolbarCommon=function renderMoreToolbarCommon(toolbarSpec){var modeName=toolbarSpec.cyclicKeying?'cyclic':'acyclic';return{uid:toolbarSpec.uid,dom:{tag:'div',classes:['tox-toolbar-overlord']},parts:{'overflow-group':renderToolbarGroupCommon({title:Optional.none(),items:[]}),'overflow-button':renderIconButtonSpec({name:'more',icon:Optional.some('more-drawer'),enabled:true,tooltip:Optional.some('More...'),primary:false,buttonType:Optional.none(),borderless:false},Optional.none(),toolbarSpec.providers)},splitToolbarBehaviours:getToolbarbehaviours(toolbarSpec,modeName)};};var renderFloatingMoreToolbar=function renderFloatingMoreToolbar(toolbarSpec){var baseSpec=renderMoreToolbarCommon(toolbarSpec);var overflowXOffset=4;var primary=SplitFloatingToolbar.parts.primary({dom:{tag:'div',classes:['tox-toolbar__primary']}});return SplitFloatingToolbar.sketch(_objectSpread({},baseSpec,{lazySink:toolbarSpec.getSink,getOverflowBounds:function getOverflowBounds(){var headerElem=toolbarSpec.moreDrawerData.lazyHeader().element;var headerBounds=absolute$2(headerElem);var docElem=documentElement(headerElem);var docBounds=absolute$2(docElem);var height=Math.max(docElem.dom.scrollHeight,docBounds.height);return bounds(headerBounds.x+overflowXOffset,docBounds.y,headerBounds.width-overflowXOffset*2,height);},parts:_objectSpread({},baseSpec.parts,{overflow:{dom:{tag:'div',classes:['tox-toolbar__overflow'],attributes:toolbarSpec.attributes}}}),components:[primary],markers:{overflowToggledClass:'tox-tbtn--enabled'}}));};var renderSlidingMoreToolbar=function renderSlidingMoreToolbar(toolbarSpec){var primary=SplitSlidingToolbar.parts.primary({dom:{tag:'div',classes:['tox-toolbar__primary']}});var overflow=SplitSlidingToolbar.parts.overflow({dom:{tag:'div',classes:['tox-toolbar__overflow']}});var baseSpec=renderMoreToolbarCommon(toolbarSpec);return SplitSlidingToolbar.sketch(_objectSpread({},baseSpec,{components:[primary,overflow],markers:{openClass:'tox-toolbar__overflow--open',closedClass:'tox-toolbar__overflow--closed',growingClass:'tox-toolbar__overflow--growing',shrinkingClass:'tox-toolbar__overflow--shrinking',overflowToggledClass:'tox-tbtn--enabled'},onOpened:function onOpened(comp){comp.getSystem().broadcastOn([toolbarHeightChange()],{type:'opened'});},onClosed:function onClosed(comp){comp.getSystem().broadcastOn([toolbarHeightChange()],{type:'closed'});}}));};var renderToolbar=function renderToolbar(toolbarSpec){var modeName=toolbarSpec.cyclicKeying?'cyclic':'acyclic';return Toolbar.sketch({uid:toolbarSpec.uid,dom:{tag:'div',classes:['tox-toolbar'].concat(toolbarSpec.type===ToolbarMode$1.scrolling?['tox-toolbar--scrolling']:[])},components:[Toolbar.parts.groups({})],toolbarBehaviours:getToolbarbehaviours(toolbarSpec,modeName)});};var factory$6=function factory$6(detail,components,_spec){var apis={getSocket:function getSocket(comp){return parts$a.getPart(comp,detail,'socket');},setSidebar:function setSidebar(comp,panelConfigs,showSidebar){parts$a.getPart(comp,detail,'sidebar').each(function(sidebar){return _setSidebar(sidebar,panelConfigs,showSidebar);});},toggleSidebar:function toggleSidebar(comp,name){parts$a.getPart(comp,detail,'sidebar').each(function(sidebar){return _toggleSidebar(sidebar,name);});},whichSidebar:function whichSidebar(comp){return parts$a.getPart(comp,detail,'sidebar').bind(_whichSidebar).getOrNull();},getHeader:function getHeader(comp){return parts$a.getPart(comp,detail,'header');},getToolbar:function getToolbar(comp){return parts$a.getPart(comp,detail,'toolbar');},setToolbar:function setToolbar(comp,groups){parts$a.getPart(comp,detail,'toolbar').each(function(toolbar){toolbar.getApis().setGroups(toolbar,groups);});},setToolbars:function setToolbars(comp,toolbars){parts$a.getPart(comp,detail,'multiple-toolbar').each(function(mToolbar){CustomList.setItems(mToolbar,toolbars);});},refreshToolbar:function refreshToolbar(comp){var toolbar=parts$a.getPart(comp,detail,'toolbar');toolbar.each(function(toolbar){return toolbar.getApis().refresh(toolbar);});},toggleToolbarDrawer:function toggleToolbarDrawer(comp){parts$a.getPart(comp,detail,'toolbar').each(function(toolbar){mapFrom(toolbar.getApis().toggle,function(toggle){return toggle(toolbar);});});},isToolbarDrawerToggled:function isToolbarDrawerToggled(comp){return parts$a.getPart(comp,detail,'toolbar').bind(function(toolbar){return Optional.from(toolbar.getApis().isOpen).map(function(isOpen){return isOpen(toolbar);});}).getOr(false);},getThrobber:function getThrobber(comp){return parts$a.getPart(comp,detail,'throbber');},focusToolbar:function focusToolbar(comp){var optToolbar=parts$a.getPart(comp,detail,'toolbar').orThunk(function(){return parts$a.getPart(comp,detail,'multiple-toolbar');});optToolbar.each(function(toolbar){Keying.focusIn(toolbar);});},setMenubar:function setMenubar(comp,menus){parts$a.getPart(comp,detail,'menubar').each(function(menubar){SilverMenubar.setMenus(menubar,menus);});},focusMenubar:function focusMenubar(comp){parts$a.getPart(comp,detail,'menubar').each(function(menubar){SilverMenubar.focus(menubar);});}};return{uid:detail.uid,dom:detail.dom,components:components,apis:apis,behaviours:detail.behaviours};};var partMenubar=partType.optional({factory:SilverMenubar,name:'menubar',schema:[required$1('backstage')]});var toolbarFactory=function toolbarFactory(spec){if(spec.type===ToolbarMode$1.sliding){return renderSlidingMoreToolbar;}else if(spec.type===ToolbarMode$1.floating){return renderFloatingMoreToolbar;}else{return renderToolbar;}};var partMultipleToolbar=partType.optional({factory:{sketch:function sketch(spec){return CustomList.sketch({uid:spec.uid,dom:spec.dom,listBehaviours:derive$1([Keying.config({mode:'acyclic',selector:'.tox-toolbar'})]),makeItem:function makeItem(){return renderToolbar({type:spec.type,uid:generate$6('multiple-toolbar-item'),cyclicKeying:false,initGroups:[],providers:spec.providers,onEscape:function onEscape(){spec.onEscape();return Optional.some(true);}});},setupItem:function setupItem(_mToolbar,tc,data,_index){Toolbar.setGroups(tc,data);},shell:true});}},name:'multiple-toolbar',schema:[required$1('dom'),required$1('onEscape')]});var partToolbar=partType.optional({factory:{sketch:function sketch(spec){var renderer=toolbarFactory(spec);var toolbarSpec={type:spec.type,uid:spec.uid,onEscape:function onEscape(){spec.onEscape();return Optional.some(true);},cyclicKeying:false,initGroups:[],getSink:spec.getSink,providers:spec.providers,moreDrawerData:{lazyToolbar:spec.lazyToolbar,lazyMoreButton:spec.lazyMoreButton,lazyHeader:spec.lazyHeader},attributes:spec.attributes};return renderer(toolbarSpec);}},name:'toolbar',schema:[required$1('dom'),required$1('onEscape'),required$1('getSink')]});var partHeader=partType.optional({factory:{sketch:renderHeader},name:'header',schema:[required$1('dom')]});var partSocket=partType.optional({name:'socket',schema:[required$1('dom')]});var partSidebar=partType.optional({factory:{sketch:renderSidebar},name:'sidebar',schema:[required$1('dom')]});var partThrobber=partType.optional({factory:{sketch:renderThrobber},name:'throbber',schema:[required$1('dom')]});var OuterContainer=composite({name:'OuterContainer',factory:factory$6,configFields:[required$1('dom'),required$1('behaviours')],partFields:[partHeader,partMenubar,partToolbar,partMultipleToolbar,partSocket,partSidebar,partThrobber],apis:{getSocket:function getSocket(apis,comp){return apis.getSocket(comp);},setSidebar:function setSidebar(apis,comp,panelConfigs,showSidebar){apis.setSidebar(comp,panelConfigs,showSidebar);},toggleSidebar:function toggleSidebar(apis,comp,name){apis.toggleSidebar(comp,name);},whichSidebar:function whichSidebar(apis,comp){return apis.whichSidebar(comp);},getHeader:function getHeader(apis,comp){return apis.getHeader(comp);},getToolbar:function getToolbar(apis,comp){return apis.getToolbar(comp);},setToolbar:function setToolbar(apis,comp,grps){var groups=map$2(grps,function(grp){return renderToolbarGroup(grp);});apis.setToolbar(comp,groups);},setToolbars:function setToolbars(apis,comp,ts){var renderedToolbars=map$2(ts,function(g){return map$2(g,renderToolbarGroup);});apis.setToolbars(comp,renderedToolbars);},refreshToolbar:function refreshToolbar(apis,comp){return apis.refreshToolbar(comp);},toggleToolbarDrawer:function toggleToolbarDrawer(apis,comp){apis.toggleToolbarDrawer(comp);},isToolbarDrawerToggled:function isToolbarDrawerToggled(apis,comp){return apis.isToolbarDrawerToggled(comp);},getThrobber:function getThrobber(apis,comp){return apis.getThrobber(comp);},setMenubar:function setMenubar(apis,comp,menus){apis.setMenubar(comp,menus);},focusMenubar:function focusMenubar(apis,comp){apis.focusMenubar(comp);},focusToolbar:function focusToolbar(apis,comp){apis.focusToolbar(comp);}}});var defaultMenubar='file edit view insert format tools table help';var defaultMenus={file:{title:'File',items:'newdocument restoredraft | preview | export print | deleteallconversations'},edit:{title:'Edit',items:'undo redo | cut copy paste pastetext | selectall | searchreplace'},view:{title:'View',items:'code | visualaid visualchars visualblocks | spellchecker | preview fullscreen | showcomments'},insert:{title:'Insert',items:'image link media addcomment pageembed template codesample inserttable | charmap emoticons hr | pagebreak nonbreaking anchor tableofcontents | insertdatetime'},format:{title:'Format',items:'bold italic underline strikethrough superscript subscript codeformat | styles blocks fontfamily fontsize align lineheight | forecolor backcolor | language | removeformat'},tools:{title:'Tools',items:'spellchecker spellcheckerlanguage | a11ycheck code wordcount'},table:{title:'Table',items:'inserttable | cell row column | advtablesort | tableprops deletetable'},help:{title:'Help',items:'help'}};var make=function make(menu,registry,editor){var removedMenuItems=getRemovedMenuItems(editor).split(/[ ,]/);return{text:menu.title,getItems:function getItems(){return bind$3(menu.items,function(i){var itemName=i.toLowerCase();if(itemName.trim().length===0){return[];}else if(exists(removedMenuItems,function(removedMenuItem){return removedMenuItem===itemName;})){return[];}else if(itemName==='separator'||itemName==='|'){return[{type:'separator'}];}else if(registry.menuItems[itemName]){return[registry.menuItems[itemName]];}else{return[];}});}};};var parseItemsString=function parseItemsString(items){if(typeof items==='string'){return items.split(' ');}return items;};var identifyMenus=function identifyMenus(editor,registry){var rawMenuData=_objectSpread({},defaultMenus,{},registry.menus);var userDefinedMenus=keys(registry.menus).length>0;var menubar=registry.menubar===undefined||registry.menubar===true?parseItemsString(defaultMenubar):parseItemsString(registry.menubar===false?'':registry.menubar);var validMenus=filter$2(menubar,function(menuName){var isDefaultMenu=has$2(defaultMenus,menuName);if(userDefinedMenus){return isDefaultMenu||get$g(registry.menus,menuName).exists(function(menu){return has$2(menu,'items');});}else{return isDefaultMenu;}});var menus=map$2(validMenus,function(menuName){var menuData=rawMenuData[menuName];return make({title:menuData.title,items:parseItemsString(menuData.items)},registry,editor);});return filter$2(menus,function(menu){var isNotSeparator=function isNotSeparator(item){return item.type!=='separator';};return menu.getItems().length>0&&exists(menu.getItems(),isNotSeparator);});};var fireSkinLoaded=function fireSkinLoaded(editor){var done=function done(){editor._skinLoaded=true;fireSkinLoaded$1(editor);};return function(){if(editor.initialized){done();}else{editor.on('init',done);}};};var fireSkinLoadError=function fireSkinLoadError(editor,err){return function(){return fireSkinLoadError$1(editor,{message:err});};};var loadStylesheet=function loadStylesheet(editor,stylesheetUrl,styleSheetLoader){editor.on('remove',function(){return styleSheetLoader.unload(stylesheetUrl);});return styleSheetLoader.load(stylesheetUrl);};var loadUiSkins=function loadUiSkins(editor,skinUrl){var skinUiCss=skinUrl+'/skin.min.css';return loadStylesheet(editor,skinUiCss,editor.ui.styleSheetLoader);};var loadShadowDomUiSkins=function loadShadowDomUiSkins(editor,skinUrl){var isInShadowRoot$1=isInShadowRoot(SugarElement.fromDom(editor.getElement()));if(isInShadowRoot$1){var shadowDomSkinCss=skinUrl+'/skin.shadowdom.min.css';return loadStylesheet(editor,shadowDomSkinCss,global$7.DOM.styleSheetLoader);}else{return Promise.resolve();}};var loadSkin=function loadSkin(isInline,editor){var skinUrl=getSkinUrl(editor);if(skinUrl){editor.contentCSS.push(skinUrl+(isInline?'/content.inline':'/content')+'.min.css');}if(!isSkinDisabled(editor)&&isString(skinUrl)){Promise.all([loadUiSkins(editor,skinUrl),loadShadowDomUiSkins(editor,skinUrl)]).then(fireSkinLoaded(editor),fireSkinLoadError(editor,'Skin could not be loaded'));}else{fireSkinLoaded(editor)();}};var iframe=curry(loadSkin,false);var inline=curry(loadSkin,true);var onSetupFormatToggle=function onSetupFormatToggle(editor,name){return function(api){var boundCallback=unbindable();var init=function init(){api.setActive(editor.formatter.match(name));var binding=editor.formatter.formatChanged(name,api.setActive);boundCallback.set(binding);};editor.initialized?init():editor.once('init',init);return function(){editor.off('init',init);boundCallback.clear();};};};var onSetupEvent=function onSetupEvent(editor,event,f){return function(api){var handleEvent=function handleEvent(){return f(api);};var init=function init(){f(api);editor.on(event,handleEvent);};editor.initialized?init():editor.once('init',init);return function(){editor.off('init',init);editor.off(event,handleEvent);};};};var onActionToggleFormat$1=function onActionToggleFormat$1(editor){return function(rawItem){return function(){editor.undoManager.transact(function(){editor.focus();editor.execCommand('mceToggleFormat',false,rawItem.format);});};};};var onActionExecCommand=function onActionExecCommand(editor,command){return function(){return editor.execCommand(command);};};var generateSelectItems=function generateSelectItems(_editor,backstage,spec){var generateItem=function generateItem(rawItem,response,invalid,value){var translatedText=backstage.shared.providers.translate(rawItem.title);if(rawItem.type==='separator'){return Optional.some({type:'separator',text:translatedText});}else if(rawItem.type==='submenu'){var items=bind$3(rawItem.getStyleItems(),function(si){return validate(si,response,value);});if(response===0&&items.length<=0){return Optional.none();}else{return Optional.some({type:'nestedmenuitem',text:translatedText,enabled:items.length>0,getSubmenuItems:function getSubmenuItems(){return bind$3(rawItem.getStyleItems(),function(si){return validate(si,response,value);});}});}}else{return Optional.some(_objectSpread({type:'togglemenuitem',text:translatedText,icon:rawItem.icon,active:rawItem.isSelected(value),enabled:!invalid,onAction:spec.onAction(rawItem)},rawItem.getStylePreview().fold(function(){return{};},function(preview){return{meta:{style:preview}};})));}};var validate=function validate(item,response,value){var invalid=item.type==='formatter'&&spec.isInvalid(item);if(response===0){return invalid?[]:generateItem(item,response,false,value).toArray();}else{return generateItem(item,response,invalid,value).toArray();}};var validateItems=function validateItems(preItems){var value=spec.getCurrentValue();var response=spec.shouldHide?0:1;return bind$3(preItems,function(item){return validate(item,response,value);});};var getFetch=function getFetch(backstage,getStyleItems){return function(comp,callback){var preItems=getStyleItems();var items=validateItems(preItems);var menu=build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,false);callback(menu);};};return{validateItems:validateItems,getFetch:getFetch};};var createMenuItems=function createMenuItems(editor,backstage,spec){var dataset=spec.dataset;var getStyleItems=dataset.type==='basic'?function(){return map$2(dataset.data,function(d){return processBasic(d,spec.isSelectedFor,spec.getPreviewFor);});}:dataset.getData;return{items:generateSelectItems(editor,backstage,spec),getStyleItems:getStyleItems};};var createSelectButton=function createSelectButton(editor,backstage,spec){var _createMenuItems=createMenuItems(editor,backstage,spec),items=_createMenuItems.items,getStyleItems=_createMenuItems.getStyleItems;var getApi=function getApi(comp){return{getComponent:constant$1(comp)};};var onSetup=onSetupEvent(editor,'NodeChange',function(api){var comp=api.getComponent();spec.updateText(comp);});return renderCommonDropdown({text:spec.icon.isSome()?Optional.none():spec.text,icon:spec.icon,tooltip:Optional.from(spec.tooltip),role:Optional.none(),fetch:items.getFetch(backstage,getStyleItems),onSetup:onSetup,getApi:getApi,columns:1,presets:'normal',classes:spec.icon.isSome()?[]:['bespoke'],dropdownBehaviours:[]},'tox-tbtn',backstage.shared);};var process=function process(rawFormats){return map$2(rawFormats,function(item){var title=item,format=item;var values=item.split('=');if(values.length>1){title=values[0];format=values[1];}return{title:title,format:format};});};var buildBasicStaticDataset=function buildBasicStaticDataset(data){return{type:'basic',data:data};};var Delimiter;(function(Delimiter){Delimiter[Delimiter['SemiColon']=0]='SemiColon';Delimiter[Delimiter['Space']=1]='Space';})(Delimiter||(Delimiter={}));var split=function split(rawFormats,delimiter){if(delimiter===Delimiter.SemiColon){return rawFormats.replace(/;$/,'').split(';');}else{return rawFormats.split(' ');}};var buildBasicSettingsDataset=function buildBasicSettingsDataset(editor,settingName,delimiter){var rawFormats=editor.options.get(settingName);var data=process(split(rawFormats,delimiter));return{type:'basic',data:data};};var alignMenuItems=[{title:'Left',icon:'align-left',format:'alignleft',command:'JustifyLeft'},{title:'Center',icon:'align-center',format:'aligncenter',command:'JustifyCenter'},{title:'Right',icon:'align-right',format:'alignright',command:'JustifyRight'},{title:'Justify',icon:'align-justify',format:'alignjustify',command:'JustifyFull'}];var getSpec$4=function getSpec$4(editor){var getMatchingValue=function getMatchingValue(){return find$5(alignMenuItems,function(item){return editor.formatter.match(item.format);});};var isSelectedFor=function isSelectedFor(format){return function(){return editor.formatter.match(format);};};var getPreviewFor=function getPreviewFor(_format){return Optional.none;};var updateSelectMenuIcon=function updateSelectMenuIcon(comp){var match=getMatchingValue();var alignment=match.fold(constant$1('left'),function(item){return item.title.toLowerCase();});emitWith(comp,updateMenuIcon,{icon:"align-".concat(alignment)});};var dataset=buildBasicStaticDataset(alignMenuItems);var onAction=function onAction(rawItem){return function(){return find$5(alignMenuItems,function(item){return item.format===rawItem.format;}).each(function(item){return editor.execCommand(item.command);});};};return{tooltip:'Align',text:Optional.none(),icon:Optional.some('align-left'),isSelectedFor:isSelectedFor,getCurrentValue:Optional.none,getPreviewFor:getPreviewFor,onAction:onAction,updateText:updateSelectMenuIcon,dataset:dataset,shouldHide:false,isInvalid:function isInvalid(item){return!editor.formatter.canApply(item.format);}};};var createAlignButton=function createAlignButton(editor,backstage){return createSelectButton(editor,backstage,getSpec$4(editor));};var createAlignMenu=function createAlignMenu(editor,backstage){var menuItems=createMenuItems(editor,backstage,getSpec$4(editor));editor.ui.registry.addNestedMenuItem('align',{text:backstage.shared.providers.translate('Align'),getSubmenuItems:function getSubmenuItems(){return menuItems.items.validateItems(menuItems.getStyleItems());}});};var findNearest=function findNearest(editor,getStyles){var styles=getStyles();var formats=map$2(styles,function(style){return style.format;});return Optional.from(editor.formatter.closest(formats)).bind(function(fmt){return find$5(styles,function(data){return data.format===fmt;});}).orThunk(function(){return someIf(editor.formatter.match('p'),{title:'Paragraph',format:'p'});});};var getSpec$3=function getSpec$3(editor){var fallbackFormat='Paragraph';var isSelectedFor=function isSelectedFor(format){return function(){return editor.formatter.match(format);};};var getPreviewFor=function getPreviewFor(format){return function(){var fmt=editor.formatter.get(format);return Optional.some({tag:fmt.length>0?fmt[0].inline||fmt[0].block||'div':'div',styles:editor.dom.parseStyle(editor.formatter.getCssText(format))});};};var updateSelectMenuText=function updateSelectMenuText(comp){var detectedFormat=findNearest(editor,function(){return dataset.data;});var text=detectedFormat.fold(constant$1(fallbackFormat),function(fmt){return fmt.title;});emitWith(comp,updateMenuText,{text:text});};var dataset=buildBasicSettingsDataset(editor,'block_formats',Delimiter.SemiColon);return{tooltip:'Blocks',text:Optional.some(fallbackFormat),icon:Optional.none(),isSelectedFor:isSelectedFor,getCurrentValue:Optional.none,getPreviewFor:getPreviewFor,onAction:onActionToggleFormat$1(editor),updateText:updateSelectMenuText,dataset:dataset,shouldHide:false,isInvalid:function isInvalid(item){return!editor.formatter.canApply(item.format);}};};var createBlocksButton=function createBlocksButton(editor,backstage){return createSelectButton(editor,backstage,getSpec$3(editor));};var createBlocksMenu=function createBlocksMenu(editor,backstage){var menuItems=createMenuItems(editor,backstage,getSpec$3(editor));editor.ui.registry.addNestedMenuItem('blocks',{text:'Blocks',getSubmenuItems:function getSubmenuItems(){return menuItems.items.validateItems(menuItems.getStyleItems());}});};var systemStackFonts=['-apple-system','Segoe UI','Roboto','Helvetica Neue','sans-serif'];var splitFonts=function splitFonts(fontFamily){var fonts=fontFamily.split(/\s*,\s*/);return map$2(fonts,function(font){return font.replace(/^['"]+|['"]+$/g,'');});};var isSystemFontStack=function isSystemFontStack(fontFamily){var matchesSystemStack=function matchesSystemStack(){var fonts=splitFonts(fontFamily.toLowerCase());return forall(systemStackFonts,function(font){return fonts.indexOf(font.toLowerCase())>-1;});};return fontFamily.indexOf('-apple-system')===0&&matchesSystemStack();};var getSpec$2=function getSpec$2(editor){var systemFont='System Font';var getMatchingValue=function getMatchingValue(){var getFirstFont=function getFirstFont(fontFamily){return fontFamily?splitFonts(fontFamily)[0]:'';};var fontFamily=editor.queryCommandValue('FontName');var items=dataset.data;var font=fontFamily?fontFamily.toLowerCase():'';var matchOpt=find$5(items,function(item){var format=item.format;return format.toLowerCase()===font||getFirstFont(format).toLowerCase()===getFirstFont(font).toLowerCase();}).orThunk(function(){return someIf(isSystemFontStack(font),{title:systemFont,format:font});});return{matchOpt:matchOpt,font:fontFamily};};var isSelectedFor=function isSelectedFor(item){return function(valueOpt){return valueOpt.exists(function(value){return value.format===item;});};};var getCurrentValue=function getCurrentValue(){var _getMatchingValue=getMatchingValue(),matchOpt=_getMatchingValue.matchOpt;return matchOpt;};var getPreviewFor=function getPreviewFor(item){return function(){return Optional.some({tag:'div',styles:item.indexOf('dings')===-1?{'font-family':item}:{}});};};var onAction=function onAction(rawItem){return function(){editor.undoManager.transact(function(){editor.focus();editor.execCommand('FontName',false,rawItem.format);});};};var updateSelectMenuText=function updateSelectMenuText(comp){var _getMatchingValue2=getMatchingValue(),matchOpt=_getMatchingValue2.matchOpt,font=_getMatchingValue2.font;var text=matchOpt.fold(constant$1(font),function(item){return item.title;});emitWith(comp,updateMenuText,{text:text});};var dataset=buildBasicSettingsDataset(editor,'font_family_formats',Delimiter.SemiColon);return{tooltip:'Fonts',text:Optional.some(systemFont),icon:Optional.none(),isSelectedFor:isSelectedFor,getCurrentValue:getCurrentValue,getPreviewFor:getPreviewFor,onAction:onAction,updateText:updateSelectMenuText,dataset:dataset,shouldHide:false,isInvalid:never};};var createFontFamilyButton=function createFontFamilyButton(editor,backstage){return createSelectButton(editor,backstage,getSpec$2(editor));};var createFontFamilyMenu=function createFontFamilyMenu(editor,backstage){var menuItems=createMenuItems(editor,backstage,getSpec$2(editor));editor.ui.registry.addNestedMenuItem('fontfamily',{text:backstage.shared.providers.translate('Fonts'),getSubmenuItems:function getSubmenuItems(){return menuItems.items.validateItems(menuItems.getStyleItems());}});};var legacyFontSizes={'8pt':'1','10pt':'2','12pt':'3','14pt':'4','18pt':'5','24pt':'6','36pt':'7'};var keywordFontSizes={'xx-small':'7pt','x-small':'8pt','small':'10pt','medium':'12pt','large':'14pt','x-large':'18pt','xx-large':'24pt'};var round=function round(number,precision){var factor=Math.pow(10,precision);return Math.round(number*factor)/factor;};var toPt=function toPt(fontSize,precision){if(/[0-9.]+px$/.test(fontSize)){return round(parseInt(fontSize,10)*72/96,precision||0)+'pt';}else{return get$g(keywordFontSizes,fontSize).getOr(fontSize);}};var toLegacy=function toLegacy(fontSize){return get$g(legacyFontSizes,fontSize).getOr('');};var getSpec$1=function getSpec$1(editor){var getMatchingValue=function getMatchingValue(){var matchOpt=Optional.none();var items=dataset.data;var fontSize=editor.queryCommandValue('FontSize');if(fontSize){var _loop=function _loop(precision){var pt=toPt(fontSize,precision);var legacy=toLegacy(pt);matchOpt=find$5(items,function(item){return item.format===fontSize||item.format===pt||item.format===legacy;});};for(var precision=3;matchOpt.isNone()&&precision>=0;precision--){_loop(precision);}}return{matchOpt:matchOpt,size:fontSize};};var isSelectedFor=function isSelectedFor(item){return function(valueOpt){return valueOpt.exists(function(value){return value.format===item;});};};var getCurrentValue=function getCurrentValue(){var _getMatchingValue3=getMatchingValue(),matchOpt=_getMatchingValue3.matchOpt;return matchOpt;};var getPreviewFor=constant$1(Optional.none);var onAction=function onAction(rawItem){return function(){editor.undoManager.transact(function(){editor.focus();editor.execCommand('FontSize',false,rawItem.format);});};};var updateSelectMenuText=function updateSelectMenuText(comp){var _getMatchingValue4=getMatchingValue(),matchOpt=_getMatchingValue4.matchOpt,size=_getMatchingValue4.size;var text=matchOpt.fold(constant$1(size),function(match){return match.title;});emitWith(comp,updateMenuText,{text:text});};var dataset=buildBasicSettingsDataset(editor,'font_size_formats',Delimiter.Space);return{tooltip:'Font sizes',text:Optional.some('12pt'),icon:Optional.none(),isSelectedFor:isSelectedFor,getPreviewFor:getPreviewFor,getCurrentValue:getCurrentValue,onAction:onAction,updateText:updateSelectMenuText,dataset:dataset,shouldHide:false,isInvalid:never};};var createFontSizeButton=function createFontSizeButton(editor,backstage){return createSelectButton(editor,backstage,getSpec$1(editor));};var createFontSizeMenu=function createFontSizeMenu(editor,backstage){var menuItems=createMenuItems(editor,backstage,getSpec$1(editor));editor.ui.registry.addNestedMenuItem('fontsize',{text:'Font sizes',getSubmenuItems:function getSubmenuItems(){return menuItems.items.validateItems(menuItems.getStyleItems());}});};var getSpec=function getSpec(editor,dataset){var fallbackFormat='Paragraph';var isSelectedFor=function isSelectedFor(format){return function(){return editor.formatter.match(format);};};var getPreviewFor=function getPreviewFor(format){return function(){var fmt=editor.formatter.get(format);return fmt!==undefined?Optional.some({tag:fmt.length>0?fmt[0].inline||fmt[0].block||'div':'div',styles:editor.dom.parseStyle(editor.formatter.getCssText(format))}):Optional.none();};};var updateSelectMenuText=function updateSelectMenuText(comp){var getFormatItems=function getFormatItems(fmt){var subs=fmt.items;return subs!==undefined&&subs.length>0?bind$3(subs,getFormatItems):[{title:fmt.title,format:fmt.format}];};var flattenedItems=bind$3(getStyleFormats(editor),getFormatItems);var detectedFormat=findNearest(editor,constant$1(flattenedItems));var text=detectedFormat.fold(constant$1(fallbackFormat),function(fmt){return fmt.title;});emitWith(comp,updateMenuText,{text:text});};return{tooltip:'Formats',text:Optional.some(fallbackFormat),icon:Optional.none(),isSelectedFor:isSelectedFor,getCurrentValue:Optional.none,getPreviewFor:getPreviewFor,onAction:onActionToggleFormat$1(editor),updateText:updateSelectMenuText,shouldHide:shouldAutoHideStyleFormats(editor),isInvalid:function isInvalid(item){return!editor.formatter.canApply(item.format);},dataset:dataset};};var createStylesButton=function createStylesButton(editor,backstage){var dataset=_objectSpread({type:'advanced'},backstage.styles);return createSelectButton(editor,backstage,getSpec(editor,dataset));};var createStylesMenu=function createStylesMenu(editor,backstage){var dataset=_objectSpread({type:'advanced'},backstage.styles);var menuItems=createMenuItems(editor,backstage,getSpec(editor,dataset));editor.ui.registry.addNestedMenuItem('styles',{text:'Formats',getSubmenuItems:function getSubmenuItems(){return menuItems.items.validateItems(menuItems.getStyleItems());}});};var events$3=function events$3(reflectingConfig,reflectingState){var update=function update(component,data){reflectingConfig.updateState.each(function(updateState){var newState=updateState(component,data);reflectingState.set(newState);});reflectingConfig.renderComponents.each(function(renderComponents){var newComponents=renderComponents(data,reflectingState.get());var replacer=reflectingConfig.reuseDom?withReuse:withoutReuse;replacer(component,newComponents);});};return derive$2([run$1(receive(),function(component,message){var receivingData=message;if(!receivingData.universal){var channel=reflectingConfig.channel;if(contains$2(receivingData.channels,channel)){update(component,receivingData.data);}}}),runOnAttached(function(comp,_se){reflectingConfig.initialData.each(function(rawData){update(comp,rawData);});})]);};var ActiveReflecting=/*#__PURE__*/Object.freeze({__proto__:null,events:events$3});var getState=function getState(component,replaceConfig,reflectState){return reflectState;};var ReflectingApis=/*#__PURE__*/Object.freeze({__proto__:null,getState:getState});var ReflectingSchema=[required$1('channel'),option$3('renderComponents'),option$3('updateState'),option$3('initialData'),defaultedBoolean('reuseDom',true)];var init$3=function init$3(){var cell=Cell(Optional.none());var clear=function clear(){return cell.set(Optional.none());};var readState=function readState(){return cell.get().getOr('none');};return{readState:readState,get:cell.get,set:cell.set,clear:clear};};var ReflectingState=/*#__PURE__*/Object.freeze({__proto__:null,init:init$3});var Reflecting=create$3({fields:ReflectingSchema,name:'reflecting',active:ActiveReflecting,apis:ReflectingApis,state:ReflectingState});var schema$7=constant$1([required$1('toggleClass'),required$1('fetch'),onStrictHandler('onExecute'),defaulted('getHotspot',Optional.some),defaulted('getAnchorOverrides',constant$1({})),schema$y(),onStrictHandler('onItemExecute'),option$3('lazySink'),required$1('dom'),onHandler('onOpen'),field('splitDropdownBehaviours',[Coupling,Keying,Focusing]),defaulted('matchWidth',false),defaulted('useMinWidth',false),defaulted('eventOrder',{}),option$3('role')].concat(sandboxFields()));var arrowPart=required({factory:Button,schema:[required$1('dom')],name:'arrow',defaults:function defaults(){return{buttonBehaviours:derive$1([Focusing.revoke()])};},overrides:function overrides(detail){return{dom:{tag:'span',attributes:{role:'presentation'}},action:function action(arrow){arrow.getSystem().getByUid(detail.uid).each(emitExecute);},buttonBehaviours:derive$1([Toggling.config({toggleOnExecute:false,toggleClass:detail.toggleClass})])};}});var buttonPart=required({factory:Button,schema:[required$1('dom')],name:'button',defaults:function defaults(){return{buttonBehaviours:derive$1([Focusing.revoke()])};},overrides:function overrides(detail){return{dom:{tag:'span',attributes:{role:'presentation'}},action:function action(btn){btn.getSystem().getByUid(detail.uid).each(function(splitDropdown){detail.onExecute(splitDropdown,btn);});}};}});var parts$3=constant$1([arrowPart,buttonPart,optional({factory:{sketch:function sketch(spec){return{uid:spec.uid,dom:{tag:'span',styles:{display:'none'},attributes:{'aria-hidden':'true'},innerHtml:spec.text}};}},schema:[required$1('text')],name:'aria-descriptor'}),external({schema:[tieredMenuMarkers()],name:'menu',defaults:function defaults(detail){return{onExecute:function onExecute(tmenu,item){tmenu.getSystem().getByUid(detail.uid).each(function(splitDropdown){detail.onItemExecute(splitDropdown,tmenu,item);});}};}}),partType$1()]);var factory$5=function factory$5(detail,components,spec,externals){var switchToMenu=function switchToMenu(sandbox){Composing.getCurrent(sandbox).each(function(current){Highlighting.highlightFirst(current);Keying.focusIn(current);});};var action=function action(component){var onOpenSync=switchToMenu;togglePopup(detail,identity,component,externals,onOpenSync,HighlightOnOpen.HighlightFirst).get(noop);};var openMenu=function openMenu(comp){action(comp);return Optional.some(true);};var executeOnButton=function executeOnButton(comp){var button=getPartOrDie(comp,detail,'button');emitExecute(button);return Optional.some(true);};var buttonEvents=_objectSpread({},derive$2([runOnAttached(function(component,_simulatedEvent){var ariaDescriptor=getPart(component,detail,'aria-descriptor');ariaDescriptor.each(function(descriptor){var descriptorId=generate$6('aria');set$9(descriptor.element,'id',descriptorId);set$9(component.element,'aria-describedby',descriptorId);});})]),{},events$a(Optional.some(action)));var apis={repositionMenus:function repositionMenus(comp){if(Toggling.isOn(comp)){_repositionMenus(comp);}}};return{uid:detail.uid,dom:detail.dom,components:components,apis:apis,eventOrder:_objectSpread({},detail.eventOrder,_defineProperty({},execute$5(),['disabling','toggling','alloy.base.behaviour'])),events:buttonEvents,behaviours:augment(detail.splitDropdownBehaviours,[Coupling.config({others:{sandbox:function sandbox(hotspot){var arrow=getPartOrDie(hotspot,detail,'arrow');var extras={onOpen:function onOpen(){Toggling.on(arrow);Toggling.on(hotspot);},onClose:function onClose(){Toggling.off(arrow);Toggling.off(hotspot);}};return makeSandbox$1(detail,hotspot,extras);}}}),Keying.config({mode:'special',onSpace:executeOnButton,onEnter:executeOnButton,onDown:openMenu}),Focusing.config({}),Toggling.config({toggleOnExecute:false,aria:{mode:'expanded'}})]),domModification:{attributes:{'role':detail.role.getOr('button'),'aria-haspopup':true}}};};var SplitDropdown=composite({name:'SplitDropdown',configFields:schema$7(),partFields:parts$3(),factory:factory$5,apis:{repositionMenus:function repositionMenus(apis,comp){return apis.repositionMenus(comp);}}});var getButtonApi=function getButtonApi(component){return{isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);}};};var getToggleApi=function getToggleApi(component){return{setActive:function setActive(state){Toggling.set(component,state);},isActive:function isActive(){return Toggling.isOn(component);},isEnabled:function isEnabled(){return!Disabling.isDisabled(component);},setEnabled:function setEnabled(state){return Disabling.set(component,!state);}};};var getTooltipAttributes=function getTooltipAttributes(tooltip,providersBackstage){return tooltip.map(function(tooltip){return{'aria-label':providersBackstage.translate(tooltip),'title':providersBackstage.translate(tooltip)};}).getOr({});};var focusButtonEvent=generate$6('focus-button');var renderCommonStructure=function renderCommonStructure(icon,text,tooltip,receiver,behaviours,providersBackstage){return{dom:{tag:'button',classes:['tox-tbtn'].concat(text.isSome()?['tox-tbtn--select']:[]),attributes:getTooltipAttributes(tooltip,providersBackstage)},components:componentRenderPipeline([icon.map(function(iconName){return renderIconFromPack(iconName,providersBackstage.icons);}),text.map(function(text){return renderLabel(text,'tox-tbtn',providersBackstage);})]),eventOrder:_defineProperty({},mousedown(),['focusing','alloy.base.behaviour','common-button-display-events']),buttonBehaviours:derive$1([DisablingConfigs.toolbarButton(providersBackstage.isDisabled),receivingConfig(),config('common-button-display-events',[run$1(mousedown(),function(button,se){se.event.prevent();emit(button,focusButtonEvent);})])].concat(receiver.map(function(r){return Reflecting.config({channel:r,initialData:{icon:icon,text:text},renderComponents:function renderComponents(data,_state){return componentRenderPipeline([data.icon.map(function(iconName){return renderIconFromPack(iconName,providersBackstage.icons);}),data.text.map(function(text){return renderLabel(text,'tox-tbtn',providersBackstage);})]);}});}).toArray()).concat(behaviours.getOr([])))};};var renderFloatingToolbarButton=function renderFloatingToolbarButton(spec,backstage,identifyButtons,attributes){var sharedBackstage=backstage.shared;return FloatingToolbarButton.sketch({lazySink:sharedBackstage.getSink,fetch:function fetch(){return Future.nu(function(resolve){resolve(map$2(identifyButtons(spec.items),renderToolbarGroup));});},markers:{toggledClass:'tox-tbtn--enabled'},parts:{button:renderCommonStructure(spec.icon,spec.text,spec.tooltip,Optional.none(),Optional.none(),sharedBackstage.providers),toolbar:{dom:{tag:'div',classes:['tox-toolbar__overflow'],attributes:attributes}}}});};var renderCommonToolbarButton=function renderCommonToolbarButton(spec,specialisation,providersBackstage){var editorOffCell=Cell(noop);var structure=renderCommonStructure(spec.icon,spec.text,spec.tooltip,Optional.none(),Optional.none(),providersBackstage);return Button.sketch({dom:structure.dom,components:structure.components,eventOrder:toolbarButtonEventOrder,buttonBehaviours:derive$1([config('toolbar-button-events',[onToolbarButtonExecute({onAction:spec.onAction,getApi:specialisation.getApi}),onControlAttached(specialisation,editorOffCell),onControlDetached(specialisation,editorOffCell)]),DisablingConfigs.toolbarButton(function(){return!spec.enabled||providersBackstage.isDisabled();}),receivingConfig()].concat(specialisation.toolbarButtonBehaviours))});};var renderToolbarButton=function renderToolbarButton(spec,providersBackstage){return renderToolbarButtonWith(spec,providersBackstage,[]);};var renderToolbarButtonWith=function renderToolbarButtonWith(spec,providersBackstage,bonusEvents){return renderCommonToolbarButton(spec,{toolbarButtonBehaviours:[].concat(bonusEvents.length>0?[config('toolbarButtonWith',bonusEvents)]:[]),getApi:getButtonApi,onSetup:spec.onSetup},providersBackstage);};var renderToolbarToggleButton=function renderToolbarToggleButton(spec,providersBackstage){return renderToolbarToggleButtonWith(spec,providersBackstage,[]);};var renderToolbarToggleButtonWith=function renderToolbarToggleButtonWith(spec,providersBackstage,bonusEvents){return deepMerge(renderCommonToolbarButton(spec,{toolbarButtonBehaviours:[Replacing.config({}),Toggling.config({toggleClass:'tox-tbtn--enabled',aria:{mode:'pressed'},toggleOnExecute:false})].concat(bonusEvents.length>0?[config('toolbarToggleButtonWith',bonusEvents)]:[]),getApi:getToggleApi,onSetup:spec.onSetup},providersBackstage));};var fetchChoices=function fetchChoices(getApi,spec,providersBackstage){return function(comp){return Future.nu(function(callback){return spec.fetch(callback);}).map(function(items){return Optional.from(createTieredDataFrom(deepMerge(createPartialChoiceMenu(generate$6('menu-value'),items,function(value){spec.onItemAction(getApi(comp),value);},spec.columns,spec.presets,ItemResponse$1.CLOSE_ON_EXECUTE,spec.select.getOr(never),providersBackstage),{movement:deriveMenuMovement(spec.columns,spec.presets),menuBehaviours:SimpleBehaviours.unnamedEvents(spec.columns!=='auto'?[]:[runOnAttached(function(comp,_se){detectSize(comp,4,classForPreset(spec.presets)).each(function(_ref10){var numRows=_ref10.numRows,numColumns=_ref10.numColumns;Keying.setGridSize(comp,numRows,numColumns);});})])})));});};};var renderSplitButton=function renderSplitButton(spec,sharedBackstage){var displayChannel=generate$6('channel-update-split-dropdown-display');var getApi=function getApi(comp){return{isEnabled:function isEnabled(){return!Disabling.isDisabled(comp);},setEnabled:function setEnabled(state){return Disabling.set(comp,!state);},setIconFill:function setIconFill(id,value){descendant(comp.element,'svg path[id="'+id+'"], rect[id="'+id+'"]').each(function(underlinePath){set$9(underlinePath,'fill',value);});},setActive:function setActive(state){set$9(comp.element,'aria-pressed',state);descendant(comp.element,'span').each(function(button){comp.getSystem().getByDom(button).each(function(buttonComp){return Toggling.set(buttonComp,state);});});},isActive:function isActive(){return descendant(comp.element,'span').exists(function(button){return comp.getSystem().getByDom(button).exists(Toggling.isOn);});}};};var editorOffCell=Cell(noop);var specialisation={getApi:getApi,onSetup:spec.onSetup};return SplitDropdown.sketch({dom:{tag:'div',classes:['tox-split-button'],attributes:_objectSpread({'aria-pressed':false},getTooltipAttributes(spec.tooltip,sharedBackstage.providers))},onExecute:function onExecute(button){spec.onAction(getApi(button));},onItemExecute:function onItemExecute(_a,_b,_c){},splitDropdownBehaviours:derive$1([DisablingConfigs.splitButton(sharedBackstage.providers.isDisabled),receivingConfig(),config('split-dropdown-events',[run$1(focusButtonEvent,Focusing.focus),onControlAttached(specialisation,editorOffCell),onControlDetached(specialisation,editorOffCell)]),Unselecting.config({})]),eventOrder:_defineProperty({},attachedToDom(),['alloy.base.behaviour','split-dropdown-events']),toggleClass:'tox-tbtn--enabled',lazySink:sharedBackstage.getSink,fetch:fetchChoices(getApi,spec,sharedBackstage.providers),parts:{menu:part(false,spec.columns,spec.presets)},components:[SplitDropdown.parts.button(renderCommonStructure(spec.icon,spec.text,Optional.none(),Optional.some(displayChannel),Optional.some([Toggling.config({toggleClass:'tox-tbtn--enabled',toggleOnExecute:false})]),sharedBackstage.providers)),SplitDropdown.parts.arrow({dom:{tag:'button',classes:['tox-tbtn','tox-split-button__chevron'],innerHtml:get$2('chevron-down',sharedBackstage.providers.icons)},buttonBehaviours:derive$1([DisablingConfigs.splitButton(sharedBackstage.providers.isDisabled),receivingConfig(),addFocusableBehaviour()])}),SplitDropdown.parts['aria-descriptor']({text:sharedBackstage.providers.translate('To open the popup, press Shift+Enter')})]});};var defaultToolbar=[{name:'history',items:['undo','redo']},{name:'styles',items:['styles']},{name:'formatting',items:['bold','italic']},{name:'alignment',items:['alignleft','aligncenter','alignright','alignjustify']},{name:'indentation',items:['outdent','indent']},{name:'permanent pen',items:['permanentpen']},{name:'comments',items:['addcomment']}];var renderFromBridge=function renderFromBridge(bridgeBuilder,render){return function(spec,extras,editor){var internal=bridgeBuilder(spec).mapError(function(errInfo){return formatError(errInfo);}).getOrDie();return render(internal,extras,editor);};};var types={button:renderFromBridge(createToolbarButton,function(s,extras){return renderToolbarButton(s,extras.backstage.shared.providers);}),togglebutton:renderFromBridge(createToggleButton,function(s,extras){return renderToolbarToggleButton(s,extras.backstage.shared.providers);}),menubutton:renderFromBridge(createMenuButton,function(s,extras){return renderMenuButton(s,'tox-tbtn',extras.backstage,Optional.none());}),splitbutton:renderFromBridge(createSplitButton,function(s,extras){return renderSplitButton(s,extras.backstage.shared);}),grouptoolbarbutton:renderFromBridge(createGroupToolbarButton,function(s,extras,editor){var buttons=editor.ui.registry.getAll().buttons;var identify=function identify(toolbar){return identifyButtons(editor,{buttons:buttons,toolbar:toolbar,allowToolbarGroups:false},extras,Optional.none());};var attributes=_defineProperty({},Attribute,extras.backstage.shared.header.isPositionedAtTop()?AttributeValue.TopToBottom:AttributeValue.BottomToTop);switch(getToolbarMode(editor)){case ToolbarMode$1.floating:return renderFloatingToolbarButton(s,extras.backstage,identify,attributes);default:throw new Error('Toolbar groups are only supported when using floating toolbar mode');}}),styleSelectButton:function styleSelectButton(editor,extras){return createStylesButton(editor,extras.backstage);},fontsizeSelectButton:function fontsizeSelectButton(editor,extras){return createFontSizeButton(editor,extras.backstage);},fontSelectButton:function fontSelectButton(editor,extras){return createFontFamilyButton(editor,extras.backstage);},formatButton:function formatButton(editor,extras){return createBlocksButton(editor,extras.backstage);},alignMenuButton:function alignMenuButton(editor,extras){return createAlignButton(editor,extras.backstage);}};var extractFrom=function extractFrom(spec,extras,editor){return get$g(types,spec.type).fold(function(){console.error('skipping button defined by',spec);return Optional.none();},function(render){return Optional.some(render(spec,extras,editor));});};var bespokeButtons={styles:types.styleSelectButton,fontsize:types.fontsizeSelectButton,fontfamily:types.fontSelectButton,blocks:types.formatButton,align:types.alignMenuButton};var removeUnusedDefaults=function removeUnusedDefaults(buttons){var filteredItemGroups=map$2(defaultToolbar,function(group){var items=filter$2(group.items,function(subItem){return has$2(buttons,subItem)||has$2(bespokeButtons,subItem);});return{name:group.name,items:items};});return filter$2(filteredItemGroups,function(group){return group.items.length>0;});};var convertStringToolbar=function convertStringToolbar(strToolbar){var groupsStrings=strToolbar.split('|');return map$2(groupsStrings,function(g){return{items:g.trim().split(' ')};});};var isToolbarGroupSettingArray=function isToolbarGroupSettingArray(toolbar){return isArrayOf(toolbar,function(t){return has$2(t,'name')&&has$2(t,'items');});};var createToolbar=function createToolbar(toolbarConfig){var toolbar=toolbarConfig.toolbar;var buttons=toolbarConfig.buttons;if(toolbar===false){return[];}else if(toolbar===undefined||toolbar===true){return removeUnusedDefaults(buttons);}else if(isString(toolbar)){return convertStringToolbar(toolbar);}else if(isToolbarGroupSettingArray(toolbar)){return toolbar;}else{console.error('Toolbar type should be string, string[], boolean or ToolbarGroup[]');return[];}};var lookupButton=function lookupButton(editor,buttons,toolbarItem,allowToolbarGroups,extras,prefixes){return get$g(buttons,toolbarItem.toLowerCase()).orThunk(function(){return prefixes.bind(function(ps){return findMap(ps,function(prefix){return get$g(buttons,prefix+toolbarItem.toLowerCase());});});}).fold(function(){return get$g(bespokeButtons,toolbarItem.toLowerCase()).map(function(r){return r(editor,extras);}).orThunk(function(){return Optional.none();});},function(spec){if(spec.type==='grouptoolbarbutton'&&!allowToolbarGroups){console.warn("Ignoring the '".concat(toolbarItem,"' toolbar button. Group toolbar buttons are only supported when using floating toolbar mode and cannot be nested."));return Optional.none();}else{return extractFrom(spec,extras,editor);}});};var identifyButtons=function identifyButtons(editor,toolbarConfig,extras,prefixes){var toolbarGroups=createToolbar(toolbarConfig);var groups=map$2(toolbarGroups,function(group){var items=bind$3(group.items,function(toolbarItem){return toolbarItem.trim().length===0?[]:lookupButton(editor,toolbarConfig.buttons,toolbarItem,toolbarConfig.allowToolbarGroups,extras,prefixes).toArray();});return{title:Optional.from(editor.translate(group.name)),items:items};});return filter$2(groups,function(group){return group.items.length>0;});};var setToolbar=function setToolbar(editor,uiComponents,rawUiConfig,backstage){var comp=uiComponents.outerContainer;var toolbarConfig=rawUiConfig.toolbar;var toolbarButtonsConfig=rawUiConfig.buttons;if(isArrayOf(toolbarConfig,isString)){var toolbars=toolbarConfig.map(function(t){var config={toolbar:t,buttons:toolbarButtonsConfig,allowToolbarGroups:rawUiConfig.allowToolbarGroups};return identifyButtons(editor,config,{backstage:backstage},Optional.none());});OuterContainer.setToolbars(comp,toolbars);}else{OuterContainer.setToolbar(comp,identifyButtons(editor,rawUiConfig,{backstage:backstage},Optional.none()));}};var detection=detect$1();var isiOS12=detection.os.isiOS()&&detection.os.version.major<=12;var setupEvents$1=function setupEvents$1(editor,uiComponents){var dom=editor.dom;var contentWindow=editor.getWin();var initialDocEle=editor.getDoc().documentElement;var lastWindowDimensions=Cell(SugarPosition(contentWindow.innerWidth,contentWindow.innerHeight));var lastDocumentDimensions=Cell(SugarPosition(initialDocEle.offsetWidth,initialDocEle.offsetHeight));var resizeWindow=function resizeWindow(){var outer=lastWindowDimensions.get();if(outer.left!==contentWindow.innerWidth||outer.top!==contentWindow.innerHeight){lastWindowDimensions.set(SugarPosition(contentWindow.innerWidth,contentWindow.innerHeight));fireResizeContent(editor);}};var resizeDocument=function resizeDocument(){var docEle=editor.getDoc().documentElement;var inner=lastDocumentDimensions.get();if(inner.left!==docEle.offsetWidth||inner.top!==docEle.offsetHeight){lastDocumentDimensions.set(SugarPosition(docEle.offsetWidth,docEle.offsetHeight));fireResizeContent(editor);}};var scroll=function scroll(e){return fireScrollContent(editor,e);};dom.bind(contentWindow,'resize',resizeWindow);dom.bind(contentWindow,'scroll',scroll);var elementLoad=capture(SugarElement.fromDom(editor.getBody()),'load',resizeDocument);var mothership=uiComponents.uiMothership.element;editor.on('hide',function(){set$8(mothership,'display','none');});editor.on('show',function(){remove$6(mothership,'display');});editor.on('NodeChange',resizeDocument);editor.on('remove',function(){elementLoad.unbind();dom.unbind(contentWindow,'resize',resizeWindow);dom.unbind(contentWindow,'scroll',scroll);contentWindow=null;});};var render$1=function render$1(editor,uiComponents,rawUiConfig,backstage,args){var lastToolbarWidth=Cell(0);var outerContainer=uiComponents.outerContainer;iframe(editor);var eTargetNode=SugarElement.fromDom(args.targetNode);var uiRoot=getContentContainer(getRootNode(eTargetNode));attachSystemAfter(eTargetNode,uiComponents.mothership);attachSystem(uiRoot,uiComponents.uiMothership);editor.on('PostRender',function(){OuterContainer.setSidebar(outerContainer,rawUiConfig.sidebar,getSidebarShow(editor));setToolbar(editor,uiComponents,rawUiConfig,backstage);lastToolbarWidth.set(editor.getWin().innerWidth);OuterContainer.setMenubar(outerContainer,identifyMenus(editor,rawUiConfig));setupEvents$1(editor,uiComponents);});var socket=OuterContainer.getSocket(outerContainer).getOrDie('Could not find expected socket element');if(isiOS12){setAll(socket.element,{'overflow':'scroll','-webkit-overflow-scrolling':'touch'});var limit=first(function(){editor.dispatch('ScrollContent');},20);var unbinder=bind(socket.element,'scroll',limit.throttle);editor.on('remove',unbinder.unbind);}setupReadonlyModeSwitch(editor,uiComponents);editor.addCommand('ToggleSidebar',function(_ui,value){OuterContainer.toggleSidebar(outerContainer,value);editor.dispatch('ToggleSidebar');});editor.addQueryValueHandler('ToggleSidebar',function(){return OuterContainer.whichSidebar(outerContainer);});var toolbarMode=getToolbarMode(editor);var refreshDrawer=function refreshDrawer(){OuterContainer.refreshToolbar(uiComponents.outerContainer);};if(toolbarMode===ToolbarMode$1.sliding||toolbarMode===ToolbarMode$1.floating){editor.on('ResizeWindow ResizeEditor ResizeContent',function(){var width=editor.getWin().innerWidth;if(width!==lastToolbarWidth.get()){refreshDrawer();lastToolbarWidth.set(width);}});}var api={setEnabled:function setEnabled(state){broadcastReadonly(uiComponents,!state);},isEnabled:function isEnabled(){return!Disabling.isDisabled(outerContainer);}};return{iframeContainer:socket.element.dom,editorContainer:outerContainer.element.dom,api:api};};var Iframe=/*#__PURE__*/Object.freeze({__proto__:null,render:render$1});var parseToInt=function parseToInt(val){var re=/^[0-9\.]+(|px)$/i;if(re.test(''+val)){return Optional.some(parseInt(''+val,10));}return Optional.none();};var numToPx=function numToPx(val){return isNumber(val)?val+'px':val;};var calcCappedSize=function calcCappedSize(size,minSize,maxSize){var minOverride=minSize.filter(function(min){return size<min;});var maxOverride=maxSize.filter(function(max){return size>max;});return minOverride.or(maxOverride).getOr(size);};var getHeight=function getHeight(editor){var baseHeight=getHeightOption(editor);var minHeight=getMinHeightOption(editor);var maxHeight=getMaxHeightOption(editor);return parseToInt(baseHeight).map(function(height){return calcCappedSize(height,minHeight,maxHeight);});};var getHeightWithFallback=function getHeightWithFallback(editor){var height=getHeight(editor);return height.getOr(getHeightOption(editor));};var getWidth=function getWidth(editor){var baseWidth=getWidthOption(editor);var minWidth=getMinWidthOption(editor);var maxWidth=getMaxWidthOption(editor);return parseToInt(baseWidth).map(function(width){return calcCappedSize(width,minWidth,maxWidth);});};var getWidthWithFallback=function getWidthWithFallback(editor){var width=getWidth(editor);return width.getOr(getWidthOption(editor));};var ToolbarLocation=Options.ToolbarLocation,ToolbarMode=Options.ToolbarMode;var InlineHeader=function InlineHeader(editor,targetElm,uiComponents,backstage,floatContainer){var uiMothership=uiComponents.uiMothership,outerContainer=uiComponents.outerContainer;var DOM=global$7.DOM;var useFixedToolbarContainer=useFixedContainer(editor);var isSticky=isStickyToolbar(editor);var editorMaxWidthOpt=getMaxWidthOption(editor).or(getWidth(editor));var headerBackstage=backstage.shared.header;var isPositionedAtTop=headerBackstage.isPositionedAtTop;var toolbarMode=getToolbarMode(editor);var isSplitToolbar=toolbarMode===ToolbarMode.sliding||toolbarMode===ToolbarMode.floating;var visible=Cell(false);var isVisible=function isVisible(){return visible.get()&&!editor.removed;};var calcToolbarOffset=function calcToolbarOffset(toolbar){return isSplitToolbar?toolbar.fold(constant$1(0),function(tbar){return tbar.components().length>1?get$d(tbar.components()[1].element):0;}):0;};var calcMode=function calcMode(container){switch(getToolbarLocation(editor)){case ToolbarLocation.auto:var toolbar=OuterContainer.getToolbar(outerContainer);var _offset2=calcToolbarOffset(toolbar);var toolbarHeight=get$d(container.element)-_offset2;var targetBounds=box$1(targetElm);var roomAtTop=targetBounds.y>toolbarHeight;if(roomAtTop){return'top';}else{var doc=documentElement(targetElm);var docHeight=Math.max(doc.dom.scrollHeight,get$d(doc));var roomAtBottom=targetBounds.bottom<docHeight-toolbarHeight;if(roomAtBottom){return'bottom';}else{var winBounds=win();var isRoomAtBottomViewport=winBounds.bottom<targetBounds.bottom-toolbarHeight;return isRoomAtBottomViewport?'bottom':'top';}}case ToolbarLocation.bottom:return'bottom';case ToolbarLocation.top:default:return'top';}};var setupMode=function setupMode(mode){var container=floatContainer.get();Docking.setModes(container,[mode]);headerBackstage.setDockingMode(mode);var verticalDir=isPositionedAtTop()?AttributeValue.TopToBottom:AttributeValue.BottomToTop;set$9(container.element,Attribute,verticalDir);};var updateChromeWidth=function updateChromeWidth(){var maxWidth=editorMaxWidthOpt.getOrThunk(function(){var bodyMargin=parseToInt(get$e(body(),'margin-left')).getOr(0);return get$c(body())-absolute$3(targetElm).left+bodyMargin;});set$8(floatContainer.get().element,'max-width',maxWidth+'px');};var updateChromePosition=function updateChromePosition(){var toolbar=OuterContainer.getToolbar(outerContainer);var offset=calcToolbarOffset(toolbar);var targetBounds=box$1(targetElm);var top=isPositionedAtTop()?Math.max(targetBounds.y-get$d(floatContainer.get().element)+offset,0):targetBounds.bottom;setAll(outerContainer.element,{position:'absolute',top:Math.round(top)+'px',left:Math.round(targetBounds.x)+'px'});};var repositionPopups$1=function repositionPopups$1(){uiMothership.broadcastOn([repositionPopups()],{});};var updateChromeUi=function updateChromeUi(){var resetDocking=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(!isVisible()){return;}if(!useFixedToolbarContainer){updateChromeWidth();}if(isSplitToolbar){OuterContainer.refreshToolbar(outerContainer);}if(!useFixedToolbarContainer){updateChromePosition();}if(isSticky){var floatContainerComp=floatContainer.get();resetDocking?Docking.reset(floatContainerComp):Docking.refresh(floatContainerComp);}repositionPopups$1();};var updateMode=function updateMode(){var updateUi=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;if(useFixedToolbarContainer||!isSticky||!isVisible()){return;}var currentMode=headerBackstage.getDockingMode();var newMode=calcMode(floatContainer.get());if(newMode!==currentMode){setupMode(newMode);if(updateUi){updateChromeUi(true);}}};var show=function show(){visible.set(true);set$8(outerContainer.element,'display','flex');DOM.addClass(editor.getBody(),'mce-edit-focus');remove$6(uiMothership.element,'display');updateMode(false);updateChromeUi();};var hide=function hide(){visible.set(false);if(uiComponents.outerContainer){set$8(outerContainer.element,'display','none');DOM.removeClass(editor.getBody(),'mce-edit-focus');}set$8(uiMothership.element,'display','none');};return{isVisible:isVisible,isPositionedAtTop:isPositionedAtTop,show:show,hide:hide,update:updateChromeUi,updateMode:updateMode,repositionPopups:repositionPopups$1};};var getTargetPosAndBounds=function getTargetPosAndBounds(targetElm,isToolbarTop){var bounds=box$1(targetElm);return{pos:isToolbarTop?bounds.y:bounds.bottom,bounds:bounds};};var setupEvents=function setupEvents(editor,targetElm,ui,toolbarPersist){var prevPosAndBounds=Cell(getTargetPosAndBounds(targetElm,ui.isPositionedAtTop()));var resizeContent=function resizeContent(e){var _getTargetPosAndBound=getTargetPosAndBounds(targetElm,ui.isPositionedAtTop()),pos=_getTargetPosAndBound.pos,bounds=_getTargetPosAndBound.bounds;var _prevPosAndBounds$get=prevPosAndBounds.get(),prevPos=_prevPosAndBounds$get.pos,prevBounds=_prevPosAndBounds$get.bounds;var hasResized=bounds.height!==prevBounds.height||bounds.width!==prevBounds.width;prevPosAndBounds.set({pos:pos,bounds:bounds});if(hasResized){fireResizeContent(editor,e);}if(ui.isVisible()){if(prevPos!==pos){ui.update(true);}else if(hasResized){ui.updateMode();ui.repositionPopups();}}};if(!toolbarPersist){editor.on('activate',ui.show);editor.on('deactivate',ui.hide);}editor.on('SkinLoaded ResizeWindow',function(){return ui.update(true);});editor.on('NodeChange keydown',function(e){requestAnimationFrame(function(){return resizeContent(e);});});editor.on('ScrollWindow',function(){return ui.updateMode();});var elementLoad=unbindable();elementLoad.set(capture(SugarElement.fromDom(editor.getBody()),'load',resizeContent));editor.on('remove',function(){elementLoad.clear();});};var render=function render(editor,uiComponents,rawUiConfig,backstage,args){var mothership=uiComponents.mothership,uiMothership=uiComponents.uiMothership,outerContainer=uiComponents.outerContainer;var floatContainer=Cell(null);var targetElm=SugarElement.fromDom(args.targetNode);var ui=InlineHeader(editor,targetElm,uiComponents,backstage,floatContainer);var toolbarPersist=isToolbarPersist(editor);inline(editor);var render=function render(){if(floatContainer.get()){ui.show();return;}floatContainer.set(OuterContainer.getHeader(outerContainer).getOrDie());var uiContainer=getUiContainer(editor);attachSystem(uiContainer,mothership);attachSystem(uiContainer,uiMothership);setToolbar(editor,uiComponents,rawUiConfig,backstage);OuterContainer.setMenubar(outerContainer,identifyMenus(editor,rawUiConfig));ui.show();setupEvents(editor,targetElm,ui,toolbarPersist);editor.nodeChanged();};editor.on('show',render);editor.on('hide',ui.hide);if(!toolbarPersist){editor.on('focus',render);editor.on('blur',ui.hide);}editor.on('init',function(){if(editor.hasFocus()||toolbarPersist){render();}});setupReadonlyModeSwitch(editor,uiComponents);var api={show:function show(){render();},hide:function hide(){ui.hide();},setEnabled:function setEnabled(state){broadcastReadonly(uiComponents,!state);},isEnabled:function isEnabled(){return!Disabling.isDisabled(outerContainer);}};return{editorContainer:outerContainer.element.dom,api:api};};var Inline=/*#__PURE__*/Object.freeze({__proto__:null,render:render});var showContextToolbarEvent='contexttoolbar-show';var hideContextToolbarEvent='contexttoolbar-hide';var getFormApi=function getFormApi(input){return{hide:function hide(){return emit(input,sandboxClose());},getValue:function getValue(){return Representing.getValue(input);}};};var runOnExecute=function runOnExecute(memInput,original){return run$1(internalToolbarButtonExecute,function(comp,se){var input=memInput.get(comp);var formApi=getFormApi(input);original.onAction(formApi,se.event.buttonApi);});};var renderContextButton=function renderContextButton(memInput,button,extras){var _button$original=button.original,primary=_button$original.primary,rest=_objectWithoutProperties(_button$original,["primary"]);var bridged=getOrDie(createToolbarButton(_objectSpread({},rest,{type:'button',onAction:noop})));return renderToolbarButtonWith(bridged,extras.backstage.shared.providers,[runOnExecute(memInput,button)]);};var renderContextToggleButton=function renderContextToggleButton(memInput,button,extras){var _button$original2=button.original,primary=_button$original2.primary,rest=_objectWithoutProperties(_button$original2,["primary"]);var bridged=getOrDie(createToggleButton(_objectSpread({},rest,{type:'togglebutton',onAction:noop})));return renderToolbarToggleButtonWith(bridged,extras.backstage.shared.providers,[runOnExecute(memInput,button)]);};var generateOne=function generateOne(memInput,button,providersBackstage){var extras={backstage:{shared:{providers:providersBackstage}}};if(button.type==='contextformtogglebutton'){return renderContextToggleButton(memInput,button,extras);}else{return renderContextButton(memInput,button,extras);}};var generate=function generate(memInput,buttons,providersBackstage){var mementos=map$2(buttons,function(button){return record(generateOne(memInput,button,providersBackstage));});var asSpecs=function asSpecs(){return map$2(mementos,function(mem){return mem.asSpec();});};var findPrimary=function findPrimary(compInSystem){return findMap(buttons,function(button,i){if(button.primary){return Optional.from(mementos[i]).bind(function(mem){return mem.getOpt(compInSystem);}).filter(not(Disabling.isDisabled));}else{return Optional.none();}});};return{asSpecs:asSpecs,findPrimary:findPrimary};};var buildInitGroups=function buildInitGroups(ctx,providers){var inputAttributes=ctx.label.fold(function(){return{};},function(label){return{'aria-label':label};});var memInput=record(Input.sketch({inputClasses:['tox-toolbar-textfield','tox-toolbar-nav-js'],data:ctx.initValue(),inputAttributes:inputAttributes,selectOnFocus:true,inputBehaviours:derive$1([Keying.config({mode:'special',onEnter:function onEnter(input){return commands.findPrimary(input).map(function(primary){emitExecute(primary);return true;});},onLeft:function onLeft(comp,se){se.cut();return Optional.none();},onRight:function onRight(comp,se){se.cut();return Optional.none();}})])}));var commands=generate(memInput,ctx.commands,providers);return[{title:Optional.none(),items:[memInput.asSpec()]},{title:Optional.none(),items:commands.asSpecs()}];};var renderContextForm=function renderContextForm(toolbarType,ctx,providers){return renderToolbar({type:toolbarType,uid:generate$6('context-toolbar'),initGroups:buildInitGroups(ctx,providers),onEscape:Optional.none,cyclicKeying:true,providers:providers});};var ContextForm={renderContextForm:renderContextForm,buildInitGroups:buildInitGroups};var isVerticalOverlap=function isVerticalOverlap(a,b){var threshold=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.01;return b.bottom-a.y>=threshold&&a.bottom-b.y>=threshold;};var getRangeRect=function getRangeRect(rng){var rect=rng.getBoundingClientRect();if(rect.height<=0&&rect.width<=0){var leaf$1=leaf(SugarElement.fromDom(rng.startContainer),rng.startOffset).element;var elm=isText(leaf$1)?parent(leaf$1):Optional.some(leaf$1);return elm.filter(isElement$1).map(function(e){return e.dom.getBoundingClientRect();}).getOr(rect);}else{return rect;}};var getSelectionBounds=function getSelectionBounds(editor){var rng=editor.selection.getRng();var rect=getRangeRect(rng);if(editor.inline){var scroll=get$b();return bounds(scroll.left+rect.left,scroll.top+rect.top,rect.width,rect.height);}else{var bodyPos=absolute$2(SugarElement.fromDom(editor.getBody()));return bounds(bodyPos.x+rect.left,bodyPos.y+rect.top,rect.width,rect.height);}};var getAnchorElementBounds=function getAnchorElementBounds(editor,lastElement){return lastElement.filter(inBody).map(absolute$2).getOrThunk(function(){return getSelectionBounds(editor);});};var getHorizontalBounds=function getHorizontalBounds(contentAreaBox,viewportBounds,margin){var x=Math.max(contentAreaBox.x+margin,viewportBounds.x);var right=Math.min(contentAreaBox.right-margin,viewportBounds.right);return{x:x,width:right-x};};var getVerticalBounds=function getVerticalBounds(editor,contentAreaBox,viewportBounds,isToolbarLocationTop,toolbarType,margin){var container=SugarElement.fromDom(editor.getContainer());var header=descendant(container,'.tox-editor-header').getOr(container);var headerBox=box$1(header);var isToolbarBelowContentArea=headerBox.y>=contentAreaBox.bottom;var isToolbarAbove=isToolbarLocationTop&&!isToolbarBelowContentArea;if(editor.inline&&isToolbarAbove){return{y:Math.max(headerBox.bottom+margin,viewportBounds.y),bottom:viewportBounds.bottom};}if(editor.inline&&!isToolbarAbove){return{y:viewportBounds.y,bottom:Math.min(headerBox.y-margin,viewportBounds.bottom)};}var containerBounds=toolbarType==='line'?box$1(container):contentAreaBox;if(isToolbarAbove){return{y:Math.max(headerBox.bottom+margin,viewportBounds.y),bottom:Math.min(containerBounds.bottom-margin,viewportBounds.bottom)};}return{y:Math.max(containerBounds.y+margin,viewportBounds.y),bottom:Math.min(headerBox.y-margin,viewportBounds.bottom)};};var getContextToolbarBounds=function getContextToolbarBounds(editor,sharedBackstage,toolbarType){var margin=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var viewportBounds=getBounds$3(window);var contentAreaBox=box$1(SugarElement.fromDom(editor.getContentAreaContainer()));var toolbarOrMenubarEnabled=isMenubarEnabled(editor)||isToolbarEnabled(editor)||isMultipleToolbars(editor);var _getHorizontalBounds=getHorizontalBounds(contentAreaBox,viewportBounds,margin),x=_getHorizontalBounds.x,width=_getHorizontalBounds.width;if(editor.inline&&!toolbarOrMenubarEnabled){return bounds(x,viewportBounds.y,width,viewportBounds.height);}else{var isToolbarTop=sharedBackstage.header.isPositionedAtTop();var _getVerticalBounds=getVerticalBounds(editor,contentAreaBox,viewportBounds,isToolbarTop,toolbarType,margin),y=_getVerticalBounds.y,_bottom3=_getVerticalBounds.bottom;return bounds(x,y,width,_bottom3-y);}};var bubbleSize$1=12;var bubbleAlignments$1={valignCentre:[],alignCentre:[],alignLeft:['tox-pop--align-left'],alignRight:['tox-pop--align-right'],right:['tox-pop--right'],left:['tox-pop--left'],bottom:['tox-pop--bottom'],top:['tox-pop--top'],inset:['tox-pop--inset']};var anchorOverrides={maxHeightFunction:expandable$1(),maxWidthFunction:expandable()};var isEntireElementSelected=function isEntireElementSelected(editor,elem){var rng=editor.selection.getRng();var leaf$1=leaf(SugarElement.fromDom(rng.startContainer),rng.startOffset);return rng.startContainer===rng.endContainer&&rng.startOffset===rng.endOffset-1&&eq(leaf$1.element,elem);};var preservePosition=function preservePosition(elem,position,f){var currentPosition=getRaw(elem,'position');set$8(elem,'position',position);var result=f(elem);currentPosition.each(function(pos){return set$8(elem,'position',pos);});return result;};var shouldUseInsetLayouts=function shouldUseInsetLayouts(position){return position==='node';};var determineInsetLayout=function determineInsetLayout(editor,contextbar,elem,data,bounds){var selectionBounds=getSelectionBounds(editor);var isSameAnchorElement=data.lastElement().exists(function(prev){return eq(elem,prev);});if(isEntireElementSelected(editor,elem)){return isSameAnchorElement?preserve:north;}else if(isSameAnchorElement){return preservePosition(contextbar,data.getMode(),function(){var isOverlapping=isVerticalOverlap(selectionBounds,box$1(contextbar));return isOverlapping&&!data.isReposition()?flip:preserve;});}else{var yBounds=data.getMode()==='fixed'?bounds.y+get$b().top:bounds.y;var contextbarHeight=get$d(contextbar)+bubbleSize$1;return yBounds+contextbarHeight<=selectionBounds.y?north:south;}};var getAnchorSpec$2=function getAnchorSpec$2(editor,mobile,data,position){var smartInsetLayout=function smartInsetLayout(elem){return function(anchor,element,bubbles,placee,bounds){var layout=determineInsetLayout(editor,placee,elem,data,bounds);var newAnchor=_objectSpread({},anchor,{y:bounds.y,height:bounds.height});return _objectSpread({},layout(newAnchor,element,bubbles,placee,bounds),{alwaysFit:true});};};var getInsetLayouts=function getInsetLayouts(elem){return shouldUseInsetLayouts(position)?[smartInsetLayout(elem)]:[];};var desktopAnchorSpecLayouts={onLtr:function onLtr(elem){return[north$2,south$2,northeast$2,southeast$2,northwest$2,southwest$2].concat(getInsetLayouts(elem));},onRtl:function onRtl(elem){return[north$2,south$2,northwest$2,southwest$2,northeast$2,southeast$2].concat(getInsetLayouts(elem));}};var mobileAnchorSpecLayouts={onLtr:function onLtr(elem){return[south$2,southeast$2,southwest$2,northeast$2,northwest$2,north$2].concat(getInsetLayouts(elem));},onRtl:function onRtl(elem){return[south$2,southwest$2,southeast$2,northwest$2,northeast$2,north$2].concat(getInsetLayouts(elem));}};return mobile?mobileAnchorSpecLayouts:desktopAnchorSpecLayouts;};var getAnchorLayout=function getAnchorLayout(editor,position,isTouch,data){if(position==='line'){return{bubble:nu$5(bubbleSize$1,0,bubbleAlignments$1),layouts:{onLtr:function onLtr(){return[east$2];},onRtl:function onRtl(){return[west$2];}},overrides:anchorOverrides};}else{return{bubble:nu$5(0,bubbleSize$1,bubbleAlignments$1,1/bubbleSize$1),layouts:getAnchorSpec$2(editor,isTouch,data,position),overrides:anchorOverrides};}};var matchTargetWith=function matchTargetWith(elem,candidates){var ctxs=filter$2(candidates,function(toolbarApi){return toolbarApi.predicate(elem.dom);});var _partition$=partition$3(ctxs,function(t){return t.type==='contexttoolbar';}),pass=_partition$.pass,fail=_partition$.fail;return{contextToolbars:pass,contextForms:fail};};var filterByPositionForStartNode=function filterByPositionForStartNode(toolbars){if(toolbars.length<=1){return toolbars;}else{var doesPositionExist=function doesPositionExist(value){return exists(toolbars,function(t){return t.position===value;});};var filterToolbarsByPosition=function filterToolbarsByPosition(value){return filter$2(toolbars,function(t){return t.position===value;});};var hasSelectionToolbars=doesPositionExist('selection');var hasNodeToolbars=doesPositionExist('node');if(hasSelectionToolbars||hasNodeToolbars){if(hasNodeToolbars&&hasSelectionToolbars){var nodeToolbars=filterToolbarsByPosition('node');var selectionToolbars=map$2(filterToolbarsByPosition('selection'),function(t){return _objectSpread({},t,{position:'node'});});return nodeToolbars.concat(selectionToolbars);}else{return hasSelectionToolbars?filterToolbarsByPosition('selection'):filterToolbarsByPosition('node');}}else{return filterToolbarsByPosition('line');}}};var filterByPositionForAncestorNode=function filterByPositionForAncestorNode(toolbars){if(toolbars.length<=1){return toolbars;}else{var findPosition=function findPosition(value){return find$5(toolbars,function(t){return t.position===value;});};var basePosition=findPosition('selection').orThunk(function(){return findPosition('node');}).orThunk(function(){return findPosition('line');}).map(function(t){return t.position;});return basePosition.fold(function(){return[];},function(pos){return filter$2(toolbars,function(t){return t.position===pos;});});}};var matchStartNode=function matchStartNode(elem,nodeCandidates,editorCandidates){var nodeMatches=matchTargetWith(elem,nodeCandidates);if(nodeMatches.contextForms.length>0){return Optional.some({elem:elem,toolbars:[nodeMatches.contextForms[0]]});}else{var editorMatches=matchTargetWith(elem,editorCandidates);if(editorMatches.contextForms.length>0){return Optional.some({elem:elem,toolbars:[editorMatches.contextForms[0]]});}else if(nodeMatches.contextToolbars.length>0||editorMatches.contextToolbars.length>0){var toolbars=filterByPositionForStartNode(nodeMatches.contextToolbars.concat(editorMatches.contextToolbars));return Optional.some({elem:elem,toolbars:toolbars});}else{return Optional.none();}}};var matchAncestor=function matchAncestor(isRoot,startNode,scopes){if(isRoot(startNode)){return Optional.none();}else{return ancestor$2(startNode,function(ancestorElem){if(isElement$1(ancestorElem)){var _matchTargetWith=matchTargetWith(ancestorElem,scopes.inNodeScope),contextToolbars=_matchTargetWith.contextToolbars,contextForms=_matchTargetWith.contextForms;var toolbars=contextForms.length>0?contextForms:filterByPositionForAncestorNode(contextToolbars);return toolbars.length>0?Optional.some({elem:ancestorElem,toolbars:toolbars}):Optional.none();}else{return Optional.none();}},isRoot);}};var lookup$1=function lookup$1(scopes,editor){var rootElem=SugarElement.fromDom(editor.getBody());var isRoot=function isRoot(elem){return eq(elem,rootElem);};var isOutsideRoot=function isOutsideRoot(startNode){return!isRoot(startNode)&&!contains(rootElem,startNode);};var startNode=SugarElement.fromDom(editor.selection.getNode());if(isOutsideRoot(startNode)){return Optional.none();}return matchStartNode(startNode,scopes.inNodeScope,scopes.inEditorScope).orThunk(function(){return matchAncestor(isRoot,startNode,scopes);});};var categorise=function categorise(contextToolbars,navigate){var forms={};var inNodeScope=[];var inEditorScope=[];var formNavigators={};var lookupTable={};var registerForm=function registerForm(key,toolbarSpec){var contextForm=getOrDie(createContextForm(toolbarSpec));forms[key]=contextForm;contextForm.launch.map(function(launch){formNavigators['form:'+key+'']=_objectSpread({},toolbarSpec.launch,{type:launch.type==='contextformtogglebutton'?'togglebutton':'button',onAction:function onAction(){navigate(contextForm);}});});if(contextForm.scope==='editor'){inEditorScope.push(contextForm);}else{inNodeScope.push(contextForm);}lookupTable[key]=contextForm;};var registerToolbar=function registerToolbar(key,toolbarSpec){createContextToolbar(toolbarSpec).each(function(contextToolbar){if(toolbarSpec.scope==='editor'){inEditorScope.push(contextToolbar);}else{inNodeScope.push(contextToolbar);}lookupTable[key]=contextToolbar;});};var keys$1=keys(contextToolbars);each$1(keys$1,function(key){var toolbarApi=contextToolbars[key];if(toolbarApi.type==='contextform'){registerForm(key,toolbarApi);}else if(toolbarApi.type==='contexttoolbar'){registerToolbar(key,toolbarApi);}});return{forms:forms,inNodeScope:inNodeScope,inEditorScope:inEditorScope,lookupTable:lookupTable,formNavigators:formNavigators};};var forwardSlideEvent=generate$6('forward-slide');var backSlideEvent=generate$6('backward-slide');var changeSlideEvent=generate$6('change-slide-event');var resizingClass='tox-pop--resizing';var renderContextToolbar=function renderContextToolbar(spec){var stack=Cell([]);return InlineView.sketch({dom:{tag:'div',classes:['tox-pop']},fireDismissalEventInstead:{event:'doNotDismissYet'},onShow:function onShow(comp){stack.set([]);InlineView.getContent(comp).each(function(c){remove$6(c.element,'visibility');});remove$2(comp.element,resizingClass);remove$6(comp.element,'width');},inlineBehaviours:derive$1([config('context-toolbar-events',[runOnSource(transitionend(),function(comp,se){if(se.event.raw.propertyName==='width'){remove$2(comp.element,resizingClass);remove$6(comp.element,'width');}}),run$1(changeSlideEvent,function(comp,se){var elem=comp.element;remove$6(elem,'width');var currentWidth=get$c(elem);InlineView.setContent(comp,se.event.contents);add$2(elem,resizingClass);var newWidth=get$c(elem);set$8(elem,'width',currentWidth+'px');InlineView.getContent(comp).each(function(newContents){se.event.focus.bind(function(f){focus$3(f);return search(elem);}).orThunk(function(){Keying.focusIn(newContents);return active$1(getRootNode(elem));});});setTimeout(function(){set$8(comp.element,'width',newWidth+'px');},0);}),run$1(forwardSlideEvent,function(comp,se){InlineView.getContent(comp).each(function(oldContents){stack.set(stack.get().concat([{bar:oldContents,focus:active$1(getRootNode(comp.element))}]));});emitWith(comp,changeSlideEvent,{contents:se.event.forwardContents,focus:Optional.none()});}),run$1(backSlideEvent,function(comp,_se){last$1(stack.get()).each(function(last){stack.set(stack.get().slice(0,stack.get().length-1));emitWith(comp,changeSlideEvent,{contents:premade(last.bar),focus:last.focus});});})]),Keying.config({mode:'special',onEscape:function onEscape(comp){return last$1(stack.get()).fold(function(){return spec.onEscape();},function(_){emit(comp,backSlideEvent);return Optional.some(true);});}})]),lazySink:function lazySink(){return Result.value(spec.sink);}});};var transitionClass='tox-pop--transition';var register$9=function register$9(editor,registryContextToolbars,sink,extras){var backstage=extras.backstage;var sharedBackstage=backstage.shared;var isTouch=detect$1().deviceType.isTouch;var lastElement=value$2();var lastTrigger=value$2();var lastContextPosition=value$2();var contextbar=build$1(renderContextToolbar({sink:sink,onEscape:function onEscape(){editor.focus();return Optional.some(true);}}));var getBounds=function getBounds(){var position=lastContextPosition.get().getOr('node');var margin=shouldUseInsetLayouts(position)?1:0;return getContextToolbarBounds(editor,sharedBackstage,position,margin);};var canLaunchToolbar=function canLaunchToolbar(){return!editor.removed&&!(isTouch()&&backstage.isContextMenuOpen());};var isSameLaunchElement=function isSameLaunchElement(elem){return is$1(lift2(elem,lastElement.get(),eq),true);};var shouldContextToolbarHide=function shouldContextToolbarHide(){if(!canLaunchToolbar()){return true;}else{var contextToolbarBounds=getBounds();var anchorBounds=is$1(lastContextPosition.get(),'node')?getAnchorElementBounds(editor,lastElement.get()):getSelectionBounds(editor);return contextToolbarBounds.height<=0||!isVerticalOverlap(anchorBounds,contextToolbarBounds);}};var close=function close(){lastElement.clear();lastTrigger.clear();lastContextPosition.clear();InlineView.hide(contextbar);};var hideOrRepositionIfNecessary=function hideOrRepositionIfNecessary(){if(InlineView.isOpen(contextbar)){var contextBarEle=contextbar.element;remove$6(contextBarEle,'display');if(shouldContextToolbarHide()){set$8(contextBarEle,'display','none');}else{lastTrigger.set(0);InlineView.reposition(contextbar);}}};var wrapInPopDialog=function wrapInPopDialog(toolbarSpec){return{dom:{tag:'div',classes:['tox-pop__dialog']},components:[toolbarSpec],behaviours:derive$1([Keying.config({mode:'acyclic'}),config('pop-dialog-wrap-events',[runOnAttached(function(comp){editor.shortcuts.add('ctrl+F9','focus statusbar',function(){return Keying.focusIn(comp);});}),runOnDetached(function(_comp){editor.shortcuts.remove('ctrl+F9');})])])};};var getScopes=cached(function(){return categorise(registryContextToolbars,function(toolbarApi){var alloySpec=buildToolbar([toolbarApi]);emitWith(contextbar,forwardSlideEvent,{forwardContents:wrapInPopDialog(alloySpec)});});});var buildContextToolbarGroups=function buildContextToolbarGroups(allButtons,ctx){return identifyButtons(editor,{buttons:allButtons,toolbar:ctx.items,allowToolbarGroups:false},extras,Optional.some(['form:']));};var buildContextFormGroups=function buildContextFormGroups(ctx,providers){return ContextForm.buildInitGroups(ctx,providers);};var buildToolbar=function buildToolbar(toolbars){var _editor$ui$registry$g2=editor.ui.registry.getAll(),buttons=_editor$ui$registry$g2.buttons;var scopes=getScopes();var allButtons=_objectSpread({},buttons,{},scopes.formNavigators);var toolbarType=getToolbarMode(editor)===ToolbarMode$1.scrolling?ToolbarMode$1.scrolling:ToolbarMode$1["default"];var initGroups=flatten(map$2(toolbars,function(ctx){return ctx.type==='contexttoolbar'?buildContextToolbarGroups(allButtons,ctx):buildContextFormGroups(ctx,sharedBackstage.providers);}));return renderToolbar({type:toolbarType,uid:generate$6('context-toolbar'),initGroups:initGroups,onEscape:Optional.none,cyclicKeying:true,providers:sharedBackstage.providers});};var getAnchor=function getAnchor(position,element){var anchorage=position==='node'?sharedBackstage.anchors.node(element):sharedBackstage.anchors.cursor();var anchorLayout=getAnchorLayout(editor,position,isTouch(),{lastElement:lastElement.get,isReposition:function isReposition(){return is$1(lastTrigger.get(),0);},getMode:function getMode(){return Positioning.getMode(sink);}});return deepMerge(anchorage,anchorLayout);};var launchContext=function launchContext(toolbarApi,elem){launchContextToolbar.cancel();if(!canLaunchToolbar()){return;}var toolbarSpec=buildToolbar(toolbarApi);var position=toolbarApi[0].position;var anchor=getAnchor(position,elem);lastContextPosition.set(position);lastTrigger.set(1);var contextBarEle=contextbar.element;remove$6(contextBarEle,'display');if(!isSameLaunchElement(elem)){remove$2(contextBarEle,transitionClass);Positioning.reset(sink,contextbar);}InlineView.showWithinBounds(contextbar,wrapInPopDialog(toolbarSpec),{anchor:anchor,transition:{classes:[transitionClass],mode:'placement'}},function(){return Optional.some(getBounds());});elem.fold(lastElement.clear,lastElement.set);if(shouldContextToolbarHide()){set$8(contextBarEle,'display','none');}};var launchContextToolbar=last(function(){if(!editor.hasFocus()||editor.removed){return;}if(has(contextbar.element,transitionClass)){launchContextToolbar.throttle();}else{var scopes=getScopes();lookup$1(scopes,editor).fold(close,function(info){launchContext(info.toolbars,Optional.some(info.elem));});}},17);editor.on('init',function(){editor.on('remove',close);editor.on('ScrollContent ScrollWindow ObjectResized ResizeEditor longpress',hideOrRepositionIfNecessary);editor.on('click keyup focus SetContent',launchContextToolbar.throttle);editor.on(hideContextToolbarEvent,close);editor.on(showContextToolbarEvent,function(e){var scopes=getScopes();get$g(scopes.lookupTable,e.toolbarKey).each(function(ctx){launchContext([ctx],someIf(e.target!==editor,e.target));InlineView.getContent(contextbar).each(Keying.focusIn);});});editor.on('focusout',function(_e){global$9.setEditorTimeout(editor,function(){if(search(sink.element).isNone()&&search(contextbar.element).isNone()){close();}},0);});editor.on('SwitchMode',function(){if(editor.mode.isReadOnly()){close();}});editor.on('AfterProgressState',function(event){if(event.state){close();}else if(editor.hasFocus()){launchContextToolbar.throttle();}});editor.on('NodeChange',function(_e){search(contextbar.element).fold(launchContextToolbar.throttle,noop);});});};var register$8=function register$8(editor){var alignToolbarButtons=[{name:'alignleft',text:'Align left',cmd:'JustifyLeft',icon:'align-left'},{name:'aligncenter',text:'Align center',cmd:'JustifyCenter',icon:'align-center'},{name:'alignright',text:'Align right',cmd:'JustifyRight',icon:'align-right'},{name:'alignjustify',text:'Justify',cmd:'JustifyFull',icon:'align-justify'}];each$1(alignToolbarButtons,function(item){editor.ui.registry.addToggleButton(item.name,{tooltip:item.text,icon:item.icon,onAction:onActionExecCommand(editor,item.cmd),onSetup:onSetupFormatToggle(editor,item.name)});});editor.ui.registry.addButton('alignnone',{tooltip:'No alignment',icon:'align-none',onAction:onActionExecCommand(editor,'JustifyNone')});};var units={unsupportedLength:['em','ex','cap','ch','ic','rem','lh','rlh','vw','vh','vi','vb','vmin','vmax','cm','mm','Q','in','pc','pt','px'],fixed:['px','pt'],relative:['%'],empty:['']};var pattern=function(){var decimalDigits='[0-9]+';var signedInteger='[+-]?'+decimalDigits;var exponentPart='[eE]'+signedInteger;var dot='\\.';var opt=function opt(input){return"(?:".concat(input,")?");};var unsignedDecimalLiteral=['Infinity',decimalDigits+dot+opt(decimalDigits)+opt(exponentPart),dot+decimalDigits+opt(exponentPart),decimalDigits+opt(exponentPart)].join('|');var _float="[+-]?(?:".concat(unsignedDecimalLiteral,")");return new RegExp("^(".concat(_float,")(.*)$"));}();var isUnit=function isUnit(unit,accepted){return exists(accepted,function(acc){return exists(units[acc],function(check){return unit===check;});});};var parse=function parse(input,accepted){var match=Optional.from(pattern.exec(input));return match.bind(function(array){var value=Number(array[1]);var unitRaw=array[2];if(isUnit(unitRaw,accepted)){return Optional.some({value:value,unit:unitRaw});}else{return Optional.none();}});};var normalise=function normalise(input,accepted){return parse(input,accepted).map(function(_ref11){var value=_ref11.value,unit=_ref11.unit;return value+unit;});};var registerController=function registerController(editor,spec){var getMenuItems=function getMenuItems(){var options=spec.getOptions(editor);var initial=spec.getCurrent(editor).map(spec.hash);var current=value$2();return map$2(options,function(value){return{type:'togglemenuitem',text:spec.display(value),onSetup:function onSetup(api){var setActive=function setActive(active){if(active){current.on(function(oldApi){return oldApi.setActive(false);});current.set(api);}api.setActive(active);};setActive(is$1(initial,spec.hash(value)));var unbindWatcher=spec.watcher(editor,value,setActive);return function(){current.clear();unbindWatcher();};},onAction:function onAction(){return spec.setCurrent(editor,value);}};});};editor.ui.registry.addMenuButton(spec.name,{tooltip:spec.text,icon:spec.icon,fetch:function fetch(callback){return callback(getMenuItems());},onSetup:spec.onToolbarSetup});editor.ui.registry.addNestedMenuItem(spec.name,{type:'nestedmenuitem',text:spec.text,getSubmenuItems:getMenuItems,onSetup:spec.onMenuSetup});};var lineHeightSpec={name:'lineheight',text:'Line height',icon:'line-height',getOptions:getLineHeightFormats,hash:function hash(input){return normalise(input,['fixed','relative','empty']).getOr(input);},display:identity,watcher:function watcher(editor,value,callback){return editor.formatter.formatChanged('lineheight',callback,false,{value:value}).unbind;},getCurrent:function getCurrent(editor){return Optional.from(editor.queryCommandValue('LineHeight'));},setCurrent:function setCurrent(editor,value){return editor.execCommand('LineHeight',false,value);}};var languageSpec=function languageSpec(editor){var settingsOpt=Optional.from(getContentLanguages(editor));return settingsOpt.map(function(settings){return{name:'language',text:'Language',icon:'language',getOptions:constant$1(settings),hash:function hash(input){return isUndefined(input.customCode)?input.code:"".concat(input.code,"/").concat(input.customCode);},display:function display(input){return input.title;},watcher:function watcher(editor,value,callback){return editor.formatter.formatChanged('lang',callback,false,{value:value.code,customValue:value.customCode}).unbind;},getCurrent:function getCurrent(editor){var node=SugarElement.fromDom(editor.selection.getNode());return closest$4(node,function(n){return Optional.some(n).filter(isElement$1).bind(function(ele){var codeOpt=getOpt(ele,'lang');return codeOpt.map(function(code){var customCode=getOpt(ele,'data-mce-lang').getOrUndefined();return{code:code,customCode:customCode,title:''};});});});},setCurrent:function setCurrent(editor,lang){return editor.execCommand('Lang',false,lang);},onToolbarSetup:function onToolbarSetup(api){var unbinder=unbindable();api.setActive(editor.formatter.match('lang',{},undefined,true));unbinder.set(editor.formatter.formatChanged('lang',api.setActive,true));return unbinder.clear;}};});};var register$7=function register$7(editor){registerController(editor,lineHeightSpec);languageSpec(editor).each(function(spec){return registerController(editor,spec);});};var register$6=function register$6(editor,backstage){createAlignMenu(editor,backstage);createFontFamilyMenu(editor,backstage);createStylesMenu(editor,backstage);createBlocksMenu(editor,backstage);createFontSizeMenu(editor,backstage);};var onSetupOutdentState=function onSetupOutdentState(editor){return onSetupEvent(editor,'NodeChange',function(api){api.setEnabled(editor.queryCommandState('outdent'));});};var registerButtons$2=function registerButtons$2(editor){editor.ui.registry.addButton('outdent',{tooltip:'Decrease indent',icon:'outdent',onSetup:onSetupOutdentState(editor),onAction:onActionExecCommand(editor,'outdent')});editor.ui.registry.addButton('indent',{tooltip:'Increase indent',icon:'indent',onAction:onActionExecCommand(editor,'indent')});};var register$5=function register$5(editor){registerButtons$2(editor);};var makeSetupHandler=function makeSetupHandler(editor,pasteAsText){return function(api){api.setActive(pasteAsText.get());var pastePlainTextToggleHandler=function pastePlainTextToggleHandler(e){pasteAsText.set(e.state);api.setActive(e.state);};editor.on('PastePlainTextToggle',pastePlainTextToggleHandler);return function(){return editor.off('PastePlainTextToggle',pastePlainTextToggleHandler);};};};var register$4=function register$4(editor){var pasteAsText=Cell(getPasteAsText(editor));var onAction=function onAction(){return editor.execCommand('mceTogglePlainTextPaste');};editor.ui.registry.addToggleButton('pastetext',{active:false,icon:'paste-text',tooltip:'Paste as text',onAction:onAction,onSetup:makeSetupHandler(editor,pasteAsText)});editor.ui.registry.addToggleMenuItem('pastetext',{text:'Paste as text',icon:'paste-text',onAction:onAction,onSetup:makeSetupHandler(editor,pasteAsText)});};var onActionToggleFormat=function onActionToggleFormat(editor,fmt){return function(){editor.execCommand('mceToggleFormat',false,fmt);};};var registerFormatButtons=function registerFormatButtons(editor){global$1.each([{name:'bold',text:'Bold',icon:'bold'},{name:'italic',text:'Italic',icon:'italic'},{name:'underline',text:'Underline',icon:'underline'},{name:'strikethrough',text:'Strikethrough',icon:'strike-through'},{name:'subscript',text:'Subscript',icon:'subscript'},{name:'superscript',text:'Superscript',icon:'superscript'}],function(btn,_idx){editor.ui.registry.addToggleButton(btn.name,{tooltip:btn.text,icon:btn.icon,onSetup:onSetupFormatToggle(editor,btn.name),onAction:onActionToggleFormat(editor,btn.name)});});for(var i=1;i<=6;i++){var _name2='h'+i;editor.ui.registry.addToggleButton(_name2,{text:_name2.toUpperCase(),tooltip:'Heading '+i,onSetup:onSetupFormatToggle(editor,_name2),onAction:onActionToggleFormat(editor,_name2)});}};var registerCommandButtons=function registerCommandButtons(editor){global$1.each([{name:'cut',text:'Cut',action:'Cut',icon:'cut'},{name:'copy',text:'Copy',action:'Copy',icon:'copy'},{name:'paste',text:'Paste',action:'Paste',icon:'paste'},{name:'help',text:'Help',action:'mceHelp',icon:'help'},{name:'selectall',text:'Select all',action:'SelectAll',icon:'select-all'},{name:'newdocument',text:'New document',action:'mceNewDocument',icon:'new-document'},{name:'removeformat',text:'Clear formatting',action:'RemoveFormat',icon:'remove-formatting'},{name:'remove',text:'Remove',action:'Delete',icon:'remove'},{name:'print',text:'Print',action:'mcePrint',icon:'print'},{name:'hr',text:'Horizontal line',action:'InsertHorizontalRule',icon:'horizontal-rule'}],function(btn){editor.ui.registry.addButton(btn.name,{tooltip:btn.text,icon:btn.icon,onAction:onActionExecCommand(editor,btn.action)});});};var registerCommandToggleButtons=function registerCommandToggleButtons(editor){global$1.each([{name:'blockquote',text:'Blockquote',action:'mceBlockQuote',icon:'quote'}],function(btn){editor.ui.registry.addToggleButton(btn.name,{tooltip:btn.text,icon:btn.icon,onAction:onActionExecCommand(editor,btn.action),onSetup:onSetupFormatToggle(editor,btn.name)});});};var registerButtons$1=function registerButtons$1(editor){registerFormatButtons(editor);registerCommandButtons(editor);registerCommandToggleButtons(editor);};var registerMenuItems$2=function registerMenuItems$2(editor){global$1.each([{name:'bold',text:'Bold',action:'Bold',icon:'bold',shortcut:'Meta+B'},{name:'italic',text:'Italic',action:'Italic',icon:'italic',shortcut:'Meta+I'},{name:'underline',text:'Underline',action:'Underline',icon:'underline',shortcut:'Meta+U'},{name:'strikethrough',text:'Strikethrough',action:'Strikethrough',icon:'strike-through'},{name:'subscript',text:'Subscript',action:'Subscript',icon:'subscript'},{name:'superscript',text:'Superscript',action:'Superscript',icon:'superscript'},{name:'removeformat',text:'Clear formatting',action:'RemoveFormat',icon:'remove-formatting'},{name:'newdocument',text:'New document',action:'mceNewDocument',icon:'new-document'},{name:'cut',text:'Cut',action:'Cut',icon:'cut',shortcut:'Meta+X'},{name:'copy',text:'Copy',action:'Copy',icon:'copy',shortcut:'Meta+C'},{name:'paste',text:'Paste',action:'Paste',icon:'paste',shortcut:'Meta+V'},{name:'selectall',text:'Select all',action:'SelectAll',icon:'select-all',shortcut:'Meta+A'},{name:'print',text:'Print...',action:'mcePrint',icon:'print',shortcut:'Meta+P'},{name:'hr',text:'Horizontal line',action:'InsertHorizontalRule',icon:'horizontal-rule'}],function(menuitem){editor.ui.registry.addMenuItem(menuitem.name,{text:menuitem.text,icon:menuitem.icon,shortcut:menuitem.shortcut,onAction:onActionExecCommand(editor,menuitem.action)});});editor.ui.registry.addMenuItem('codeformat',{text:'Code',icon:'sourcecode',onAction:onActionToggleFormat(editor,'code')});};var register$3=function register$3(editor){registerButtons$1(editor);registerMenuItems$2(editor);};var onSetupUndoRedoState=function onSetupUndoRedoState(editor,type){return onSetupEvent(editor,'Undo Redo AddUndo TypingUndo ClearUndos SwitchMode',function(api){api.setEnabled(!editor.mode.isReadOnly()&&editor.undoManager[type]());});};var registerMenuItems$1=function registerMenuItems$1(editor){editor.ui.registry.addMenuItem('undo',{text:'Undo',icon:'undo',shortcut:'Meta+Z',onSetup:onSetupUndoRedoState(editor,'hasUndo'),onAction:onActionExecCommand(editor,'undo')});editor.ui.registry.addMenuItem('redo',{text:'Redo',icon:'redo',shortcut:'Meta+Y',onSetup:onSetupUndoRedoState(editor,'hasRedo'),onAction:onActionExecCommand(editor,'redo')});};var registerButtons=function registerButtons(editor){editor.ui.registry.addButton('undo',{tooltip:'Undo',icon:'undo',enabled:false,onSetup:onSetupUndoRedoState(editor,'hasUndo'),onAction:onActionExecCommand(editor,'undo')});editor.ui.registry.addButton('redo',{tooltip:'Redo',icon:'redo',enabled:false,onSetup:onSetupUndoRedoState(editor,'hasRedo'),onAction:onActionExecCommand(editor,'redo')});};var register$2=function register$2(editor){registerMenuItems$1(editor);registerButtons(editor);};var onSetupVisualAidState=function onSetupVisualAidState(editor){return onSetupEvent(editor,'VisualAid',function(api){api.setActive(editor.hasVisual);});};var registerMenuItems=function registerMenuItems(editor){editor.ui.registry.addToggleMenuItem('visualaid',{text:'Visual aids',onSetup:onSetupVisualAidState(editor),onAction:onActionExecCommand(editor,'mceToggleVisualAid')});};var registerToolbarButton=function registerToolbarButton(editor){editor.ui.registry.addButton('visualaid',{tooltip:'Visual aids',text:'Visual aids',onAction:onActionExecCommand(editor,'mceToggleVisualAid')});};var register$1=function register$1(editor){registerToolbarButton(editor);registerMenuItems(editor);};var setup$6=function setup$6(editor,backstage){register$8(editor);register$3(editor);register$6(editor,backstage);register$2(editor);register$c(editor);register$1(editor);register$5(editor);register$7(editor);register$4(editor);};var patchPipeConfig=function patchPipeConfig(config){return isString(config)?config.split(/[ ,]/):config;};var option=function option(name){return function(editor){return editor.options.get(name);};};var register=function register(editor){var registerOption=editor.options.register;registerOption('contextmenu_avoid_overlap',{processor:'string',"default":''});registerOption('contextmenu_never_use_native',{processor:'boolean',"default":false});registerOption('contextmenu',{processor:function processor(value){if(value===false){return{value:[],valid:true};}else if(isString(value)||isArrayOf(value,isString)){return{value:patchPipeConfig(value),valid:true};}else{return{valid:false,message:'Must be false or a string.'};}},"default":'link linkchecker image editimage table spellchecker configurepermanentpen'});};var shouldNeverUseNative=option('contextmenu_never_use_native');var getAvoidOverlapSelector=option('contextmenu_avoid_overlap');var isContextMenuDisabled=function isContextMenuDisabled(editor){return getContextMenu(editor).length===0;};var getContextMenu=function getContextMenu(editor){var contextMenus=editor.ui.registry.getAll().contextMenus;var contextMenu=editor.options.get('contextmenu');if(editor.options.isSet('contextmenu')){return contextMenu;}else{return filter$2(contextMenu,function(item){return has$2(contextMenus,item);});}};var nu=function nu(x,y){return{type:'makeshift',x:x,y:y};};var transpose=function transpose(pos,dx,dy){return nu(pos.x+dx,pos.y+dy);};var isTouchEvent=function isTouchEvent(e){return e.type==='longpress'||e.type.indexOf('touch')===0;};var fromPageXY=function fromPageXY(e){if(isTouchEvent(e)){var _touch=e.touches[0];return nu(_touch.pageX,_touch.pageY);}else{return nu(e.pageX,e.pageY);}};var fromClientXY=function fromClientXY(e){if(isTouchEvent(e)){var _touch2=e.touches[0];return nu(_touch2.clientX,_touch2.clientY);}else{return nu(e.clientX,e.clientY);}};var transposeContentAreaContainer=function transposeContentAreaContainer(element,pos){var containerPos=global$7.DOM.getPos(element);return transpose(pos,containerPos.x,containerPos.y);};var getPointAnchor=function getPointAnchor(editor,e){if(e.type==='contextmenu'||e.type==='longpress'){if(editor.inline){return fromPageXY(e);}else{return transposeContentAreaContainer(editor.getContentAreaContainer(),fromClientXY(e));}}else{return getSelectionAnchor(editor);}};var getSelectionAnchor=function getSelectionAnchor(editor){return{type:'selection',root:SugarElement.fromDom(editor.selection.getNode())};};var getNodeAnchor=function getNodeAnchor(editor){return{type:'node',node:Optional.some(SugarElement.fromDom(editor.selection.getNode())),root:SugarElement.fromDom(editor.getBody())};};var getAnchorSpec$1=function getAnchorSpec$1(editor,e,anchorType){switch(anchorType){case'node':return getNodeAnchor(editor);case'point':return getPointAnchor(editor,e);case'selection':return getSelectionAnchor(editor);}};var initAndShow$1=function initAndShow$1(editor,e,buildMenu,backstage,contextmenu,anchorType){var items=buildMenu();var anchorSpec=getAnchorSpec$1(editor,e,anchorType);build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,false).map(function(menuData){e.preventDefault();InlineView.showMenuAt(contextmenu,{anchor:anchorSpec},{menu:{markers:markers('normal')},data:menuData});});};var layouts={onLtr:function onLtr(){return[south$2,southeast$2,southwest$2,northeast$2,northwest$2,north$2,north,south,northeast,southeast,northwest,southwest];},onRtl:function onRtl(){return[south$2,southwest$2,southeast$2,northwest$2,northeast$2,north$2,north,south,northwest,southwest,northeast,southeast];}};var bubbleSize=12;var bubbleAlignments={valignCentre:[],alignCentre:[],alignLeft:['tox-pop--align-left'],alignRight:['tox-pop--align-right'],right:['tox-pop--right'],left:['tox-pop--left'],bottom:['tox-pop--bottom'],top:['tox-pop--top']};var isTouchWithinSelection=function isTouchWithinSelection(editor,e){var selection=editor.selection;if(selection.isCollapsed()||e.touches.length<1){return false;}else{var _touch3=e.touches[0];var rng=selection.getRng();var rngRectOpt=getFirstRect(editor.getWin(),SimSelection.domRange(rng));return rngRectOpt.exists(function(rngRect){return rngRect.left<=_touch3.clientX&&rngRect.right>=_touch3.clientX&&rngRect.top<=_touch3.clientY&&rngRect.bottom>=_touch3.clientY;});}};var setupiOSOverrides=function setupiOSOverrides(editor){var originalSelection=editor.selection.getRng();var selectionReset=function selectionReset(){global$9.setEditorTimeout(editor,function(){editor.selection.setRng(originalSelection);},10);unbindEventListeners();};editor.once('touchend',selectionReset);var preventMousedown=function preventMousedown(e){e.preventDefault();e.stopImmediatePropagation();};editor.on('mousedown',preventMousedown,true);var clearSelectionReset=function clearSelectionReset(){return unbindEventListeners();};editor.once('longpresscancel',clearSelectionReset);var unbindEventListeners=function unbindEventListeners(){editor.off('touchend',selectionReset);editor.off('longpresscancel',clearSelectionReset);editor.off('mousedown',preventMousedown);};};var getAnchorSpec=function getAnchorSpec(editor,e,anchorType){var anchorSpec=getAnchorSpec$1(editor,e,anchorType);var bubbleYOffset=anchorType==='point'?bubbleSize:0;return _objectSpread({bubble:nu$5(0,bubbleYOffset,bubbleAlignments),layouts:layouts,overrides:{maxWidthFunction:expandable(),maxHeightFunction:expandable$1()}},anchorSpec);};var show=function show(editor,e,items,backstage,contextmenu,anchorType,highlightImmediately){var anchorSpec=getAnchorSpec(editor,e,anchorType);build(items,ItemResponse$1.CLOSE_ON_EXECUTE,backstage,true).map(function(menuData){e.preventDefault();InlineView.showMenuWithinBounds(contextmenu,{anchor:anchorSpec},{menu:{markers:markers('normal'),highlightImmediately:highlightImmediately},data:menuData,type:'horizontal'},function(){return Optional.some(getContextToolbarBounds(editor,backstage.shared,anchorType==='node'?'node':'selection'));});editor.dispatch(hideContextToolbarEvent);});};var initAndShow=function initAndShow(editor,e,buildMenu,backstage,contextmenu,anchorType){var detection=detect$1();var isiOS=detection.os.isiOS();var isMacOS=detection.os.isMacOS();var isAndroid=detection.os.isAndroid();var isTouch=detection.deviceType.isTouch();var shouldHighlightImmediately=function shouldHighlightImmediately(){return!(isAndroid||isiOS||isMacOS&&isTouch);};var open=function open(){var items=buildMenu();show(editor,e,items,backstage,contextmenu,anchorType,shouldHighlightImmediately());};if((isMacOS||isiOS)&&anchorType!=='node'){var openiOS=function openiOS(){setupiOSOverrides(editor);open();};if(isTouchWithinSelection(editor,e)){openiOS();}else{editor.once('selectionchange',openiOS);editor.once('touchend',function(){return editor.off('selectionchange',openiOS);});}}else{open();}};var isSeparator=function isSeparator(item){return isString(item)?item==='|':item.type==='separator';};var separator={type:'separator'};var makeContextItem=function makeContextItem(item){var commonMenuItem=function commonMenuItem(item){return{text:item.text,icon:item.icon,enabled:item.enabled,shortcut:item.shortcut};};if(isString(item)){return item;}else{switch(item.type){case'separator':return separator;case'submenu':return _objectSpread({type:'nestedmenuitem'},commonMenuItem(item),{getSubmenuItems:function getSubmenuItems(){var items=item.getSubmenuItems();if(isString(items)){return items;}else{return map$2(items,makeContextItem);}}});default:return _objectSpread({type:'menuitem'},commonMenuItem(item),{onAction:noarg(item.onAction)});}}};var addContextMenuGroup=function addContextMenuGroup(xs,groupItems){if(groupItems.length===0){return xs;}var lastMenuItem=last$1(xs).filter(function(item){return!isSeparator(item);});var before=lastMenuItem.fold(function(){return[];},function(_){return[separator];});return xs.concat(before).concat(groupItems).concat([separator]);};var generateContextMenu=function generateContextMenu(contextMenus,menuConfig,selectedElement){var sections=foldl(menuConfig,function(acc,name){return get$g(contextMenus,name.toLowerCase()).map(function(menu){var items=menu.update(selectedElement);if(isString(items)){return addContextMenuGroup(acc,items.split(' '));}else if(items.length>0){var allItems=map$2(items,makeContextItem);return addContextMenuGroup(acc,allItems);}else{return acc;}}).getOrThunk(function(){return acc.concat([name]);});},[]);if(sections.length>0&&isSeparator(sections[sections.length-1])){sections.pop();}return sections;};var isNativeOverrideKeyEvent=function isNativeOverrideKeyEvent(editor,e){return e.ctrlKey&&!shouldNeverUseNative(editor);};var isTriggeredByKeyboard=function isTriggeredByKeyboard(editor,e){return e.type!=='longpress'&&(e.button!==2||e.target===editor.getBody()&&e.pointerType==='');};var getSelectedElement=function getSelectedElement(editor,e){return isTriggeredByKeyboard(editor,e)?editor.selection.getStart(true):e.target;};var getAnchorType=function getAnchorType(editor,e){var selector=getAvoidOverlapSelector(editor);var anchorType=isTriggeredByKeyboard(editor,e)?'selection':'point';if(isNotEmpty(selector)){var target=getSelectedElement(editor,e);var selectorExists=closest(SugarElement.fromDom(target),selector);return selectorExists?'node':anchorType;}else{return anchorType;}};var setup$5=function setup$5(editor,lazySink,backstage){var detection=detect$1();var isTouch=detection.deviceType.isTouch;var contextmenu=build$1(InlineView.sketch({dom:{tag:'div'},lazySink:lazySink,onEscape:function onEscape(){return editor.focus();},onShow:function onShow(){return backstage.setContextMenuState(true);},onHide:function onHide(){return backstage.setContextMenuState(false);},fireDismissalEventInstead:{},inlineBehaviours:derive$1([config('dismissContextMenu',[run$1(dismissRequested(),function(comp,_se){Sandboxing.close(comp);editor.focus();})])])}));var hideContextMenu=function hideContextMenu(_e){return InlineView.hide(contextmenu);};var showContextMenu=function showContextMenu(e){if(shouldNeverUseNative(editor)){e.preventDefault();}if(isNativeOverrideKeyEvent(editor,e)||isContextMenuDisabled(editor)){return;}var anchorType=getAnchorType(editor,e);var buildMenu=function buildMenu(){var selectedElement=getSelectedElement(editor,e);var registry=editor.ui.registry.getAll();var menuConfig=getContextMenu(editor);return generateContextMenu(registry.contextMenus,menuConfig,selectedElement);};var initAndShow$2=isTouch()?initAndShow:initAndShow$1;initAndShow$2(editor,e,buildMenu,backstage,contextmenu,anchorType);};editor.on('init',function(){var hideEvents='ResizeEditor ScrollContent ScrollWindow longpresscancel'+(isTouch()?'':' ResizeWindow');editor.on(hideEvents,hideContextMenu);editor.on('longpress contextmenu',showContextMenu);});};var adt=Adt.generate([{offset:['x','y']},{absolute:['x','y']},{fixed:['x','y']}]);var subtract=function subtract(change){return function(point){return point.translate(-change.left,-change.top);};};var add=function add(change){return function(point){return point.translate(change.left,change.top);};};var transform=function transform(changes){return function(x,y){return foldl(changes,function(rest,f){return f(rest);},SugarPosition(x,y));};};var asFixed=function asFixed(coord,scroll,origin){return coord.fold(transform([add(origin),subtract(scroll)]),transform([subtract(scroll)]),transform([]));};var asAbsolute=function asAbsolute(coord,scroll,origin){return coord.fold(transform([add(origin)]),transform([]),transform([add(scroll)]));};var asOffset=function asOffset(coord,scroll,origin){return coord.fold(transform([]),transform([subtract(origin)]),transform([add(scroll),subtract(origin)]));};var withinRange=function withinRange(coord1,coord2,xRange,yRange,scroll,origin){var a1=asAbsolute(coord1,scroll,origin);var a2=asAbsolute(coord2,scroll,origin);return Math.abs(a1.left-a2.left)<=xRange&&Math.abs(a1.top-a2.top)<=yRange;};var getDeltas=function getDeltas(coord1,coord2,xRange,yRange,scroll,origin){var a1=asAbsolute(coord1,scroll,origin);var a2=asAbsolute(coord2,scroll,origin);var left=Math.abs(a1.left-a2.left);var top=Math.abs(a1.top-a2.top);return SugarPosition(left,top);};var toStyles=function toStyles(coord,scroll,origin){var stylesOpt=coord.fold(function(x,y){return{position:Optional.some('absolute'),left:Optional.some(x+'px'),top:Optional.some(y+'px')};},function(x,y){return{position:Optional.some('absolute'),left:Optional.some(x-origin.left+'px'),top:Optional.some(y-origin.top+'px')};},function(x,y){return{position:Optional.some('fixed'),left:Optional.some(x+'px'),top:Optional.some(y+'px')};});return _objectSpread({right:Optional.none(),bottom:Optional.none()},stylesOpt);};var translate=function translate(coord,deltaX,deltaY){return coord.fold(function(x,y){return offset(x+deltaX,y+deltaY);},function(x,y){return absolute(x+deltaX,y+deltaY);},function(x,y){return fixed(x+deltaX,y+deltaY);});};var absorb=function absorb(partialCoord,originalCoord,scroll,origin){var absorbOne=function absorbOne(stencil,nu){return function(optX,optY){var original=stencil(originalCoord,scroll,origin);return nu(optX.getOr(original.left),optY.getOr(original.top));};};return partialCoord.fold(absorbOne(asOffset,offset),absorbOne(asAbsolute,absolute),absorbOne(asFixed,fixed));};var offset=adt.offset;var absolute=adt.absolute;var fixed=adt.fixed;var parseAttrToInt=function parseAttrToInt(element,name){var value=get$f(element,name);return isUndefined(value)?NaN:parseInt(value,10);};var get=function get(component,snapsInfo){var element=component.element;var x=parseAttrToInt(element,snapsInfo.leftAttr);var y=parseAttrToInt(element,snapsInfo.topAttr);return isNaN(x)||isNaN(y)?Optional.none():Optional.some(SugarPosition(x,y));};var set=function set(component,snapsInfo,pt){var element=component.element;set$9(element,snapsInfo.leftAttr,pt.left+'px');set$9(element,snapsInfo.topAttr,pt.top+'px');};var clear=function clear(component,snapsInfo){var element=component.element;remove$7(element,snapsInfo.leftAttr);remove$7(element,snapsInfo.topAttr);};var getCoords=function getCoords(component,snapInfo,coord,delta){return get(component,snapInfo).fold(function(){return coord;},function(fixed$1){return fixed(fixed$1.left+delta.left,fixed$1.top+delta.top);});};var moveOrSnap=function moveOrSnap(component,snapInfo,coord,delta,scroll,origin){var newCoord=getCoords(component,snapInfo,coord,delta);var snap=snapInfo.mustSnap?findClosestSnap(component,snapInfo,newCoord,scroll,origin):findSnap(component,snapInfo,newCoord,scroll,origin);var fixedCoord=asFixed(newCoord,scroll,origin);set(component,snapInfo,fixedCoord);return snap.fold(function(){return{coord:fixed(fixedCoord.left,fixedCoord.top),extra:Optional.none()};},function(spanned){return{coord:spanned.output,extra:spanned.extra};});};var stopDrag=function stopDrag(component,snapInfo){clear(component,snapInfo);};var findMatchingSnap=function findMatchingSnap(snaps,newCoord,scroll,origin){return findMap(snaps,function(snap){var sensor=snap.sensor;var inRange=withinRange(newCoord,sensor,snap.range.left,snap.range.top,scroll,origin);return inRange?Optional.some({output:absorb(snap.output,newCoord,scroll,origin),extra:snap.extra}):Optional.none();});};var findClosestSnap=function findClosestSnap(component,snapInfo,newCoord,scroll,origin){var snaps=snapInfo.getSnapPoints(component);var matchSnap=findMatchingSnap(snaps,newCoord,scroll,origin);return matchSnap.orThunk(function(){var bestSnap=foldl(snaps,function(acc,snap){var sensor=snap.sensor;var deltas=getDeltas(newCoord,sensor,snap.range.left,snap.range.top,scroll,origin);return acc.deltas.fold(function(){return{deltas:Optional.some(deltas),snap:Optional.some(snap)};},function(bestDeltas){var currAvg=(deltas.left+deltas.top)/2;var bestAvg=(bestDeltas.left+bestDeltas.top)/2;if(currAvg<=bestAvg){return{deltas:Optional.some(deltas),snap:Optional.some(snap)};}else{return acc;}});},{deltas:Optional.none(),snap:Optional.none()});return bestSnap.snap.map(function(snap){return{output:absorb(snap.output,newCoord,scroll,origin),extra:snap.extra};});});};var findSnap=function findSnap(component,snapInfo,newCoord,scroll,origin){var snaps=snapInfo.getSnapPoints(component);return findMatchingSnap(snaps,newCoord,scroll,origin);};var snapTo$1=function snapTo$1(snap,scroll,origin){return{coord:absorb(snap.output,snap.output,scroll,origin),extra:snap.extra};};var snapTo=function snapTo(component,dragConfig,_state,snap){var target=dragConfig.getTarget(component.element);if(dragConfig.repositionTarget){var doc=owner$4(component.element);var scroll=get$b(doc);var origin=getOrigin(target);var snapPin=snapTo$1(snap,scroll,origin);var styles=toStyles(snapPin.coord,scroll,origin);setOptions(target,styles);}};var DraggingApis=/*#__PURE__*/Object.freeze({__proto__:null,snapTo:snapTo});var initialAttribute='data-initial-z-index';var resetZIndex=function resetZIndex(blocker){parent(blocker.element).filter(isElement$1).each(function(root){getOpt(root,initialAttribute).fold(function(){return remove$6(root,'z-index');},function(zIndex){return set$8(root,'z-index',zIndex);});remove$7(root,initialAttribute);});};var changeZIndex=function changeZIndex(blocker){parent(blocker.element).filter(isElement$1).each(function(root){getRaw(root,'z-index').each(function(zindex){set$9(root,initialAttribute,zindex);});set$8(root,'z-index',get$e(blocker.element,'z-index'));});};var instigate=function instigate(anyComponent,blocker){anyComponent.getSystem().addToGui(blocker);changeZIndex(blocker);};var discard=function discard(blocker){resetZIndex(blocker);blocker.getSystem().removeFromGui(blocker);};var createComponent=function createComponent(component,blockerClass,blockerEvents){return component.getSystem().build(Container.sketch({dom:{styles:{'left':'0px','top':'0px','width':'100%','height':'100%','position':'fixed','z-index':'1000000000000000'},classes:[blockerClass]},events:blockerEvents}));};var SnapSchema=optionObjOf('snaps',[required$1('getSnapPoints'),onHandler('onSensor'),required$1('leftAttr'),required$1('topAttr'),defaulted('lazyViewport',win),defaulted('mustSnap',false)]);var schema$6=[defaulted('useFixed',never),required$1('blockerClass'),defaulted('getTarget',identity),defaulted('onDrag',noop),defaulted('repositionTarget',true),defaulted('onDrop',noop),defaultedFunction('getBounds',win),SnapSchema];var getCurrentCoord=function getCurrentCoord(target){return lift3(getRaw(target,'left'),getRaw(target,'top'),getRaw(target,'position'),function(left,top,position){var nu=position==='fixed'?fixed:offset;return nu(parseInt(left,10),parseInt(top,10));}).getOrThunk(function(){var location=absolute$3(target);return absolute(location.left,location.top);});};var clampCoords=function clampCoords(component,coords,scroll,origin,startData){var bounds=startData.bounds;var absoluteCoord=asAbsolute(coords,scroll,origin);var newX=clamp(absoluteCoord.left,bounds.x,bounds.x+bounds.width-startData.width);var newY=clamp(absoluteCoord.top,bounds.y,bounds.y+bounds.height-startData.height);var newCoords=absolute(newX,newY);return coords.fold(function(){var offset$1=asOffset(newCoords,scroll,origin);return offset(offset$1.left,offset$1.top);},constant$1(newCoords),function(){var fixed$1=asFixed(newCoords,scroll,origin);return fixed(fixed$1.left,fixed$1.top);});};var calcNewCoord=function calcNewCoord(component,optSnaps,currentCoord,scroll,origin,delta,startData){var newCoord=optSnaps.fold(function(){var translated=translate(currentCoord,delta.left,delta.top);var fixedCoord=asFixed(translated,scroll,origin);return fixed(fixedCoord.left,fixedCoord.top);},function(snapInfo){var snapping=moveOrSnap(component,snapInfo,currentCoord,delta,scroll,origin);snapping.extra.each(function(extra){snapInfo.onSensor(component,extra);});return snapping.coord;});return clampCoords(component,newCoord,scroll,origin,startData);};var dragBy=function dragBy(component,dragConfig,startData,delta){var target=dragConfig.getTarget(component.element);if(dragConfig.repositionTarget){var doc=owner$4(component.element);var scroll=get$b(doc);var origin=getOrigin(target);var currentCoord=getCurrentCoord(target);var newCoord=calcNewCoord(component,dragConfig.snaps,currentCoord,scroll,origin,delta,startData);var styles=toStyles(newCoord,scroll,origin);setOptions(target,styles);}dragConfig.onDrag(component,target,delta);};var calcStartData=function calcStartData(dragConfig,comp){return{bounds:dragConfig.getBounds(),height:getOuter$2(comp.element),width:getOuter$1(comp.element)};};var _move=function move(component,dragConfig,dragState,dragMode,event){var delta=dragState.update(dragMode,event);var dragStartData=dragState.getStartData().getOrThunk(function(){return calcStartData(dragConfig,component);});delta.each(function(dlt){dragBy(component,dragConfig,dragStartData,dlt);});};var stop=function stop(component,blocker,dragConfig,dragState){blocker.each(discard);dragConfig.snaps.each(function(snapInfo){stopDrag(component,snapInfo);});var target=dragConfig.getTarget(component.element);dragState.reset();dragConfig.onDrop(component,target);};var handlers=function handlers(events){return function(dragConfig,dragState){var updateStartState=function updateStartState(comp){dragState.setStartData(calcStartData(dragConfig,comp));};return derive$2([run$1(windowScroll(),function(comp){dragState.getStartData().each(function(){return updateStartState(comp);});})].concat(_toConsumableArray(events(dragConfig,dragState,updateStartState))));};};var init$2=function init$2(dragApi){return derive$2([run$1(mousedown(),dragApi.forceDrop),run$1(mouseup(),dragApi.drop),run$1(mousemove(),function(comp,simulatedEvent){dragApi.move(simulatedEvent.event);}),run$1(mouseout(),dragApi.delayDrop)]);};var getData$1=function getData$1(event){return Optional.from(SugarPosition(event.x,event.y));};var getDelta$1=function getDelta$1(old,nu){return SugarPosition(nu.left-old.left,nu.top-old.top);};var MouseData=/*#__PURE__*/Object.freeze({__proto__:null,getData:getData$1,getDelta:getDelta$1});var events$2=function events$2(dragConfig,dragState,updateStartState){return[run$1(mousedown(),function(component,simulatedEvent){var raw=simulatedEvent.event.raw;if(raw.button!==0){return;}simulatedEvent.stop();var stop$1=function stop$1(){return stop(component,Optional.some(blocker),dragConfig,dragState);};var delayDrop=DelayedFunction(stop$1,200);var dragApi={drop:stop$1,delayDrop:delayDrop.schedule,forceDrop:stop$1,move:function move(event){delayDrop.cancel();_move(component,dragConfig,dragState,MouseData,event);}};var blocker=createComponent(component,dragConfig.blockerClass,init$2(dragApi));var start=function start(){updateStartState(component);instigate(component,blocker);};start();})];};var schema$5=[].concat(schema$6,[output$1('dragger',{handlers:handlers(events$2)})]);var init$1=function init$1(dragApi){return derive$2([run$1(touchstart(),dragApi.forceDrop),run$1(touchend(),dragApi.drop),run$1(touchcancel(),dragApi.drop),run$1(touchmove(),function(comp,simulatedEvent){dragApi.move(simulatedEvent.event);})]);};var getDataFrom=function getDataFrom(touches){var touch=touches[0];return Optional.some(SugarPosition(touch.clientX,touch.clientY));};var getData=function getData(event){var raw=event.raw;var touches=raw.touches;return touches.length===1?getDataFrom(touches):Optional.none();};var getDelta=function getDelta(old,nu){return SugarPosition(nu.left-old.left,nu.top-old.top);};var TouchData=/*#__PURE__*/Object.freeze({__proto__:null,getData:getData,getDelta:getDelta});var events$1=function events$1(dragConfig,dragState,updateStartState){var blockerSingleton=value$2();var stopBlocking=function stopBlocking(component){stop(component,blockerSingleton.get(),dragConfig,dragState);blockerSingleton.clear();};return[run$1(touchstart(),function(component,simulatedEvent){simulatedEvent.stop();var stop=function stop(){return stopBlocking(component);};var dragApi={drop:stop,delayDrop:noop,forceDrop:stop,move:function move(event){_move(component,dragConfig,dragState,TouchData,event);}};var blocker=createComponent(component,dragConfig.blockerClass,init$1(dragApi));blockerSingleton.set(blocker);var start=function start(){updateStartState(component);instigate(component,blocker);};start();}),run$1(touchmove(),function(component,simulatedEvent){simulatedEvent.stop();_move(component,dragConfig,dragState,TouchData,simulatedEvent.event);}),run$1(touchend(),function(component,simulatedEvent){simulatedEvent.stop();stopBlocking(component);}),run$1(touchcancel(),stopBlocking)];};var schema$4=[].concat(schema$6,[output$1('dragger',{handlers:handlers(events$1)})]);var events=function events(dragConfig,dragState,updateStartState){return[].concat(_toConsumableArray(events$2(dragConfig,dragState,updateStartState)),_toConsumableArray(events$1(dragConfig,dragState,updateStartState)));};var schema$3=[].concat(schema$6,[output$1('dragger',{handlers:handlers(events)})]);var mouse=schema$5;var touch=schema$4;var mouseOrTouch=schema$3;var DraggingBranches=/*#__PURE__*/Object.freeze({__proto__:null,mouse:mouse,touch:touch,mouseOrTouch:mouseOrTouch});var init=function init(){var previous=Optional.none();var startData=Optional.none();var reset=function reset(){previous=Optional.none();startData=Optional.none();};var calculateDelta=function calculateDelta(mode,nu){var result=previous.map(function(old){return mode.getDelta(old,nu);});previous=Optional.some(nu);return result;};var update=function update(mode,dragEvent){return mode.getData(dragEvent).bind(function(nuData){return calculateDelta(mode,nuData);});};var setStartData=function setStartData(data){startData=Optional.some(data);};var getStartData=function getStartData(){return startData;};var readState=constant$1({});return nu$8({readState:readState,reset:reset,update:update,getStartData:getStartData,setStartData:setStartData});};var DragState=/*#__PURE__*/Object.freeze({__proto__:null,init:init});var Dragging=createModes({branchKey:'mode',branches:DraggingBranches,name:'dragging',active:{events:function events(dragConfig,dragState){var dragger=dragConfig.dragger;return dragger.handlers(dragConfig,dragState);}},extra:{snap:function snap(sConfig){return{sensor:sConfig.sensor,range:sConfig.range,output:sConfig.output,extra:Optional.from(sConfig.extra)};}},state:DragState,apis:DraggingApis});var snapWidth=40;var snapOffset=snapWidth/2;var calcSnap=function calcSnap(selectorOpt,td,x,y,width,height){return selectorOpt.fold(function(){return Dragging.snap({sensor:absolute(x-snapOffset,y-snapOffset),range:SugarPosition(width,height),output:absolute(Optional.some(x),Optional.some(y)),extra:{td:td}});},function(selectorHandle){var sensorLeft=x-snapOffset;var sensorTop=y-snapOffset;var sensorWidth=snapWidth;var sensorHeight=snapWidth;var rect=selectorHandle.element.dom.getBoundingClientRect();return Dragging.snap({sensor:absolute(sensorLeft,sensorTop),range:SugarPosition(sensorWidth,sensorHeight),output:absolute(Optional.some(x-rect.width/2),Optional.some(y-rect.height/2)),extra:{td:td}});});};var getSnapsConfig=function getSnapsConfig(getSnapPoints,cell,onChange){var isSameCell=function isSameCell(cellOpt,td){return cellOpt.exists(function(currentTd){return eq(currentTd,td);});};return{getSnapPoints:getSnapPoints,leftAttr:'data-drag-left',topAttr:'data-drag-top',onSensor:function onSensor(component,extra){var td=extra.td;if(!isSameCell(cell.get(),td)){cell.set(td);onChange(td);}},mustSnap:true};};var createSelector=function createSelector(snaps){return record(Button.sketch({dom:{tag:'div',classes:['tox-selector']},buttonBehaviours:derive$1([Dragging.config({mode:'mouseOrTouch',blockerClass:'blocker',snaps:snaps}),Unselecting.config({})]),eventOrder:{mousedown:['dragging','alloy.base.behaviour'],touchstart:['dragging','alloy.base.behaviour']}}));};var setup$4=function setup$4(editor,sink){var tlTds=Cell([]);var brTds=Cell([]);var isVisible=Cell(false);var startCell=value$2();var finishCell=value$2();var getTopLeftSnap=function getTopLeftSnap(td){var box=absolute$2(td);return calcSnap(memTopLeft.getOpt(sink),td,box.x,box.y,box.width,box.height);};var getTopLeftSnaps=function getTopLeftSnaps(){return map$2(tlTds.get(),function(td){return getTopLeftSnap(td);});};var getBottomRightSnap=function getBottomRightSnap(td){var box=absolute$2(td);return calcSnap(memBottomRight.getOpt(sink),td,box.right,box.bottom,box.width,box.height);};var getBottomRightSnaps=function getBottomRightSnaps(){return map$2(brTds.get(),function(td){return getBottomRightSnap(td);});};var topLeftSnaps=getSnapsConfig(getTopLeftSnaps,startCell,function(start){finishCell.get().each(function(finish){editor.dispatch('TableSelectorChange',{start:start,finish:finish});});});var bottomRightSnaps=getSnapsConfig(getBottomRightSnaps,finishCell,function(finish){startCell.get().each(function(start){editor.dispatch('TableSelectorChange',{start:start,finish:finish});});});var memTopLeft=createSelector(topLeftSnaps);var memBottomRight=createSelector(bottomRightSnaps);var topLeft=build$1(memTopLeft.asSpec());var bottomRight=build$1(memBottomRight.asSpec());var showOrHideHandle=function showOrHideHandle(selector,cell,isAbove,isBelow){var cellRect=cell.dom.getBoundingClientRect();remove$6(selector.element,'display');var viewportHeight=defaultView(SugarElement.fromDom(editor.getBody())).dom.innerHeight;var aboveViewport=isAbove(cellRect);var belowViewport=isBelow(cellRect,viewportHeight);if(aboveViewport||belowViewport){set$8(selector.element,'display','none');}};var snapTo=function snapTo(selector,cell,getSnapConfig,pos){var snap=getSnapConfig(cell);Dragging.snapTo(selector,snap);var isAbove=function isAbove(rect){return rect[pos]<0;};var isBelow=function isBelow(rect,viewportHeight){return rect[pos]>viewportHeight;};showOrHideHandle(selector,cell,isAbove,isBelow);};var snapTopLeft=function snapTopLeft(cell){return snapTo(topLeft,cell,getTopLeftSnap,'top');};var snapLastTopLeft=function snapLastTopLeft(){return startCell.get().each(snapTopLeft);};var snapBottomRight=function snapBottomRight(cell){return snapTo(bottomRight,cell,getBottomRightSnap,'bottom');};var snapLastBottomRight=function snapLastBottomRight(){return finishCell.get().each(snapBottomRight);};if(detect$1().deviceType.isTouch()){editor.on('TableSelectionChange',function(e){if(!isVisible.get()){attach(sink,topLeft);attach(sink,bottomRight);isVisible.set(true);}startCell.set(e.start);finishCell.set(e.finish);e.otherCells.each(function(otherCells){tlTds.set(otherCells.upOrLeftCells);brTds.set(otherCells.downOrRightCells);snapTopLeft(e.start);snapBottomRight(e.finish);});});editor.on('ResizeEditor ResizeWindow ScrollContent',function(){snapLastTopLeft();snapLastBottomRight();});editor.on('TableSelectionClear',function(){if(isVisible.get()){detach(topLeft);detach(bottomRight);isVisible.set(false);}startCell.clear();finishCell.clear();});}};var Logo="<svg width=\"50px\" height=\"16px\" viewBox=\"0 0 50 16\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.143 0c2.608.015 5.186 2.178 5.186 5.331 0 0 .077 3.812-.084 4.87-.361 2.41-2.164 4.074-4.65 4.496-1.453.284-2.523.49-3.212.623-.373.071-.634.122-.785.152-.184.038-.997.145-1.35.145-2.732 0-5.21-2.04-5.248-5.33 0 0 0-3.514.03-4.442.093-2.4 1.758-4.342 4.926-4.963 0 0 3.875-.752 4.036-.782.368-.07.775-.1 1.15-.1Zm1.826 2.8L5.83 3.989v2.393l-2.455.475v5.968l6.137-1.189V9.243l2.456-.476V2.8ZM5.83 6.382l3.682-.713v3.574l-3.682.713V6.382Zm27.173-1.64-.084-1.066h-2.226v9.132h2.456V7.743c-.008-1.151.998-2.064 2.149-2.072 1.15-.008 1.987.92 1.995 2.072v5.065h2.455V7.359c-.015-2.18-1.657-3.929-3.837-3.913a3.993 3.993 0 0 0-2.908 1.296Zm-6.3-4.266L29.16 0v2.387l-2.456.475V.476Zm0 3.2v9.132h2.456V3.676h-2.456Zm18.179 11.787L49.11 3.676H46.58l-1.612 4.527-.46 1.382-.384-1.382-1.611-4.527H39.98l3.3 9.132L42.15 16l2.732-.537ZM22.867 9.738c0 .752.568 1.075.921 1.075.353 0 .668-.047.998-.154l.537 1.765c-.23.154-.92.537-2.225.537-1.305 0-2.655-.997-2.686-2.686a136.877 136.877 0 0 1 0-4.374H18.8V3.676h1.612v-1.98l2.455-.476v2.456h2.302V5.9h-2.302v3.837Z\"/>\n</svg>\n";var isHidden=function isHidden(elm){return elm.nodeName==='BR'||!!elm.getAttribute('data-mce-bogus')||elm.getAttribute('data-mce-type')==='bookmark';};var renderElementPath=function renderElementPath(editor,settings,providersBackstage){var _a;var delimiter=(_a=settings.delimiter)!==null&&_a!==void 0?_a:"\u203A";var renderElement=function renderElement(name,element,index){return Button.sketch({dom:{tag:'div',classes:['tox-statusbar__path-item'],attributes:{'data-index':index,'aria-level':index+1}},components:[text$1(name)],action:function action(_btn){editor.focus();editor.selection.select(element);editor.nodeChanged();},buttonBehaviours:derive$1([DisablingConfigs.button(providersBackstage.isDisabled),receivingConfig()])});};var renderDivider=function renderDivider(){return{dom:{tag:'div',classes:['tox-statusbar__path-divider'],attributes:{'aria-hidden':true}},components:[text$1(" ".concat(delimiter," "))]};};var renderPathData=function renderPathData(data){return foldl(data,function(acc,path,index){var element=renderElement(path.name,path.element,index);if(index===0){return acc.concat([element]);}else{return acc.concat([renderDivider(),element]);}},[]);};var updatePath=function updatePath(parents){var newPath=[];var i=parents.length;while(i-->0){var _parent=parents[i];if(_parent.nodeType===1&&!isHidden(_parent)){var args=editor.dispatch('ResolveName',{name:_parent.nodeName.toLowerCase(),target:_parent});if(!args.isDefaultPrevented()){newPath.push({name:args.name,element:_parent});}if(args.isPropagationStopped()){break;}}}return newPath;};return{dom:{tag:'div',classes:['tox-statusbar__path'],attributes:{role:'navigation'}},behaviours:derive$1([Keying.config({mode:'flow',selector:'div[role=button]'}),Disabling.config({disabled:providersBackstage.isDisabled}),receivingConfig(),Tabstopping.config({}),Replacing.config({}),config('elementPathEvents',[runOnAttached(function(comp,_e){editor.shortcuts.add('alt+F11','focus statusbar elementpath',function(){return Keying.focusIn(comp);});editor.on('NodeChange',function(e){var newPath=updatePath(e.parents);var newChildren=newPath.length>0?renderPathData(newPath):[];Replacing.set(comp,newChildren);});})])]),components:[]};};var ResizeTypes;(function(ResizeTypes){ResizeTypes[ResizeTypes['None']=0]='None';ResizeTypes[ResizeTypes['Both']=1]='Both';ResizeTypes[ResizeTypes['Vertical']=2]='Vertical';})(ResizeTypes||(ResizeTypes={}));var getDimensions=function getDimensions(editor,deltas,resizeType,originalHeight,originalWidth){var dimensions={};dimensions.height=calcCappedSize(originalHeight+deltas.top,getMinHeightOption(editor),getMaxHeightOption(editor));if(resizeType===ResizeTypes.Both){dimensions.width=calcCappedSize(originalWidth+deltas.left,getMinWidthOption(editor),getMaxWidthOption(editor));}return dimensions;};var resize=function resize(editor,deltas,resizeType){var container=SugarElement.fromDom(editor.getContainer());var dimensions=getDimensions(editor,deltas,resizeType,get$d(container),get$c(container));each(dimensions,function(val,dim){return set$8(container,dim,numToPx(val));});fireResizeEditor(editor);};var getResizeType=function getResizeType(editor){var resize=getResize(editor);if(resize===false){return ResizeTypes.None;}else if(resize==='both'){return ResizeTypes.Both;}else{return ResizeTypes.Vertical;}};var keyboardHandler=function keyboardHandler(editor,resizeType,x,y){var scale=20;var delta=SugarPosition(x*scale,y*scale);resize(editor,delta,resizeType);return Optional.some(true);};var renderResizeHandler=function renderResizeHandler(editor,providersBackstage){var resizeType=getResizeType(editor);if(resizeType===ResizeTypes.None){return Optional.none();}return Optional.some(render$3('resize-handle',{tag:'div',classes:['tox-statusbar__resize-handle'],attributes:{title:providersBackstage.translate('Resize')},behaviours:[Dragging.config({mode:'mouse',repositionTarget:false,onDrag:function onDrag(_comp,_target,delta){return resize(editor,delta,resizeType);},blockerClass:'tox-blocker'}),Keying.config({mode:'special',onLeft:function onLeft(){return keyboardHandler(editor,resizeType,-1,0);},onRight:function onRight(){return keyboardHandler(editor,resizeType,1,0);},onUp:function onUp(){return keyboardHandler(editor,resizeType,0,-1);},onDown:function onDown(){return keyboardHandler(editor,resizeType,0,1);}}),Tabstopping.config({}),Focusing.config({})]},providersBackstage.icons));};var renderWordCount=function renderWordCount(editor,providersBackstage){var replaceCountText=function replaceCountText(comp,count,mode){return Replacing.set(comp,[text$1(providersBackstage.translate(['{0} '+mode,count[mode]]))]);};return Button.sketch({dom:{tag:'button',classes:['tox-statusbar__wordcount']},components:[],buttonBehaviours:derive$1([DisablingConfigs.button(providersBackstage.isDisabled),receivingConfig(),Tabstopping.config({}),Replacing.config({}),Representing.config({store:{mode:'memory',initialValue:{mode:'words',count:{words:0,characters:0}}}}),config('wordcount-events',[runOnExecute$1(function(comp){var currentVal=Representing.getValue(comp);var newMode=currentVal.mode==='words'?'characters':'words';Representing.setValue(comp,{mode:newMode,count:currentVal.count});replaceCountText(comp,currentVal.count,newMode);}),runOnAttached(function(comp){editor.on('wordCountUpdate',function(e){var _Representing$getValu=Representing.getValue(comp),mode=_Representing$getValu.mode;Representing.setValue(comp,{mode:mode,count:e.wordCount});replaceCountText(comp,e.wordCount,mode);});})])]),eventOrder:_defineProperty({},execute$5(),['disabling','alloy.base.behaviour','wordcount-events'])});};var renderStatusbar=function renderStatusbar(editor,providersBackstage){var renderBranding=function renderBranding(){return{dom:{tag:'span',classes:['tox-statusbar__branding']},components:[{dom:{tag:'a',attributes:{'href':'https://www.tiny.cloud/powered-by-tiny?utm_campaign=editor_referral&utm_medium=poweredby&utm_source=tinymce&utm_content=v6','rel':'noopener','target':'_blank','aria-label':global$8.translate(['Powered by {0}','Tiny'])},innerHtml:Logo.trim()},behaviours:derive$1([Focusing.config({})])}]};};var getTextComponents=function getTextComponents(){var components=[];if(useElementPath(editor)){components.push(renderElementPath(editor,{},providersBackstage));}if(editor.hasPlugin('wordcount')){components.push(renderWordCount(editor,providersBackstage));}if(useBranding(editor)){components.push(renderBranding());}if(components.length>0){return[{dom:{tag:'div',classes:['tox-statusbar__text-container']},components:components}];}return[];};var getComponents=function getComponents(){var components=getTextComponents();var resizeHandler=renderResizeHandler(editor,providersBackstage);return components.concat(resizeHandler.toArray());};return{dom:{tag:'div',classes:['tox-statusbar']},components:getComponents()};};var getLazyMothership=function getLazyMothership(singleton){return singleton.get().getOrDie('UI has not been rendered');};var setup$3=function setup$3(editor){var isInline=editor.inline;var mode=isInline?Inline:Iframe;var header=isStickyToolbar(editor)?StickyHeader:StaticHeader;var lazySink=value$2();var lazyOuterContainer=value$2();var lazyMothership=value$2();var lazyUiMothership=value$2();var platform=detect$1();var isTouch=platform.deviceType.isTouch();var touchPlatformClass='tox-platform-touch';var deviceClasses=isTouch?[touchPlatformClass]:[];var isToolbarBottom=isToolbarLocationBottom(editor);var toolbarMode=getToolbarMode(editor);var memAnchorBar=record({dom:{tag:'div',classes:['tox-anchorbar']}});var _lazyHeader=function lazyHeader(){return lazyOuterContainer.get().bind(OuterContainer.getHeader);};var lazySinkResult=function lazySinkResult(){return Result.fromOption(lazySink.get(),'UI has not been rendered');};var lazyAnchorBar=function lazyAnchorBar(){return lazyOuterContainer.get().bind(function(container){return memAnchorBar.getOpt(container);}).getOrDie('Could not find a anchor bar element');};var lazyToolbar=function lazyToolbar(){return lazyOuterContainer.get().bind(function(container){return OuterContainer.getToolbar(container);}).getOrDie('Could not find more toolbar element');};var lazyThrobber=function lazyThrobber(){return lazyOuterContainer.get().bind(function(container){return OuterContainer.getThrobber(container);}).getOrDie('Could not find throbber element');};var backstage=init$7(lazySinkResult,editor,lazyAnchorBar);var makeHeaderPart=function makeHeaderPart(){var verticalDirAttributes={attributes:_defineProperty({},Attribute,isToolbarBottom?AttributeValue.BottomToTop:AttributeValue.TopToBottom)};var partMenubar=OuterContainer.parts.menubar({dom:{tag:'div',classes:['tox-menubar']},backstage:backstage,onEscape:function onEscape(){editor.focus();}});var partToolbar=OuterContainer.parts.toolbar(_objectSpread({dom:{tag:'div',classes:['tox-toolbar']},getSink:lazySinkResult,providers:backstage.shared.providers,onEscape:function onEscape(){editor.focus();},type:toolbarMode,lazyToolbar:lazyToolbar,lazyHeader:function lazyHeader(){return _lazyHeader().getOrDie('Could not find header element');}},verticalDirAttributes));var partMultipleToolbar=OuterContainer.parts['multiple-toolbar']({dom:{tag:'div',classes:['tox-toolbar-overlord']},providers:backstage.shared.providers,onEscape:function onEscape(){editor.focus();},type:toolbarMode});var hasMultipleToolbar=isMultipleToolbars(editor);var hasToolbar=isToolbarEnabled(editor);var hasMenubar=isMenubarEnabled(editor);var getPartToolbar=function getPartToolbar(){if(hasMultipleToolbar){return[partMultipleToolbar];}else if(hasToolbar){return[partToolbar];}else{return[];}};return OuterContainer.parts.header({dom:_objectSpread({tag:'div',classes:['tox-editor-header']},verticalDirAttributes),components:flatten([hasMenubar?[partMenubar]:[],getPartToolbar(),useFixedContainer(editor)?[]:[memAnchorBar.asSpec()]]),sticky:isStickyToolbar(editor),editor:editor,sharedBackstage:backstage.shared});};var makeSidebarDefinition=function makeSidebarDefinition(){var partSocket=OuterContainer.parts.socket({dom:{tag:'div',classes:['tox-edit-area']}});var partSidebar=OuterContainer.parts.sidebar({dom:{tag:'div',classes:['tox-sidebar']}});return{dom:{tag:'div',classes:['tox-sidebar-wrap']},components:[partSocket,partSidebar]};};var renderSink=function renderSink(){var uiContainer=getUiContainer(editor);var isGridUiContainer=eq(body(),uiContainer)&&get$e(uiContainer,'display')==='grid';var sinkSpec={dom:{tag:'div',classes:['tox','tox-silver-sink','tox-tinymce-aux'].concat(deviceClasses),attributes:_objectSpread({},global$8.isRtl()?{dir:'rtl'}:{})},behaviours:derive$1([Positioning.config({useFixed:function useFixed(){return header.isDocked(_lazyHeader);}})])};var reactiveWidthSpec={dom:{styles:{width:document.body.clientWidth+'px'}},events:derive$2([run$1(windowResize(),function(comp){set$8(comp.element,'width',document.body.clientWidth+'px');})])};var sink=build$1(deepMerge(sinkSpec,isGridUiContainer?reactiveWidthSpec:{}));var uiMothership=takeover(sink);lazySink.set(sink);lazyUiMothership.set(uiMothership);return{sink:sink,uiMothership:uiMothership};};var renderContainer=function renderContainer(){var partHeader=makeHeaderPart();var sidebarContainer=makeSidebarDefinition();var partThrobber=OuterContainer.parts.throbber({dom:{tag:'div',classes:['tox-throbber']},backstage:backstage});var statusbar=useStatusBar(editor)&&!isInline?Optional.some(renderStatusbar(editor,backstage.shared.providers)):Optional.none();var editorComponents=flatten([isToolbarBottom?[]:[partHeader],isInline?[]:[sidebarContainer],isToolbarBottom?[partHeader]:[]]);var editorContainer={dom:{tag:'div',classes:['tox-editor-container']},components:editorComponents};var containerComponents=flatten([[editorContainer],isInline?[]:statusbar.toArray(),[partThrobber]]);var isHidden=isDistractionFree(editor);var attributes=_objectSpread({role:'application'},global$8.isRtl()?{dir:'rtl'}:{},{},isHidden?{'aria-hidden':'true'}:{});var outerContainer=build$1(OuterContainer.sketch({dom:{tag:'div',classes:['tox','tox-tinymce'].concat(isInline?['tox-tinymce-inline']:[]).concat(isToolbarBottom?['tox-tinymce--toolbar-bottom']:[]).concat(deviceClasses),styles:_objectSpread({visibility:'hidden'},isHidden?{opacity:'0',border:'0'}:{}),attributes:attributes},components:containerComponents,behaviours:derive$1([receivingConfig(),Disabling.config({disableClass:'tox-tinymce--disabled'}),Keying.config({mode:'cyclic',selector:'.tox-menubar, .tox-toolbar, .tox-toolbar__primary, .tox-toolbar__overflow--open, .tox-sidebar__overflow--open, .tox-statusbar__path, .tox-statusbar__wordcount, .tox-statusbar__branding a, .tox-statusbar__resize-handle'})])}));var mothership=takeover(outerContainer);lazyOuterContainer.set(outerContainer);lazyMothership.set(mothership);return{mothership:mothership,outerContainer:outerContainer};};var setEditorSize=function setEditorSize(outerContainer){var parsedHeight=numToPx(getHeightWithFallback(editor));var parsedWidth=numToPx(getWidthWithFallback(editor));if(!editor.inline){if(isValidValue('div','width',parsedWidth)){set$8(outerContainer.element,'width',parsedWidth);}if(isValidValue('div','height',parsedHeight)){set$8(outerContainer.element,'height',parsedHeight);}else{set$8(outerContainer.element,'height','400px');}}return parsedHeight;};var setupShortcutsAndCommands=function setupShortcutsAndCommands(outerContainer){editor.addShortcut('alt+F9','focus menubar',function(){OuterContainer.focusMenubar(outerContainer);});editor.addShortcut('alt+F10','focus toolbar',function(){OuterContainer.focusToolbar(outerContainer);});editor.addCommand('ToggleToolbarDrawer',function(){OuterContainer.toggleToolbarDrawer(outerContainer);});editor.addQueryStateHandler('ToggleToolbarDrawer',function(){return OuterContainer.isToolbarDrawerToggled(outerContainer);});};var renderUI=function renderUI(){var _renderContainer=renderContainer(),mothership=_renderContainer.mothership,outerContainer=_renderContainer.outerContainer;var _renderSink=renderSink(),uiMothership=_renderSink.uiMothership,sink=_renderSink.sink;map$1(getToolbarGroups(editor),function(toolbarGroupButtonConfig,name){editor.ui.registry.addGroupToolbarButton(name,toolbarGroupButtonConfig);});var _editor$ui$registry$g3=editor.ui.registry.getAll(),buttons=_editor$ui$registry$g3.buttons,menuItems=_editor$ui$registry$g3.menuItems,contextToolbars=_editor$ui$registry$g3.contextToolbars,sidebars=_editor$ui$registry$g3.sidebars;var toolbarOpt=getMultipleToolbarsOption(editor);var rawUiConfig={menuItems:menuItems,menus:getMenus(editor),menubar:getMenubar(editor),toolbar:toolbarOpt.getOrThunk(function(){return getToolbar(editor);}),allowToolbarGroups:toolbarMode===ToolbarMode$1.floating,buttons:buttons,sidebar:sidebars};setupShortcutsAndCommands(outerContainer);setup$b(editor,mothership,uiMothership);header.setup(editor,backstage.shared,_lazyHeader);setup$6(editor,backstage);setup$5(editor,lazySinkResult,backstage);setup$8(editor);setup$7(editor,lazyThrobber,backstage.shared);register$9(editor,contextToolbars,sink,{backstage:backstage});setup$4(editor,sink);var elm=editor.getElement();var height=setEditorSize(outerContainer);var uiComponents={mothership:mothership,uiMothership:uiMothership,outerContainer:outerContainer,sink:sink};var args={targetNode:elm,height:height};return mode.render(editor,uiComponents,rawUiConfig,backstage,args);};var getMothership=function getMothership(){return getLazyMothership(lazyMothership);};var getUiMothership=function getUiMothership(){return getLazyMothership(lazyUiMothership);};return{getMothership:getMothership,getUiMothership:getUiMothership,backstage:backstage,renderUI:renderUI};};var describedBy=function describedBy(describedElement,describeElement){var describeId=Optional.from(get$f(describedElement,'id')).fold(function(){var id=generate$6('dialog-describe');set$9(describeElement,'id',id);return id;},identity);set$9(describedElement,'aria-describedby',describeId);};var labelledBy=function labelledBy(labelledElement,labelElement){var labelId=getOpt(labelledElement,'id').fold(function(){var id=generate$6('dialog-label');set$9(labelElement,'id',id);return id;},identity);set$9(labelledElement,'aria-labelledby',labelId);};var schema$2=constant$1([required$1('lazySink'),option$3('dragBlockClass'),defaultedFunction('getBounds',win),defaulted('useTabstopAt',always),defaulted('eventOrder',{}),field('modalBehaviours',[Keying]),onKeyboardHandler('onExecute'),onStrictKeyboardHandler('onEscape')]);var basic={sketch:identity};var parts$2=constant$1([optional({name:'draghandle',overrides:function overrides(detail,spec){return{behaviours:derive$1([Dragging.config({mode:'mouse',getTarget:function getTarget(handle){return ancestor(handle,'[role="dialog"]').getOr(handle);},blockerClass:detail.dragBlockClass.getOrDie(new Error('The drag blocker class was not specified for a dialog with a drag handle: \n'+JSON.stringify(spec,null,2)).message),getBounds:detail.getDragBounds})])};}}),required({schema:[required$1('dom')],name:'title'}),required({factory:basic,schema:[required$1('dom')],name:'close'}),required({factory:basic,schema:[required$1('dom')],name:'body'}),optional({factory:basic,schema:[required$1('dom')],name:'footer'}),external({factory:{sketch:function sketch(spec,detail){return _objectSpread({},spec,{dom:detail.dom,components:detail.components});}},schema:[defaulted('dom',{tag:'div',styles:{position:'fixed',left:'0px',top:'0px',right:'0px',bottom:'0px'}}),defaulted('components',[])],name:'blocker'})]);var factory$4=function factory$4(detail,components,spec,externals){var dialogComp=value$2();var showDialog=function showDialog(dialog){dialogComp.set(dialog);var sink=detail.lazySink(dialog).getOrDie();var externalBlocker=externals.blocker();var blocker=sink.getSystem().build(_objectSpread({},externalBlocker,{components:externalBlocker.components.concat([premade(dialog)]),behaviours:derive$1([Focusing.config({}),config('dialog-blocker-events',[runOnSource(focusin(),function(){Keying.focusIn(dialog);})])])}));attach(sink,blocker);Keying.focusIn(dialog);};var hideDialog=function hideDialog(dialog){dialogComp.clear();parent(dialog.element).each(function(blockerDom){dialog.getSystem().getByDom(blockerDom).each(function(blocker){detach(blocker);});});};var getDialogBody=function getDialogBody(dialog){return getPartOrDie(dialog,detail,'body');};var getDialogFooter=function getDialogFooter(dialog){return getPartOrDie(dialog,detail,'footer');};var setBusy=function setBusy(dialog,getBusySpec){Blocking.block(dialog,getBusySpec);};var setIdle=function setIdle(dialog){Blocking.unblock(dialog);};var modalEventsId=generate$6('modal-events');var eventOrder=_objectSpread({},detail.eventOrder,_defineProperty({},attachedToDom(),[modalEventsId].concat(detail.eventOrder['alloy.system.attached']||[])));return{uid:detail.uid,dom:detail.dom,components:components,apis:{show:showDialog,hide:hideDialog,getBody:getDialogBody,getFooter:getDialogFooter,setIdle:setIdle,setBusy:setBusy},eventOrder:eventOrder,domModification:{attributes:{'role':'dialog','aria-modal':'true'}},behaviours:augment(detail.modalBehaviours,[Replacing.config({}),Keying.config({mode:'cyclic',onEnter:detail.onExecute,onEscape:detail.onEscape,useTabstopAt:detail.useTabstopAt}),Blocking.config({getRoot:dialogComp.get}),config(modalEventsId,[runOnAttached(function(c){labelledBy(c.element,getPartOrDie(c,detail,'title').element);describedBy(c.element,getPartOrDie(c,detail,'body').element);})])])};};var ModalDialog=composite({name:'ModalDialog',configFields:schema$2(),partFields:parts$2(),factory:factory$4,apis:{show:function show(apis,dialog){apis.show(dialog);},hide:function hide(apis,dialog){apis.hide(dialog);},getBody:function getBody(apis,dialog){return apis.getBody(dialog);},getFooter:function getFooter(apis,dialog){return apis.getFooter(dialog);},setBusy:function setBusy(apis,dialog,getBusySpec){apis.setBusy(dialog,getBusySpec);},setIdle:function setIdle(apis,dialog){apis.setIdle(dialog);}}});var dialogToggleMenuItemSchema=objOf([type,name$1].concat(commonMenuItemFields));var dialogToggleMenuItemDataProcessor=_boolean;var baseFooterButtonFields=[generatedName('button'),optionalIcon,defaultedStringEnum('align','end',['start','end']),primary,enabled,optionStringEnum('buttonType',['primary','secondary'])];var dialogFooterButtonFields=[].concat(baseFooterButtonFields,[text]);var normalFooterButtonFields=[requiredStringEnum('type',['submit','cancel','custom'])].concat(_toConsumableArray(dialogFooterButtonFields));var menuFooterButtonFields=[requiredStringEnum('type',['menu']),optionalText,optionalTooltip,optionalIcon,requiredArrayOf('items',dialogToggleMenuItemSchema)].concat(baseFooterButtonFields);var dialogFooterButtonSchema=choose$1('type',{submit:normalFooterButtonFields,cancel:normalFooterButtonFields,custom:normalFooterButtonFields,menu:menuFooterButtonFields});var alertBannerFields=[type,text,requiredStringEnum('level',['info','warn','error','success']),icon,defaulted('url','')];var alertBannerSchema=objOf(alertBannerFields);var createBarFields=function createBarFields(itemsField){return[type,itemsField];};var buttonFields=[type,text,enabled,generatedName('button'),optionalIcon,borderless,optionStringEnum('buttonType',['primary','secondary','toolbar']),primary];var buttonSchema=objOf(buttonFields);var formComponentFields=[type,name$1];var formComponentWithLabelFields=formComponentFields.concat([optionalLabel]);var checkboxFields=formComponentFields.concat([label,enabled]);var checkboxSchema=objOf(checkboxFields);var checkboxDataProcessor=_boolean;var collectionFields=formComponentWithLabelFields.concat([defaultedColumns('auto')]);var collectionSchema=objOf(collectionFields);var collectionDataProcessor=arrOfObj([value$1,text,icon]);var colorInputFields=formComponentWithLabelFields;var colorInputSchema=objOf(colorInputFields);var colorInputDataProcessor=string;var colorPickerFields=formComponentWithLabelFields;var colorPickerSchema=objOf(colorPickerFields);var colorPickerDataProcessor=string;var customEditorFields=formComponentFields.concat([defaultedString('tag','textarea'),requiredString('scriptId'),requiredString('scriptUrl'),defaultedPostMsg('settings',undefined)]);var customEditorFieldsOld=formComponentFields.concat([defaultedString('tag','textarea'),requiredFunction('init')]);var customEditorSchema=valueOf(function(v){return asRaw('customeditor.old',objOfOnly(customEditorFieldsOld),v).orThunk(function(){return asRaw('customeditor.new',objOfOnly(customEditorFields),v);});});var customEditorDataProcessor=string;var dropZoneFields=formComponentWithLabelFields;var dropZoneSchema=objOf(dropZoneFields);var dropZoneDataProcessor=arrOfVal();var createGridFields=function createGridFields(itemsField){return[type,requiredNumber('columns'),itemsField];};var htmlPanelFields=[type,requiredString('html'),defaultedStringEnum('presets','presentation',['presentation','document'])];var htmlPanelSchema=objOf(htmlPanelFields);var iframeFields=formComponentWithLabelFields.concat([defaultedBoolean('sandboxed',true),defaultedBoolean('transparent',true)]);var iframeSchema=objOf(iframeFields);var iframeDataProcessor=string;var imagePreviewSchema=objOf(formComponentFields.concat([optionString('height')]));var imagePreviewDataProcessor=objOf([requiredString('url'),optionNumber('zoom'),optionNumber('cachedWidth'),optionNumber('cachedHeight')]);var inputFields=formComponentWithLabelFields.concat([optionString('inputMode'),optionString('placeholder'),defaultedBoolean('maximized',false),enabled]);var inputSchema=objOf(inputFields);var inputDataProcessor=string;var createLabelFields=function createLabelFields(itemsField){return[type,label,itemsField];};var listBoxSingleItemFields=[text,value$1];var listBoxNestedItemFields=[text,requiredArrayOf('items',thunkOf('items',function(){return listBoxItemSchema;}))];var listBoxItemSchema=oneOf([objOf(listBoxSingleItemFields),objOf(listBoxNestedItemFields)]);var listBoxFields=formComponentWithLabelFields.concat([requiredArrayOf('items',listBoxItemSchema),enabled]);var listBoxSchema=objOf(listBoxFields);var listBoxDataProcessor=string;var selectBoxFields=formComponentWithLabelFields.concat([requiredArrayOfObj('items',[text,value$1]),defaultedNumber('size',1),enabled]);var selectBoxSchema=objOf(selectBoxFields);var selectBoxDataProcessor=string;var sizeInputFields=formComponentWithLabelFields.concat([defaultedBoolean('constrain',true),enabled]);var sizeInputSchema=objOf(sizeInputFields);var sizeInputDataProcessor=objOf([requiredString('width'),requiredString('height')]);var sliderFields=formComponentFields.concat([label,defaultedNumber('min',0),defaultedNumber('max',0)]);var sliderSchema=objOf(sliderFields);var sliderInputDataProcessor=number;var tableFields=[type,requiredArrayOf('header',string),requiredArrayOf('cells',arrOf(string))];var tableSchema=objOf(tableFields);var textAreaFields=formComponentWithLabelFields.concat([optionString('placeholder'),defaultedBoolean('maximized',false),enabled]);var textAreaSchema=objOf(textAreaFields);var textAreaDataProcessor=string;var urlInputFields=formComponentWithLabelFields.concat([defaultedStringEnum('filetype','file',['image','media','file']),enabled]);var urlInputSchema=objOf(urlInputFields);var urlInputDataProcessor=objOf([value$1,defaultedMeta]);var createItemsField=function createItemsField(name){return field$1('items','items',required$2(),arrOf(valueOf(function(v){return asRaw("Checking item of ".concat(name),itemSchema,v).fold(function(sErr){return Result.error(formatError(sErr));},function(passValue){return Result.value(passValue);});})));};var itemSchema=valueThunk(function(){return choose$2('type',{alertbanner:alertBannerSchema,bar:objOf(createBarFields(createItemsField('bar'))),button:buttonSchema,checkbox:checkboxSchema,colorinput:colorInputSchema,colorpicker:colorPickerSchema,dropzone:dropZoneSchema,grid:objOf(createGridFields(createItemsField('grid'))),iframe:iframeSchema,input:inputSchema,listbox:listBoxSchema,selectbox:selectBoxSchema,sizeinput:sizeInputSchema,slider:sliderSchema,textarea:textAreaSchema,urlinput:urlInputSchema,customeditor:customEditorSchema,htmlpanel:htmlPanelSchema,imagepreview:imagePreviewSchema,collection:collectionSchema,label:objOf(createLabelFields(createItemsField('label'))),table:tableSchema,panel:panelSchema});});var panelFields=[type,defaulted('classes',[]),requiredArrayOf('items',itemSchema)];var panelSchema=objOf(panelFields);var tabFields=[generatedName('tab'),title,requiredArrayOf('items',itemSchema)];var tabPanelFields=[type,requiredArrayOfObj('tabs',tabFields)];var tabPanelSchema=objOf(tabPanelFields);var dialogButtonFields=dialogFooterButtonFields;var dialogButtonSchema=dialogFooterButtonSchema;var dialogSchema=objOf([requiredString('title'),requiredOf('body',choose$2('type',{panel:panelSchema,tabpanel:tabPanelSchema})),defaultedString('size','normal'),requiredArrayOf('buttons',dialogButtonSchema),defaulted('initialData',{}),defaultedFunction('onAction',noop),defaultedFunction('onChange',noop),defaultedFunction('onSubmit',noop),defaultedFunction('onClose',noop),defaultedFunction('onCancel',noop),defaultedFunction('onTabChange',noop)]);var createDialog=function createDialog(spec){return asRaw('dialog',dialogSchema,spec);};var urlDialogButtonSchema=objOf([requiredStringEnum('type',['cancel','custom'])].concat(_toConsumableArray(dialogButtonFields)));var urlDialogSchema=objOf([requiredString('title'),requiredString('url'),optionNumber('height'),optionNumber('width'),optionArrayOf('buttons',urlDialogButtonSchema),defaultedFunction('onAction',noop),defaultedFunction('onCancel',noop),defaultedFunction('onClose',noop),defaultedFunction('onMessage',noop)]);var createUrlDialog=function createUrlDialog(spec){return asRaw('dialog',urlDialogSchema,spec);};var getAllObjects=function getAllObjects(obj){if(isObject(obj)){return[obj].concat(bind$3(values(obj),getAllObjects));}else if(isArray(obj)){return bind$3(obj,getAllObjects);}else{return[];}};var isNamedItem=function isNamedItem(obj){return isString(obj.type)&&isString(obj.name);};var dataProcessors={checkbox:checkboxDataProcessor,colorinput:colorInputDataProcessor,colorpicker:colorPickerDataProcessor,dropzone:dropZoneDataProcessor,input:inputDataProcessor,iframe:iframeDataProcessor,imagepreview:imagePreviewDataProcessor,selectbox:selectBoxDataProcessor,sizeinput:sizeInputDataProcessor,slider:sliderInputDataProcessor,listbox:listBoxDataProcessor,size:sizeInputDataProcessor,textarea:textAreaDataProcessor,urlinput:urlInputDataProcessor,customeditor:customEditorDataProcessor,collection:collectionDataProcessor,togglemenuitem:dialogToggleMenuItemDataProcessor};var getDataProcessor=function getDataProcessor(item){return Optional.from(dataProcessors[item.type]);};var getNamedItems=function getNamedItems(structure){return filter$2(getAllObjects(structure),isNamedItem);};var createDataValidator=function createDataValidator(structure){var namedItems=getNamedItems(structure);var fields=bind$3(namedItems,function(item){return getDataProcessor(item).fold(function(){return[];},function(schema){return[requiredOf(item.name,schema)];});});return objOf(fields);};var extract=function extract(structure){var internalDialog=getOrDie(createDialog(structure));var dataValidator=createDataValidator(structure);var initialData=structure.initialData;return{internalDialog:internalDialog,dataValidator:dataValidator,initialData:initialData};};var DialogManager={open:function open(factory,structure){var extraction=extract(structure);return factory(extraction.internalDialog,extraction.initialData,extraction.dataValidator);},openUrl:function openUrl(factory,structure){var internalDialog=getOrDie(createUrlDialog(structure));return factory(internalDialog);},redial:function redial(structure){return extract(structure);}};var toValidValues=function toValidValues(values){var errors=[];var result={};each(values,function(value,name){value.fold(function(){errors.push(name);},function(v){result[name]=v;});});return errors.length>0?Result.error(errors):Result.value(result);};var renderBodyPanel=function renderBodyPanel(spec,dialogData,backstage){var memForm=record(Form.sketch(function(parts){return{dom:{tag:'div',classes:['tox-form'].concat(spec.classes)},components:map$2(spec.items,function(item){return interpretInForm(parts,item,dialogData,backstage);})};}));return{dom:{tag:'div',classes:['tox-dialog__body']},components:[{dom:{tag:'div',classes:['tox-dialog__body-content']},components:[memForm.asSpec()]}],behaviours:derive$1([Keying.config({mode:'acyclic',useTabstopAt:not(isPseudoStop)}),ComposingConfigs.memento(memForm),RepresentingConfigs.memento(memForm,{postprocess:function postprocess(formValue){return toValidValues(formValue).fold(function(err){console.error(err);return{};},identity);}})])};};var factory$3=function factory$3(detail,_spec){return{uid:detail.uid,dom:detail.dom,components:detail.components,events:events$a(detail.action),behaviours:augment(detail.tabButtonBehaviours,[Focusing.config({}),Keying.config({mode:'execution',useSpace:true,useEnter:true}),Representing.config({store:{mode:'memory',initialValue:detail.value}})]),domModification:detail.domModification};};var TabButton=single({name:'TabButton',configFields:[defaulted('uid',undefined),required$1('value'),field$1('dom','dom',mergeWithThunk(function(){return{attributes:{'role':'tab','id':generate$6('aria'),'aria-selected':'false'}};}),anyValue()),option$3('action'),defaulted('domModification',{}),field('tabButtonBehaviours',[Focusing,Keying,Representing]),required$1('view')],factory:factory$3});var schema$1=constant$1([required$1('tabs'),required$1('dom'),defaulted('clickToDismiss',false),field('tabbarBehaviours',[Highlighting,Keying]),markers$1(['tabClass','selectedClass'])]);var tabsPart=group({factory:TabButton,name:'tabs',unit:'tab',overrides:function overrides(barDetail){var dismissTab$1=function dismissTab$1(tabbar,button){Highlighting.dehighlight(tabbar,button);emitWith(tabbar,dismissTab(),{tabbar:tabbar,button:button});};var changeTab$1=function changeTab$1(tabbar,button){Highlighting.highlight(tabbar,button);emitWith(tabbar,changeTab(),{tabbar:tabbar,button:button});};return{action:function action(button){var tabbar=button.getSystem().getByUid(barDetail.uid).getOrDie();var activeButton=Highlighting.isHighlighted(tabbar,button);var response=function(){if(activeButton&&barDetail.clickToDismiss){return dismissTab$1;}else if(!activeButton){return changeTab$1;}else{return noop;}}();response(tabbar,button);},domModification:{classes:[barDetail.markers.tabClass]}};}});var parts$1=constant$1([tabsPart]);var factory$2=function factory$2(detail,components,_spec,_externals){return{'uid':detail.uid,'dom':detail.dom,components:components,'debug.sketcher':'Tabbar','domModification':{attributes:{role:'tablist'}},'behaviours':augment(detail.tabbarBehaviours,[Highlighting.config({highlightClass:detail.markers.selectedClass,itemClass:detail.markers.tabClass,onHighlight:function onHighlight(tabbar,tab){set$9(tab.element,'aria-selected','true');},onDehighlight:function onDehighlight(tabbar,tab){set$9(tab.element,'aria-selected','false');}}),Keying.config({mode:'flow',getInitial:function getInitial(tabbar){return Highlighting.getHighlighted(tabbar).map(function(tab){return tab.element;});},selector:'.'+detail.markers.tabClass,executeOnMove:true})])};};var Tabbar=composite({name:'Tabbar',configFields:schema$1(),partFields:parts$1(),factory:factory$2});var factory$1=function factory$1(detail,_spec){return{uid:detail.uid,dom:detail.dom,behaviours:augment(detail.tabviewBehaviours,[Replacing.config({})]),domModification:{attributes:{role:'tabpanel'}}};};var Tabview=single({name:'Tabview',configFields:[field('tabviewBehaviours',[Replacing])],factory:factory$1});var schema=constant$1([defaulted('selectFirst',true),onHandler('onChangeTab'),onHandler('onDismissTab'),defaulted('tabs',[]),field('tabSectionBehaviours',[])]);var barPart=required({factory:Tabbar,schema:[required$1('dom'),requiredObjOf('markers',[required$1('tabClass'),required$1('selectedClass')])],name:'tabbar',defaults:function defaults(detail){return{tabs:detail.tabs};}});var viewPart=required({factory:Tabview,name:'tabview'});var parts=constant$1([barPart,viewPart]);var factory=function factory(detail,components,_spec,_externals){var changeTab$1=function changeTab$1(button){var tabValue=Representing.getValue(button);getPart(button,detail,'tabview').each(function(tabview){var tabWithValue=find$5(detail.tabs,function(t){return t.value===tabValue;});tabWithValue.each(function(tabData){var panel=tabData.view();getOpt(button.element,'id').each(function(id){set$9(tabview.element,'aria-labelledby',id);});Replacing.set(tabview,panel);detail.onChangeTab(tabview,button,panel);});});};var changeTabBy=function changeTabBy(section,byPred){getPart(section,detail,'tabbar').each(function(tabbar){byPred(tabbar).each(emitExecute);});};return{uid:detail.uid,dom:detail.dom,components:components,behaviours:get$3(detail.tabSectionBehaviours),events:derive$2(flatten([detail.selectFirst?[runOnAttached(function(section,_simulatedEvent){changeTabBy(section,Highlighting.getFirst);})]:[],[run$1(changeTab(),function(section,simulatedEvent){var button=simulatedEvent.event.button;changeTab$1(button);}),run$1(dismissTab(),function(section,simulatedEvent){var button=simulatedEvent.event.button;detail.onDismissTab(section,button);})]])),apis:{getViewItems:function getViewItems(section){return getPart(section,detail,'tabview').map(function(tabview){return Replacing.contents(tabview);}).getOr([]);},showTab:function showTab(section,tabKey){var getTabIfNotActive=function getTabIfNotActive(tabbar){var candidates=Highlighting.getCandidates(tabbar);var optTab=find$5(candidates,function(c){return Representing.getValue(c)===tabKey;});return optTab.filter(function(tab){return!Highlighting.isHighlighted(tabbar,tab);});};changeTabBy(section,getTabIfNotActive);}}};};var TabSection=composite({name:'TabSection',configFields:schema(),partFields:parts(),factory:factory,apis:{getViewItems:function getViewItems(apis,component){return apis.getViewItems(component);},showTab:function showTab(apis,component,tabKey){apis.showTab(component,tabKey);}}});var measureHeights=function measureHeights(allTabs,tabview,tabviewComp){return map$2(allTabs,function(_tab,i){Replacing.set(tabviewComp,allTabs[i].view());var rect=tabview.dom.getBoundingClientRect();Replacing.set(tabviewComp,[]);return rect.height;});};var getMaxHeight=function getMaxHeight(heights){return head(sort(heights,function(a,b){if(a>b){return-1;}else if(a<b){return+1;}else{return 0;}}));};var getMaxTabviewHeight=function getMaxTabviewHeight(dialog,tabview,tablist){var documentElement$1=documentElement(dialog).dom;var rootElm=ancestor(dialog,'.tox-dialog-wrap').getOr(dialog);var isFixed=get$e(rootElm,'position')==='fixed';var maxHeight;if(isFixed){maxHeight=Math.max(documentElement$1.clientHeight,window.innerHeight);}else{maxHeight=Math.max(documentElement$1.offsetHeight,documentElement$1.scrollHeight);}var tabviewHeight=get$d(tabview);var isTabListBeside=tabview.dom.offsetLeft>=tablist.dom.offsetLeft+get$c(tablist);var currentTabHeight=isTabListBeside?Math.max(get$d(tablist),tabviewHeight):tabviewHeight;var dialogTopMargin=parseInt(get$e(dialog,'margin-top'),10)||0;var dialogBottomMargin=parseInt(get$e(dialog,'margin-bottom'),10)||0;var dialogHeight=get$d(dialog)+dialogTopMargin+dialogBottomMargin;var chromeHeight=dialogHeight-currentTabHeight;return maxHeight-chromeHeight;};var showTab=function showTab(allTabs,comp){head(allTabs).each(function(tab){return TabSection.showTab(comp,tab.value);});};var setTabviewHeight=function setTabviewHeight(tabview,height){set$8(tabview,'height',height+'px');set$8(tabview,'flex-basis',height+'px');};var updateTabviewHeight=function updateTabviewHeight(dialogBody,tabview,maxTabHeight){ancestor(dialogBody,'[role="dialog"]').each(function(dialog){descendant(dialog,'[role="tablist"]').each(function(tablist){maxTabHeight.get().map(function(height){set$8(tabview,'height','0');set$8(tabview,'flex-basis','0');return Math.min(height,getMaxTabviewHeight(dialog,tabview,tablist));}).each(function(height){setTabviewHeight(tabview,height);});});});};var getTabview=function getTabview(dialog){return descendant(dialog,'[role="tabpanel"]');};var setMode=function setMode(allTabs){var smartTabHeight=function(){var maxTabHeight=value$2();var extraEvents=[runOnAttached(function(comp){var dialog=comp.element;getTabview(dialog).each(function(tabview){set$8(tabview,'visibility','hidden');comp.getSystem().getByDom(tabview).toOptional().each(function(tabviewComp){var heights=measureHeights(allTabs,tabview,tabviewComp);var maxTabHeightOpt=getMaxHeight(heights);maxTabHeightOpt.fold(maxTabHeight.clear,maxTabHeight.set);});updateTabviewHeight(dialog,tabview,maxTabHeight);remove$6(tabview,'visibility');showTab(allTabs,comp);requestAnimationFrame(function(){updateTabviewHeight(dialog,tabview,maxTabHeight);});});}),run$1(windowResize(),function(comp){var dialog=comp.element;getTabview(dialog).each(function(tabview){updateTabviewHeight(dialog,tabview,maxTabHeight);});}),run$1(formResizeEvent,function(comp,_se){var dialog=comp.element;getTabview(dialog).each(function(tabview){var oldFocus=active$1(getRootNode(tabview));set$8(tabview,'visibility','hidden');var oldHeight=getRaw(tabview,'height').map(function(h){return parseInt(h,10);});remove$6(tabview,'height');remove$6(tabview,'flex-basis');var newHeight=tabview.dom.getBoundingClientRect().height;var hasGrown=oldHeight.forall(function(h){return newHeight>h;});if(hasGrown){maxTabHeight.set(newHeight);updateTabviewHeight(dialog,tabview,maxTabHeight);}else{oldHeight.each(function(h){setTabviewHeight(tabview,h);});}remove$6(tabview,'visibility');oldFocus.each(focus$3);});})];var selectFirst=false;return{extraEvents:extraEvents,selectFirst:selectFirst};}();var naiveTabHeight=function(){var extraEvents=[];var selectFirst=true;return{extraEvents:extraEvents,selectFirst:selectFirst};}();return{smartTabHeight:smartTabHeight,naiveTabHeight:naiveTabHeight};};var SendDataToSectionChannel='send-data-to-section';var SendDataToViewChannel='send-data-to-view';var renderTabPanel=function renderTabPanel(spec,dialogData,backstage){var storedValue=Cell({});var updateDataWithForm=function updateDataWithForm(form){var formData=Representing.getValue(form);var validData=toValidValues(formData).getOr({});var currentData=storedValue.get();var newData=deepMerge(currentData,validData);storedValue.set(newData);};var setDataOnForm=function setDataOnForm(form){var tabData=storedValue.get();Representing.setValue(form,tabData);};var oldTab=Cell(null);var allTabs=map$2(spec.tabs,function(tab){return{value:tab.name,dom:{tag:'div',classes:['tox-dialog__body-nav-item']},components:[text$1(backstage.shared.providers.translate(tab.title))],view:function view(){return[Form.sketch(function(parts){return{dom:{tag:'div',classes:['tox-form']},components:map$2(tab.items,function(item){return interpretInForm(parts,item,dialogData,backstage);}),formBehaviours:derive$1([Keying.config({mode:'acyclic',useTabstopAt:not(isPseudoStop)}),config('TabView.form.events',[runOnAttached(setDataOnForm),runOnDetached(updateDataWithForm)]),Receiving.config({channels:wrapAll([{key:SendDataToSectionChannel,value:{onReceive:updateDataWithForm}},{key:SendDataToViewChannel,value:{onReceive:setDataOnForm}}])})])};})];}};});var tabMode=setMode(allTabs).smartTabHeight;return TabSection.sketch({dom:{tag:'div',classes:['tox-dialog__body']},onChangeTab:function onChangeTab(section,button,_viewItems){var name=Representing.getValue(button);emitWith(section,formTabChangeEvent,{name:name,oldName:oldTab.get()});oldTab.set(name);},tabs:allTabs,components:[TabSection.parts.tabbar({dom:{tag:'div',classes:['tox-dialog__body-nav']},components:[Tabbar.parts.tabs({})],markers:{tabClass:'tox-tab',selectedClass:'tox-dialog__body-nav-item--active'},tabbarBehaviours:derive$1([Tabstopping.config({})])}),TabSection.parts.tabview({dom:{tag:'div',classes:['tox-dialog__body-content']}})],selectFirst:tabMode.selectFirst,tabSectionBehaviours:derive$1([config('tabpanel',tabMode.extraEvents),Keying.config({mode:'acyclic'}),Composing.config({find:function find(comp){return head(TabSection.getViewItems(comp));}}),RepresentingConfigs.withComp(Optional.none(),function(tsection){tsection.getSystem().broadcastOn([SendDataToSectionChannel],{});return storedValue.get();},function(tsection,value){storedValue.set(value);tsection.getSystem().broadcastOn([SendDataToViewChannel],{});})])});};var dialogChannel=generate$6('update-dialog');var titleChannel=generate$6('update-title');var bodyChannel=generate$6('update-body');var footerChannel=generate$6('update-footer');var bodySendMessageChannel=generate$6('body-send-message');var renderBody=function renderBody(spec,dialogId,contentId,backstage,ariaAttrs){var renderComponents=function renderComponents(incoming){var body=incoming.body;switch(body.type){case'tabpanel':{return[renderTabPanel(body,incoming.initialData,backstage)];}default:{return[renderBodyPanel(body,incoming.initialData,backstage)];}}};var updateState=function updateState(_comp,incoming){return Optional.some({isTabPanel:function isTabPanel(){return incoming.body.type==='tabpanel';}});};var ariaAttributes={'aria-live':'polite'};return{dom:{tag:'div',classes:['tox-dialog__content-js'],attributes:_objectSpread({},contentId.map(function(x){return{id:x};}).getOr({}),{},ariaAttrs?ariaAttributes:{})},components:[],behaviours:derive$1([ComposingConfigs.childAt(0),Reflecting.config({channel:"".concat(bodyChannel,"-").concat(dialogId),updateState:updateState,renderComponents:renderComponents,initialData:spec})])};};var renderInlineBody=function renderInlineBody(spec,dialogId,contentId,backstage,ariaAttrs){return renderBody(spec,dialogId,Optional.some(contentId),backstage,ariaAttrs);};var renderModalBody=function renderModalBody(spec,dialogId,backstage){var bodySpec=renderBody(spec,dialogId,Optional.none(),backstage,false);return ModalDialog.parts.body(bodySpec);};var renderIframeBody=function renderIframeBody(spec){var bodySpec={dom:{tag:'div',classes:['tox-dialog__content-js']},components:[{dom:{tag:'div',classes:['tox-dialog__body-iframe']},components:[craft({dom:{tag:'iframe',attributes:{src:spec.url}},behaviours:derive$1([Tabstopping.config({}),Focusing.config({})])})]}],behaviours:derive$1([Keying.config({mode:'acyclic',useTabstopAt:not(isPseudoStop)})])};return ModalDialog.parts.body(bodySpec);};var isTouch=global$5.deviceType.isTouch();var hiddenHeader=function hiddenHeader(title,close){return{dom:{tag:'div',styles:{display:'none'},classes:['tox-dialog__header']},components:[title,close]};};var pClose=function pClose(onClose,providersBackstage){return ModalDialog.parts.close(Button.sketch({dom:{tag:'button',classes:['tox-button','tox-button--icon','tox-button--naked'],attributes:{'type':'button','aria-label':providersBackstage.translate('Close')}},action:onClose,buttonBehaviours:derive$1([Tabstopping.config({})])}));};var pUntitled=function pUntitled(){return ModalDialog.parts.title({dom:{tag:'div',classes:['tox-dialog__title'],innerHtml:'',styles:{display:'none'}}});};var pBodyMessage=function pBodyMessage(message,providersBackstage){return ModalDialog.parts.body({dom:{tag:'div',classes:['tox-dialog__body']},components:[{dom:{tag:'div',classes:['tox-dialog__body-content']},components:[{dom:fromHtml("<p>".concat(providersBackstage.translate(message),"</p>"))}]}]});};var pFooter=function pFooter(buttons){return ModalDialog.parts.footer({dom:{tag:'div',classes:['tox-dialog__footer']},components:buttons});};var pFooterGroup=function pFooterGroup(startButtons,endButtons){return[Container.sketch({dom:{tag:'div',classes:['tox-dialog__footer-start']},components:startButtons}),Container.sketch({dom:{tag:'div',classes:['tox-dialog__footer-end']},components:endButtons})];};var renderDialog$1=function renderDialog$1(spec){var _objectSpread7;var dialogClass='tox-dialog';var blockerClass=dialogClass+'-wrap';var blockerBackdropClass=blockerClass+'__backdrop';var scrollLockClass=dialogClass+'__disable-scroll';return ModalDialog.sketch({lazySink:spec.lazySink,onEscape:function onEscape(comp){spec.onEscape(comp);return Optional.some(true);},useTabstopAt:function useTabstopAt(elem){return!isPseudoStop(elem);},dom:{tag:'div',classes:[dialogClass].concat(spec.extraClasses),styles:_objectSpread({position:'relative'},spec.extraStyles)},components:[spec.header,spec.body].concat(_toConsumableArray(spec.footer.toArray())),parts:{blocker:{dom:fromHtml("<div class=\"".concat(blockerClass,"\"></div>")),components:[{dom:{tag:'div',classes:isTouch?[blockerBackdropClass,blockerBackdropClass+'--opaque']:[blockerBackdropClass]}}]}},dragBlockClass:blockerClass,modalBehaviours:derive$1([Focusing.config({}),config('dialog-events',spec.dialogEvents.concat([runOnSource(focusin(),function(comp,_se){Keying.focusIn(comp);})])),config('scroll-lock',[runOnAttached(function(){add$2(body(),scrollLockClass);}),runOnDetached(function(){remove$2(body(),scrollLockClass);})])].concat(_toConsumableArray(spec.extraBehaviours))),eventOrder:_objectSpread((_objectSpread7={},_defineProperty(_objectSpread7,execute$5(),['dialog-events']),_defineProperty(_objectSpread7,attachedToDom(),['scroll-lock','dialog-events','alloy.base.behaviour']),_defineProperty(_objectSpread7,detachedFromDom(),['alloy.base.behaviour','dialog-events','scroll-lock']),_objectSpread7),spec.eventOrder)});};var renderClose=function renderClose(providersBackstage){return Button.sketch({dom:{tag:'button',classes:['tox-button','tox-button--icon','tox-button--naked'],attributes:{'type':'button','aria-label':providersBackstage.translate('Close'),'title':providersBackstage.translate('Close')}},components:[render$3('close',{tag:'div',classes:['tox-icon']},providersBackstage.icons)],action:function action(comp){emit(comp,formCancelEvent);}});};var renderTitle=function renderTitle(spec,dialogId,titleId,providersBackstage){var renderComponents=function renderComponents(data){return[text$1(providersBackstage.translate(data.title))];};return{dom:{tag:'div',classes:['tox-dialog__title'],attributes:_objectSpread({},titleId.map(function(x){return{id:x};}).getOr({}))},components:[],behaviours:derive$1([Reflecting.config({channel:"".concat(titleChannel,"-").concat(dialogId),initialData:spec,renderComponents:renderComponents})])};};var renderDragHandle=function renderDragHandle(){return{dom:fromHtml('<div class="tox-dialog__draghandle"></div>')};};var renderInlineHeader=function renderInlineHeader(spec,dialogId,titleId,providersBackstage){return Container.sketch({dom:fromHtml('<div class="tox-dialog__header"></div>'),components:[renderTitle(spec,dialogId,Optional.some(titleId),providersBackstage),renderDragHandle(),renderClose(providersBackstage)],containerBehaviours:derive$1([Dragging.config({mode:'mouse',blockerClass:'blocker',getTarget:function getTarget(handle){return closest$1(handle,'[role="dialog"]').getOrDie();},snaps:{getSnapPoints:function getSnapPoints(){return[];},leftAttr:'data-drag-left',topAttr:'data-drag-top'}})])});};var renderModalHeader=function renderModalHeader(spec,dialogId,providersBackstage){var pTitle=ModalDialog.parts.title(renderTitle(spec,dialogId,Optional.none(),providersBackstage));var pHandle=ModalDialog.parts.draghandle(renderDragHandle());var pClose=ModalDialog.parts.close(renderClose(providersBackstage));var components=[pTitle].concat(spec.draggable?[pHandle]:[]).concat([pClose]);return Container.sketch({dom:fromHtml('<div class="tox-dialog__header"></div>'),components:components});};var getHeader=function getHeader(title,dialogId,backstage){return renderModalHeader({title:backstage.shared.providers.translate(title),draggable:backstage.dialog.isDraggableModal()},dialogId,backstage.shared.providers);};var getBusySpec=function getBusySpec(message,bs,providers){return{dom:{tag:'div',classes:['tox-dialog__busy-spinner'],attributes:{'aria-label':providers.translate(message)},styles:{left:'0px',right:'0px',bottom:'0px',top:'0px',position:'absolute'}},behaviours:bs,components:[{dom:fromHtml('<div class="tox-spinner"><div></div><div></div><div></div></div>')}]};};var getEventExtras=function getEventExtras(lazyDialog,providers,extra){return{onClose:function onClose(){return extra.closeWindow();},onBlock:function onBlock(blockEvent){ModalDialog.setBusy(lazyDialog(),function(_comp,bs){return getBusySpec(blockEvent.message,bs,providers);});},onUnblock:function onUnblock(){ModalDialog.setIdle(lazyDialog());}};};var renderModalDialog=function renderModalDialog(spec,initialData,dialogEvents,backstage){var _eventOrder6;var updateState=function updateState(_comp,incoming){return Optional.some(incoming);};return build$1(renderDialog$1(_objectSpread({},spec,{lazySink:backstage.shared.getSink,extraBehaviours:[Reflecting.config({channel:"".concat(dialogChannel,"-").concat(spec.id),updateState:updateState,initialData:initialData}),RepresentingConfigs.memory({})].concat(_toConsumableArray(spec.extraBehaviours)),onEscape:function onEscape(comp){emit(comp,formCancelEvent);},dialogEvents:dialogEvents,eventOrder:(_eventOrder6={},_defineProperty(_eventOrder6,receive(),[Reflecting.name(),Receiving.name()]),_defineProperty(_eventOrder6,attachedToDom(),['scroll-lock',Reflecting.name(),'messages','dialog-events','alloy.base.behaviour']),_defineProperty(_eventOrder6,detachedFromDom(),['alloy.base.behaviour','dialog-events','messages',Reflecting.name(),'scroll-lock']),_eventOrder6)})));};var mapMenuButtons=function mapMenuButtons(buttons){var mapItems=function mapItems(button){var items=map$2(button.items,function(item){var cell=Cell(false);return _objectSpread({},item,{storage:cell});});return _objectSpread({},button,{items:items});};return map$2(buttons,function(button){if(button.type==='menu'){return mapItems(button);}return button;});};var extractCellsToObject=function extractCellsToObject(buttons){return foldl(buttons,function(acc,button){if(button.type==='menu'){var menuButton=button;return foldl(menuButton.items,function(innerAcc,item){innerAcc[item.name]=item.storage;return innerAcc;},acc);}return acc;},{});};var initCommonEvents=function initCommonEvents(fireApiEvent,extras){return[runWithTarget(focusin(),onFocus),fireApiEvent(formCloseEvent,function(_api,spec){extras.onClose();spec.onClose();}),fireApiEvent(formCancelEvent,function(api,spec,_event,self){spec.onCancel(api);emit(self,formCloseEvent);}),run$1(formUnblockEvent,function(_c,_se){return extras.onUnblock();}),run$1(formBlockEvent,function(_c,se){return extras.onBlock(se.event);})];};var initUrlDialog=function initUrlDialog(getInstanceApi,extras){var fireApiEvent=function fireApiEvent(eventName,f){return run$1(eventName,function(c,se){withSpec(c,function(spec,_c){f(getInstanceApi(),spec,se.event,c);});});};var withSpec=function withSpec(c,f){Reflecting.getState(c).get().each(function(currentDialog){f(currentDialog,c);});};return[].concat(_toConsumableArray(initCommonEvents(fireApiEvent,extras)),[fireApiEvent(formActionEvent,function(api,spec,event){spec.onAction(api,{name:event.name});})]);};var initDialog=function initDialog(getInstanceApi,extras,getSink){var fireApiEvent=function fireApiEvent(eventName,f){return run$1(eventName,function(c,se){withSpec(c,function(spec,_c){f(getInstanceApi(),spec,se.event,c);});});};var withSpec=function withSpec(c,f){Reflecting.getState(c).get().each(function(currentDialogInit){f(currentDialogInit.internalDialog,c);});};return[].concat(_toConsumableArray(initCommonEvents(fireApiEvent,extras)),[fireApiEvent(formSubmitEvent,function(api,spec){return spec.onSubmit(api);}),fireApiEvent(formChangeEvent,function(api,spec,event){spec.onChange(api,{name:event.name});}),fireApiEvent(formActionEvent,function(api,spec,event,component){var focusIn=function focusIn(){return Keying.focusIn(component);};var isDisabled=function isDisabled(focused){return has$1(focused,'disabled')||getOpt(focused,'aria-disabled').exists(function(val){return val==='true';});};var rootNode=getRootNode(component.element);var current=active$1(rootNode);spec.onAction(api,{name:event.name,value:event.value});active$1(rootNode).fold(focusIn,function(focused){if(isDisabled(focused)){focusIn();}else if(current.exists(function(cur){return contains(focused,cur)&&isDisabled(cur);})){focusIn();}else{getSink().toOptional().filter(function(sink){return!contains(sink.element,focused);}).each(focusIn);}});}),fireApiEvent(formTabChangeEvent,function(api,spec,event){spec.onTabChange(api,{newTabName:event.name,oldTabName:event.oldName});}),runOnDetached(function(component){var api=getInstanceApi();Representing.setValue(component,api.getData());})]);};var SilverDialogEvents={initUrlDialog:initUrlDialog,initDialog:initDialog};var makeButton=function makeButton(button,backstage){return renderFooterButton(button,button.type,backstage);};var lookup=function lookup(compInSystem,footerButtons,buttonName){return find$5(footerButtons,function(button){return button.name===buttonName;}).bind(function(memButton){return memButton.memento.getOpt(compInSystem);});};var renderComponents=function renderComponents(_data,state){var footerButtons=state.map(function(s){return s.footerButtons;}).getOr([]);var buttonGroups=partition$3(footerButtons,function(button){return button.align==='start';});var makeGroup=function makeGroup(edge,buttons){return Container.sketch({dom:{tag:'div',classes:["tox-dialog__footer-".concat(edge)]},components:map$2(buttons,function(button){return button.memento.asSpec();})});};var startButtons=makeGroup('start',buttonGroups.pass);var endButtons=makeGroup('end',buttonGroups.fail);return[startButtons,endButtons];};var renderFooter=function renderFooter(initSpec,dialogId,backstage){var updateState=function updateState(comp,data){var footerButtons=map$2(data.buttons,function(button){var memButton=record(makeButton(button,backstage));return{name:button.name,align:button.align,memento:memButton};});var lookupByName=function lookupByName(buttonName){return lookup(comp,footerButtons,buttonName);};return Optional.some({lookupByName:lookupByName,footerButtons:footerButtons});};return{dom:fromHtml('<div class="tox-dialog__footer"></div>'),components:[],behaviours:derive$1([Reflecting.config({channel:"".concat(footerChannel,"-").concat(dialogId),initialData:initSpec,updateState:updateState,renderComponents:renderComponents})])};};var renderInlineFooter=function renderInlineFooter(initSpec,dialogId,backstage){return renderFooter(initSpec,dialogId,backstage);};var renderModalFooter=function renderModalFooter(initSpec,dialogId,backstage){return ModalDialog.parts.footer(renderFooter(initSpec,dialogId,backstage));};var getCompByName=function getCompByName(access,name){var root=access.getRoot();if(root.getSystem().isConnected()){var form=Composing.getCurrent(access.getFormWrapper()).getOr(access.getFormWrapper());return Form.getField(form,name).orThunk(function(){var footer=access.getFooter();var footerState=Reflecting.getState(footer).get();return footerState.bind(function(f){return f.lookupByName(name);});});}else{return Optional.none();}};var validateData$1=function validateData$1(access,data){var root=access.getRoot();return Reflecting.getState(root).get().map(function(dialogState){return getOrDie(asRaw('data',dialogState.dataValidator,data));}).getOr(data);};var getDialogApi=function getDialogApi(access,doRedial,menuItemStates){var withRoot=function withRoot(f){var root=access.getRoot();if(root.getSystem().isConnected()){f(root);}};var getData=function getData(){var root=access.getRoot();var valueComp=root.getSystem().isConnected()?access.getFormWrapper():root;var representedValues=Representing.getValue(valueComp);var menuItemCurrentState=map$1(menuItemStates,function(cell){return cell.get();});return _objectSpread({},representedValues,{},menuItemCurrentState);};var setData=function setData(newData){withRoot(function(_){var prevData=instanceApi.getData();var mergedData=deepMerge(prevData,newData);var newInternalData=validateData$1(access,mergedData);var form=access.getFormWrapper();Representing.setValue(form,newInternalData);each(menuItemStates,function(v,k){if(has$2(mergedData,k)){v.set(mergedData[k]);}});});};var setEnabled=function setEnabled(name,state){getCompByName(access,name).each(state?Disabling.enable:Disabling.disable);};var focus=function focus(name){getCompByName(access,name).each(Focusing.focus);};var block=function block(message){if(!isString(message)){throw new Error('The dialogInstanceAPI.block function should be passed a blocking message of type string as an argument');}withRoot(function(root){emitWith(root,formBlockEvent,{message:message});});};var unblock=function unblock(){withRoot(function(root){emit(root,formUnblockEvent);});};var showTab=function showTab(name){withRoot(function(_){var body=access.getBody();var bodyState=Reflecting.getState(body);if(bodyState.get().exists(function(b){return b.isTabPanel();})){Composing.getCurrent(body).each(function(tabSection){TabSection.showTab(tabSection,name);});}});};var redial=function redial(d){withRoot(function(root){var id=access.getId();var dialogInit=doRedial(d);root.getSystem().broadcastOn(["".concat(dialogChannel,"-").concat(id)],dialogInit);root.getSystem().broadcastOn(["".concat(titleChannel,"-").concat(id)],dialogInit.internalDialog);root.getSystem().broadcastOn(["".concat(bodyChannel,"-").concat(id)],dialogInit.internalDialog);root.getSystem().broadcastOn(["".concat(footerChannel,"-").concat(id)],dialogInit.internalDialog);instanceApi.setData(dialogInit.initialData);});};var close=function close(){withRoot(function(root){emit(root,formCloseEvent);});};var instanceApi={getData:getData,setData:setData,setEnabled:setEnabled,focus:focus,block:block,unblock:unblock,showTab:showTab,redial:redial,close:close};return instanceApi;};var getDialogSizeClasses=function getDialogSizeClasses(size){switch(size){case'large':return['tox-dialog--width-lg'];case'medium':return['tox-dialog--width-md'];default:return[];}};var renderDialog=function renderDialog(dialogInit,extra,backstage){var dialogId=generate$6('dialog');var internalDialog=dialogInit.internalDialog;var header=getHeader(internalDialog.title,dialogId,backstage);var body=renderModalBody({body:internalDialog.body,initialData:internalDialog.initialData},dialogId,backstage);var storagedMenuButtons=mapMenuButtons(internalDialog.buttons);var objOfCells=extractCellsToObject(storagedMenuButtons);var footer=renderModalFooter({buttons:storagedMenuButtons},dialogId,backstage);var dialogEvents=SilverDialogEvents.initDialog(function(){return instanceApi;},getEventExtras(function(){return dialog;},backstage.shared.providers,extra),backstage.shared.getSink);var dialogSize=getDialogSizeClasses(internalDialog.size);var spec={id:dialogId,header:header,body:body,footer:Optional.some(footer),extraClasses:dialogSize,extraBehaviours:[],extraStyles:{}};var dialog=renderModalDialog(spec,dialogInit,dialogEvents,backstage);var modalAccess=function(){var getForm=function getForm(){var outerForm=ModalDialog.getBody(dialog);return Composing.getCurrent(outerForm).getOr(outerForm);};return{getId:constant$1(dialogId),getRoot:constant$1(dialog),getBody:function getBody(){return ModalDialog.getBody(dialog);},getFooter:function getFooter(){return ModalDialog.getFooter(dialog);},getFormWrapper:getForm};}();var instanceApi=getDialogApi(modalAccess,extra.redial,objOfCells);return{dialog:dialog,instanceApi:instanceApi};};var renderInlineDialog=function renderInlineDialog(dialogInit,extra,backstage,ariaAttrs){var _attributes4,_eventOrder7;var dialogId=generate$6('dialog');var dialogLabelId=generate$6('dialog-label');var dialogContentId=generate$6('dialog-content');var internalDialog=dialogInit.internalDialog;var updateState=function updateState(_comp,incoming){return Optional.some(incoming);};var memHeader=record(renderInlineHeader({title:internalDialog.title,draggable:true},dialogId,dialogLabelId,backstage.shared.providers));var memBody=record(renderInlineBody({body:internalDialog.body,initialData:internalDialog.initialData},dialogId,dialogContentId,backstage,ariaAttrs));var storagedMenuButtons=mapMenuButtons(internalDialog.buttons);var objOfCells=extractCellsToObject(storagedMenuButtons);var memFooter=record(renderInlineFooter({buttons:storagedMenuButtons},dialogId,backstage));var dialogEvents=SilverDialogEvents.initDialog(function(){return instanceApi;},{onBlock:function onBlock(event){Blocking.block(dialog,function(_comp,bs){return getBusySpec(event.message,bs,backstage.shared.providers);});},onUnblock:function onUnblock(){Blocking.unblock(dialog);},onClose:function onClose(){return extra.closeWindow();}},backstage.shared.getSink);var dialog=build$1({dom:{tag:'div',classes:['tox-dialog','tox-dialog-inline'],attributes:(_attributes4={role:'dialog'},_defineProperty(_attributes4,'aria-labelledby',dialogLabelId),_defineProperty(_attributes4,'aria-describedby',dialogContentId),_attributes4)},eventOrder:(_eventOrder7={},_defineProperty(_eventOrder7,receive(),[Reflecting.name(),Receiving.name()]),_defineProperty(_eventOrder7,execute$5(),['execute-on-form']),_defineProperty(_eventOrder7,attachedToDom(),['reflecting','execute-on-form']),_eventOrder7),behaviours:derive$1([Keying.config({mode:'cyclic',onEscape:function onEscape(c){emit(c,formCloseEvent);return Optional.some(true);},useTabstopAt:function useTabstopAt(elem){return!isPseudoStop(elem)&&(name$3(elem)!=='button'||get$f(elem,'disabled')!=='disabled');}}),Reflecting.config({channel:"".concat(dialogChannel,"-").concat(dialogId),updateState:updateState,initialData:dialogInit}),Focusing.config({}),config('execute-on-form',dialogEvents.concat([runOnSource(focusin(),function(comp,_se){Keying.focusIn(comp);})])),Blocking.config({getRoot:function getRoot(){return Optional.some(dialog);}}),Replacing.config({}),RepresentingConfigs.memory({})]),components:[memHeader.asSpec(),memBody.asSpec(),memFooter.asSpec()]});var instanceApi=getDialogApi({getId:constant$1(dialogId),getRoot:constant$1(dialog),getFooter:function getFooter(){return memFooter.get(dialog);},getBody:function getBody(){return memBody.get(dialog);},getFormWrapper:function getFormWrapper(){var body=memBody.get(dialog);return Composing.getCurrent(body).getOr(body);}},extra.redial,objOfCells);return{dialog:dialog,instanceApi:instanceApi};};var global=tinymce.util.Tools.resolve('tinymce.util.URI');var getUrlDialogApi=function getUrlDialogApi(root){var withRoot=function withRoot(f){if(root.getSystem().isConnected()){f(root);}};var block=function block(message){if(!isString(message)){throw new Error('The urlDialogInstanceAPI.block function should be passed a blocking message of type string as an argument');}withRoot(function(root){emitWith(root,formBlockEvent,{message:message});});};var unblock=function unblock(){withRoot(function(root){emit(root,formUnblockEvent);});};var close=function close(){withRoot(function(root){emit(root,formCloseEvent);});};var sendMessage=function sendMessage(data){withRoot(function(root){root.getSystem().broadcastOn([bodySendMessageChannel],data);});};return{block:block,unblock:unblock,close:close,sendMessage:sendMessage};};var SUPPORTED_MESSAGE_ACTIONS=['insertContent','setContent','execCommand','close','block','unblock'];var isSupportedMessage=function isSupportedMessage(data){return isObject(data)&&SUPPORTED_MESSAGE_ACTIONS.indexOf(data.mceAction)!==-1;};var isCustomMessage=function isCustomMessage(data){return!isSupportedMessage(data)&&isObject(data)&&has$2(data,'mceAction');};var handleMessage=function handleMessage(editor,api,data){switch(data.mceAction){case'insertContent':editor.insertContent(data.content);break;case'setContent':editor.setContent(data.content);break;case'execCommand':var ui=isBoolean(data.ui)?data.ui:false;editor.execCommand(data.cmd,ui,data.value);break;case'close':api.close();break;case'block':api.block(data.message);break;case'unblock':api.unblock();break;}};var renderUrlDialog=function renderUrlDialog(internalDialog,extra,editor,backstage){var dialogId=generate$6('dialog');var header=getHeader(internalDialog.title,dialogId,backstage);var body=renderIframeBody(internalDialog);var footer=internalDialog.buttons.bind(function(buttons){if(buttons.length===0){return Optional.none();}else{return Optional.some(renderModalFooter({buttons:buttons},dialogId,backstage));}});var dialogEvents=SilverDialogEvents.initUrlDialog(function(){return instanceApi;},getEventExtras(function(){return dialog;},backstage.shared.providers,extra));var styles=_objectSpread({},internalDialog.height.fold(function(){return{};},function(height){return{'height':height+'px','max-height':height+'px'};}),{},internalDialog.width.fold(function(){return{};},function(width){return{'width':width+'px','max-width':width+'px'};}));var classes=internalDialog.width.isNone()&&internalDialog.height.isNone()?['tox-dialog--width-lg']:[];var iframeUri=new global(internalDialog.url,{base_uri:new global(window.location.href)});var iframeDomain="".concat(iframeUri.protocol,"://").concat(iframeUri.host).concat(iframeUri.port?':'+iframeUri.port:'');var messageHandlerUnbinder=unbindable();var extraBehaviours=[config('messages',[runOnAttached(function(){var unbind=bind(SugarElement.fromDom(window),'message',function(e){if(iframeUri.isSameOrigin(new global(e.raw.origin))){var data=e.raw.data;if(isSupportedMessage(data)){handleMessage(editor,instanceApi,data);}else if(isCustomMessage(data)){internalDialog.onMessage(instanceApi,data);}}});messageHandlerUnbinder.set(unbind);}),runOnDetached(messageHandlerUnbinder.clear)]),Receiving.config({channels:_defineProperty({},bodySendMessageChannel,{onReceive:function onReceive(comp,data){descendant(comp.element,'iframe').each(function(iframeEle){var iframeWin=iframeEle.dom.contentWindow;iframeWin.postMessage(data,iframeDomain);});}})})];var spec={id:dialogId,header:header,body:body,footer:footer,extraClasses:classes,extraBehaviours:extraBehaviours,extraStyles:styles};var dialog=renderModalDialog(spec,internalDialog,dialogEvents,backstage);var instanceApi=getUrlDialogApi(dialog);return{dialog:dialog,instanceApi:instanceApi};};var setup$2=function setup$2(extras){var sharedBackstage=extras.backstage.shared;var open=function open(message,callback){var closeDialog=function closeDialog(){ModalDialog.hide(alertDialog);callback();};var memFooterClose=record(renderFooterButton({name:'close-alert',text:'OK',primary:true,buttonType:Optional.some('primary'),align:'end',enabled:true,icon:Optional.none()},'cancel',extras.backstage));var titleSpec=pUntitled();var closeSpec=pClose(closeDialog,sharedBackstage.providers);var alertDialog=build$1(renderDialog$1({lazySink:function lazySink(){return sharedBackstage.getSink();},header:hiddenHeader(titleSpec,closeSpec),body:pBodyMessage(message,sharedBackstage.providers),footer:Optional.some(pFooter(pFooterGroup([],[memFooterClose.asSpec()]))),onEscape:closeDialog,extraClasses:['tox-alert-dialog'],extraBehaviours:[],extraStyles:{},dialogEvents:[run$1(formCancelEvent,closeDialog)],eventOrder:{}}));ModalDialog.show(alertDialog);var footerCloseButton=memFooterClose.get(alertDialog);Focusing.focus(footerCloseButton);};return{open:open};};var setup$1=function setup$1(extras){var sharedBackstage=extras.backstage.shared;var open=function open(message,callback){var closeDialog=function closeDialog(state){ModalDialog.hide(confirmDialog);callback(state);};var memFooterYes=record(renderFooterButton({name:'yes',text:'Yes',primary:true,buttonType:Optional.some('primary'),align:'end',enabled:true,icon:Optional.none()},'submit',extras.backstage));var footerNo=renderFooterButton({name:'no',text:'No',primary:false,buttonType:Optional.some('secondary'),align:'end',enabled:true,icon:Optional.none()},'cancel',extras.backstage);var titleSpec=pUntitled();var closeSpec=pClose(function(){return closeDialog(false);},sharedBackstage.providers);var confirmDialog=build$1(renderDialog$1({lazySink:function lazySink(){return sharedBackstage.getSink();},header:hiddenHeader(titleSpec,closeSpec),body:pBodyMessage(message,sharedBackstage.providers),footer:Optional.some(pFooter(pFooterGroup([],[footerNo,memFooterYes.asSpec()]))),onEscape:function onEscape(){return closeDialog(false);},extraClasses:['tox-confirm-dialog'],extraBehaviours:[],extraStyles:{},dialogEvents:[run$1(formCancelEvent,function(){return closeDialog(false);}),run$1(formSubmitEvent,function(){return closeDialog(true);})],eventOrder:{}}));ModalDialog.show(confirmDialog);var footerYesButton=memFooterYes.get(confirmDialog);Focusing.focus(footerYesButton);};return{open:open};};var validateData=function validateData(data,validator){return getOrDie(asRaw('data',validator,data));};var isAlertOrConfirmDialog=function isAlertOrConfirmDialog(target){return closest(target,'.tox-alert-dialog')||closest(target,'.tox-confirm-dialog');};var inlineAdditionalBehaviours=function inlineAdditionalBehaviours(editor,isStickyToolbar,isToolbarLocationTop){if(isStickyToolbar&&isToolbarLocationTop){return[];}else{return[Docking.config({contextual:{lazyContext:function lazyContext(){return Optional.some(box$1(SugarElement.fromDom(editor.getContentAreaContainer())));},fadeInClass:'tox-dialog-dock-fadein',fadeOutClass:'tox-dialog-dock-fadeout',transitionClass:'tox-dialog-dock-transition'},modes:['top']})];}};var setup=function setup(extras){var backstage=extras.backstage;var editor=extras.editor;var isStickyToolbar$1=isStickyToolbar(editor);var alertDialog=setup$2(extras);var confirmDialog=setup$1(extras);var open=function open(config,params,closeWindow){if(params!==undefined&&params.inline==='toolbar'){return openInlineDialog(config,backstage.shared.anchors.inlineDialog(),closeWindow,params.ariaAttrs);}else if(params!==undefined&&params.inline==='cursor'){return openInlineDialog(config,backstage.shared.anchors.cursor(),closeWindow,params.ariaAttrs);}else{return openModalDialog(config,closeWindow);}};var openUrl=function openUrl(config,closeWindow){return openModalUrlDialog(config,closeWindow);};var openModalUrlDialog=function openModalUrlDialog(config,_closeWindow){var factory=function factory(contents){var dialog=renderUrlDialog(contents,{closeWindow:function closeWindow(){ModalDialog.hide(dialog.dialog);_closeWindow(dialog.instanceApi);}},editor,backstage);ModalDialog.show(dialog.dialog);return dialog.instanceApi;};return DialogManager.openUrl(factory,config);};var openModalDialog=function openModalDialog(config,_closeWindow2){var factory=function factory(contents,internalInitialData,dataValidator){var initialData=internalInitialData;var dialogInit={dataValidator:dataValidator,initialData:initialData,internalDialog:contents};var dialog=renderDialog(dialogInit,{redial:DialogManager.redial,closeWindow:function closeWindow(){ModalDialog.hide(dialog.dialog);_closeWindow2(dialog.instanceApi);}},backstage);ModalDialog.show(dialog.dialog);dialog.instanceApi.setData(initialData);return dialog.instanceApi;};return DialogManager.open(factory,config);};var openInlineDialog=function openInlineDialog(config$1,anchor,_closeWindow3,ariaAttrs){var factory=function factory(contents,internalInitialData,dataValidator){var initialData=validateData(internalInitialData,dataValidator);var inlineDialog=value$2();var isToolbarLocationTop=backstage.shared.header.isPositionedAtTop();var dialogInit={dataValidator:dataValidator,initialData:initialData,internalDialog:contents};var refreshDocking=function refreshDocking(){return inlineDialog.on(function(dialog){InlineView.reposition(dialog);Docking.refresh(dialog);});};var dialogUi=renderInlineDialog(dialogInit,{redial:DialogManager.redial,closeWindow:function closeWindow(){inlineDialog.on(InlineView.hide);editor.off('ResizeEditor',refreshDocking);inlineDialog.clear();_closeWindow3(dialogUi.instanceApi);}},backstage,ariaAttrs);var inlineDialogComp=build$1(InlineView.sketch(_objectSpread({lazySink:backstage.shared.getSink,dom:{tag:'div',classes:[]},fireDismissalEventInstead:{}},isToolbarLocationTop?{}:{fireRepositionEventInstead:{}},{inlineBehaviours:derive$1([config('window-manager-inline-events',[run$1(dismissRequested(),function(_comp,_se){emit(dialogUi.dialog,formCancelEvent);})])].concat(_toConsumableArray(inlineAdditionalBehaviours(editor,isStickyToolbar$1,isToolbarLocationTop)))),isExtraPart:function isExtraPart(_comp,target){return isAlertOrConfirmDialog(target);}})));inlineDialog.set(inlineDialogComp);InlineView.showWithin(inlineDialogComp,premade(dialogUi.dialog),{anchor:anchor},Optional.some(body()));if(!isStickyToolbar$1||!isToolbarLocationTop){Docking.refresh(inlineDialogComp);editor.on('ResizeEditor',refreshDocking);}dialogUi.instanceApi.setData(initialData);Keying.focusIn(dialogUi.dialog);return dialogUi.instanceApi;};return DialogManager.open(factory,config$1);};var confirm=function confirm(message,callback){confirmDialog.open(message,function(state){callback(state);});};var alert=function alert(message,callback){alertDialog.open(message,function(){callback();});};var close=function close(instanceApi){instanceApi.close();};return{open:open,openUrl:openUrl,alert:alert,close:close,confirm:confirm};};var registerOptions=function registerOptions(editor){register$e(editor);register$d(editor);register(editor);};var Theme=function Theme(){global$a.add('silver',function(editor){registerOptions(editor);var _setup$=setup$3(editor),getUiMothership=_setup$.getUiMothership,backstage=_setup$.backstage,renderUI=_setup$.renderUI;Autocompleter.register(editor,backstage.shared);var windowMgr=setup({editor:editor,backstage:backstage});return{renderUI:renderUI,getWindowManagerImpl:constant$1(windowMgr),getNotificationManagerImpl:function getNotificationManagerImpl(){return NotificationManagerImpl(editor,{backstage:backstage},getUiMothership());}};});};Theme();})();